{
.appVersion = "3151";
.formatVersion = 3;
DisplayStrings = (
"",
J,
"",
"ï¹”"
);
customParameters = (
{
name = vendorID;
value = PfEd;
},
{
name = panose;
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
5,
6,
7,
31,
32,
34,
35,
37,
38,
39,
42,
43,
45,
46,
47,
60
);
},
{
name = codePageRanges;
value = (
"1252",
"1250",
"1251",
"1253",
"1257",
"bit 29",
"869",
"866",
"855",
"852",
"775",
"737",
"850"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
k,
uni00A0,
yen,
registered,
eth,
hbar,
circumflex,
tilde,
uni0302,
tildecomb,
uni03DD,
uni03F0,
uni2035,
uni210F,
uni2127,
uni2132,
uni2136,
uni2137,
uni2138,
uni2141,
arrowleft,
arrowright,
uni219A,
uni219B,
uni219E,
uni21A0,
uni21A2,
uni21A3,
uni21AB,
uni21AC,
uni21AD,
uni21AE,
uni21B0,
uni21B1,
uni21B6,
uni21B7,
uni21BA,
uni21BB,
uni21BE,
uni21BF,
uni21C2,
uni21C3,
uni21C4,
uni21C6,
uni21C7,
uni21C8,
uni21C9,
uni21CA,
uni21CB,
uni21CC,
uni21CD,
uni21CE,
uni21CF,
uni21DA,
uni21DB,
uni21DD,
uni21E0,
uni21E2,
uni2201,
uni2204,
emptyset,
uni220D,
minus,
uni2214,
uni2216,
proportional,
angle,
uni2221,
uni2222,
uni2223,
uni2224,
uni2225,
uni2226,
therefore,
uni2235,
similar,
uni223D,
uni2241,
uni2242,
uni2246,
approxequal,
uni224A,
uni224E,
uni224F,
uni2251,
uni2252,
uni2253,
uni2256,
uni2257,
uni225C,
uni2266,
uni2267,
uni2268,
uni2269,
uni226C,
uni226E,
uni226F,
uni2270,
uni2271,
uni2272,
uni2273,
uni2276,
uni2277,
uni227C,
uni227D,
uni227E,
uni227F,
uni2280,
uni2281,
uni2288,
uni2289,
uni228A,
uni228B,
uni228F,
uni2290,
uni229A,
uni229B,
uni229D,
uni229E,
uni229F,
uni22A0,
uni22A1,
uni22A8,
uni22A9,
uni22AA,
uni22AC,
uni22AD,
uni22AE,
uni22AF,
uni22B2,
uni22B3,
uni22B4,
uni22B5,
uni22B8,
uni22BA,
uni22BB,
uni22BC,
dotmath,
uni22C7,
uni22C9,
uni22CA,
uni22CB,
uni22CC,
uni22CD,
uni22CE,
uni22CF,
uni22D0,
uni22D1,
uni22D2,
uni22D3,
uni22D4,
uni22D6,
uni22D7,
uni22D8,
uni22D9,
uni22DA,
uni22DB,
uni22DE,
uni22DF,
uni22E0,
uni22E1,
uni22E6,
uni22E7,
uni22E8,
uni22E9,
uni22EA,
uni22EB,
uni22EC,
uni22ED,
uni2322,
uni2323,
uni24C8,
uni250C,
uni2510,
uni2514,
uni2518,
uni2571,
uni2572,
filledbox,
uni25A1,
triagup,
uni25B3,
uni25B6,
triagdn,
uni25BD,
uni25C0,
lozenge,
uni2605,
uni2713,
uni2720,
uni29EB,
uni2A5E,
uni2A7D,
uni2A7E,
uni2A85,
uni2A86,
uni2A87,
uni2A88,
uni2A89,
uni2A8A,
uni2A8B,
uni2A8C,
uni2A95,
uni2A96,
uni2AB5,
uni2AB6,
uni2AB7,
uni2AB8,
uni2AB9,
uni2ABA,
uni2AC5,
uni2AC6,
uni2ACB,
uni2ACC,
uniE006,
uniE007,
uniE008,
uniE009,
uniE00C,
uniE00D,
uniE00E,
uniE00F,
uniE010,
uniE011,
uniE016,
uniE017,
uniE018,
uniE019,
uniE01A,
uniE01B,
uni21AF
);
}
);
date = "1904-01-01 00:00:00 +0000";
familyName = KaTeX_AMS;
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 800;
},
{
name = typoDescender;
value = -200;
},
{
name = typoLineGap;
value = 90;
},
{
name = winAscent;
value = 1003;
},
{
name = winDescent;
value = 463;
},
{
name = hheaAscender;
value = 1003;
},
{
name = hheaDescender;
value = -463;
},
{
name = strikeoutPosition;
value = 258;
},
{
name = strikeoutSize;
value = 49;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01212 5 1 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01217 3 1 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 3 values pushed */\012832 1 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 3 values pushed */\01264 1 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 3 1 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    34,\012    34,\012    35,\012    35,\012    685,\012    0,\012    685,\012    685,\012    \"-18\",\012    685\012)";
}
);
id = m01;
metricValues = (
{
pos = 800;
},
{
pos = 685;
},
{
},
{
},
{
pos = -200;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(200,533,l),
(50,533,l),
(50,0,l),
(200,0,l)
);
},
{
closed = 1;
nodes = (
(150,483,l),
(150,50,l),
(100,50,l),
(100,483,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
0 0 0 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 4 1 1 2 1 79 0 0 7 6 5 4 0 3 0 3 17 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = ".notdef";
},
{
glyphname = .null;
layers = (
{
layerId = m01;
width = 0;
}
);
note = ".null";
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 333;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 250;
}
);
note = space;
unicode = 32;
},
{
glyphname = A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(703,24,o),
(693,35,o),
(684,35,qs),
(672,35,o),
(663,42,qs),
(646,54,o),
(630,85,qs),
(620,105,o),
(486,413,o),
(361,697,o),
(359,698,q),
(347,711,o),
(333,697,qs),
(330,694,o),
(105,104,qs),
(92,69,o),
(79,54,q),
(61,38,o),
(38,35,qs),
(25,34,o),
(20,27,qs),
(16,20,o),
(20,5,o),
(27,2,qs),
(31,0,o),
(231,0,o),
(235,2,qs),
(242,5,o),
(246,21,o),
(241,28,qs),
(237,34,o),
(224,35,qs),
(200,38,o),
(185,68,o),
(185,101,qs),
(185,132,o),
(193,172,qs),
(197,193,o),
(198,194,q),
(198,197,l),
(418,197,l),
(424,180,ls),
(455,92,o),
(455,67,qs),
(455,62,l),
(427,37,o),
(400,36,qs),
(398,36,o),
(393,35,o),
(389,34,o),
(388,34,qs),
(383,34,o),
(376,25,q),
(371,6,o),
(386,1,qs),
(388,0,o),
(539,0,qs),
(689,0,l),
(703,7,o),
(703,17,qs)
);
},
{
closed = 1;
nodes = (
(490,89,o),
(469,158,qs),
(434,262,o),
(327,506,qs),
(311,543,o),
(311,544,qs),
(311,546,o),
(348,639,q),
(470,361,ls),
(490,315,o),
(535,211,o),
(560,153,o),
(587,94,o),
(604,58,o),
(611,47,qs),
(618,38,o),
(618,36,qs),
(618,35,o),
(548,35,qs),
(477,35,l),
(490,48,o),
(490,67,qs)
);
},
{
closed = 1;
nodes = (
(208,232,o),
(208,233,qs),
(208,239,o),
(236,325,qs),
(293,489,o),
(297,489,qs),
(329,489,o),
(404,232,q),
(306,232,ls)
);
},
{
closed = 1;
nodes = (
(115,41,o),
(128,64,o),
(135,84,o),
(146,116,o),
(149,122,q),
(150,122,o),
(150,101,qs),
(150,61,o),
(163,35,q),
(109,35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
14 1 1 2 1 76 73 1 6 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 6 7 6 133 9 1 7 0 2 1 7 2 103 10 8 5 4 4 1 1 0 97 3 1 0 0 15 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 39 values pushed */
0 6 7 6 133 9 1 7 0 2 1 7 2 103 10 8 5 4 4 1 0 0 1 89 10 8 5 4 4 1 1 0 97 3 1 0 1 0 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
91 91 82 82 91 100 91 100 82 90 82 90 84 83 63 61 57 55 45 21 55 33 11 7 26 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(9,678,o),
(9,667,qs),
(9,654,o),
(21,651,qs),
(22,651,o),
(29,650,o),
(40,650,o),
(45,650,qs),
(48,650,o),
(54,650,qs),
(80,649,o),
(101,638,o),
(104,617,qs),
(104,616,o),
(104,584,o),
(104,529,o),
(105,463,o),
(105,380,o),
(105,304,o),
(105,221,o),
(104,155,o),
(104,101,o),
(104,69,o),
(104,68,qs),
(102,51,o),
(93,44,qs),
(85,37,o),
(45,35,qs),
(40,35,o),
(29,34,o),
(22,34,o),
(21,34,q),
(9,27,o),
(9,16,qs),
(9,4,o),
(22,1,q),
(24,0,o),
(200,0,qs),
(379,1,o),
(409,5,qs),
(498,19,o),
(608,98,o),
(619,158,qs),
(620,164,o),
(620,185,qs),
(620,211,o),
(618,220,qs),
(608,271,o),
(537,346,o),
(485,363,qs),
(472,367,l),
(483,374,l),
(524,395,o),
(583,470,o),
(583,513,qs),
(583,560,o),
(565,595,qs),
(531,662,o),
(429,678,qs),
(419,680,o),
(416,680,q),
(394,684,o),
(203,685,qs),
(23,685,o),
(20,683,qs)
);
},
{
closed = 1;
nodes = (
(140,577,o),
(140,603,o),
(140,620,o),
(137,632,o),
(137,636,o),
(132,647,o),
(131,650,q),
(240,650,l),
(233,640,o),
(228,624,qs),
(226,614,o),
(226,342,qs),
(226,71,o),
(228,61,qs),
(233,45,o),
(240,35,q),
(131,35,l),
(132,38,o),
(137,49,o),
(137,53,o),
(140,65,o),
(140,82,o),
(140,108,o),
(140,130,qs),
(140,343,l),
(140,555,ls)
);
},
{
closed = 1;
nodes = (
(418,436,o),
(348,372,o),
(269,372,qs),
(262,372,l),
(262,495,l),
(263,619,l),
(275,649,o),
(314,649,qs),
(329,649,o),
(341,647,q),
(378,637,o),
(418,564,o),
(418,509,qs)
);
},
{
closed = 1;
nodes = (
(547,484,o),
(531,460,qs),
(495,407,o),
(426,388,q),
(425,388,o),
(423,387,qs),
(414,384,o),
(413,385,o),
(416,388,qs),
(417,389,ls),
(452,430,o),
(452,511,qs),
(452,598,o),
(412,641,qs),
(407,646,o),
(409,646,qs),
(414,646,o),
(426,643,q),
(547,623,o),
(547,516,qs)
);
},
{
closed = 1;
nodes = (
(586,133,o),
(503,61,o),
(442,47,qs),
(439,46,l),
(484,100,o),
(484,189,qs),
(484,288,o),
(437,333,qs),
(429,341,l),
(433,340,l),
(438,340,o),
(449,337,qs),
(510,323,o),
(586,247,o),
(586,187,qs)
);
},
{
closed = 1;
nodes = (
(273,36,o),
(263,67,q),
(262,202,l),
(262,337,l),
(286,337,ls),
(353,337,o),
(378,328,qs),
(449,307,o),
(449,188,qs),
(449,36,o),
(322,36,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
113 97 2 7 3 129 13 2 8 7 147 134 40 3 2 8 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 0 8 2 7 8 105 6 5 2 3 3 0 95 10 1 0 0 14 77 11 9 4 3 2 2 1 97 0 1 1 15 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 7 0 8 2 7 8 105 11 9 4 3 2 0 1 2 1 101 6 5 2 3 3 0 95 10 1 0 0 14 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
139 139 2 0 139 149 139 148 145 143 101 99 96 94 83 82 74 72 58 53 37 32 27 25 0 64 2 64 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(214,410,o),
(222,455,qs),
(235,535,o),
(300,642,o),
(346,660,qs),
(368,669,o),
(392,669,qs),
(425,669,o),
(465,652,qs),
(517,629,o),
(605,540,o),
(618,497,qs),
(622,486,o),
(624,480,o),
(633,471,o),
(647,471,o),
(651,475,qs),
(656,480,o),
(657,505,o),
(657,588,qs),
(657,670,o),
(656,695,o),
(651,700,qs),
(647,704,o),
(633,704,o),
(622,694,o),
(622,686,qs),
(622,674,o),
(604,658,o),
(591,658,qs),
(554,658,o),
(507,679,qs),
(444,704,o),
(388,704,qs),
(382,704,o),
(366,703,o),
(365,703,qs),
(360,703,o),
(346,701,qs),
(209,687,o),
(125,595,qs),
(38,497,o),
(38,343,qs),
(38,298,o),
(44,263,qs),
(59,173,o),
(165,40,o),
(247,8,qs),
(312,-19,o),
(390,-19,qs),
(526,-19,o),
(631,68,qs),
(677,107,o),
(684,123,qs),
(687,132,o),
(674,149,o),
(665,149,qs),
(657,149,o),
(646,138,q),
(613,97,o),
(501,39,o),
(440,31,qs),
(432,30,o),
(407,30,qs),
(214,30,o),
(214,341,qs)
);
},
{
closed = 1;
nodes = (
(238,616,o),
(217,565,qs),
(178,476,o),
(178,342,qs),
(178,125,o),
(274,40,qs),
(279,36,o),
(283,32,q),
(281,32,l),
(279,33,o),
(273,35,o),
(270,36,qs),
(72,110,o),
(72,342,qs),
(72,551,o),
(230,631,qs),
(261,648,o),
(268,648,qs),
(269,648,o),
(264,643,qs)
);
},
{
closed = 1;
nodes = (
(594,601,o),
(587,608,qs),
(572,624,l),
(585,623,ls),
(608,623,o),
(622,630,q),
(622,568,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
38 1 6 3 89 86 2 7 4 92 1 1 7 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 1 7 0 7 1 0 128 0 4 0 7 1 4 7 105 0 6 6 3 97 5 1 3 3 14 77 0 0 0 2 97 0 2 2 18 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 7 0 7 1 0 128 5 1 3 0 6 4 3 6 105 0 4 0 7 1 4 7 105 0 0 0 2 97 0 2 2 18 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 1 7 0 7 1 0 128 5 1 3 0 6 4 3 6 105 0 4 0 7 1 4 7 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
88 87 59 57 20 34 91 37 37 32 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,678,o),
(16,667,qs),
(16,654,o),
(28,651,qs),
(36,650,ls),
(43,650,o),
(49,650,qs),
(79,648,o),
(96,638,o),
(98,618,qs),
(98,617,o),
(98,584,o),
(98,529,o),
(99,463,o),
(99,380,o),
(99,304,o),
(99,221,o),
(98,155,o),
(98,101,o),
(98,68,o),
(98,67,qs),
(96,47,o),
(79,37,o),
(49,35,qs),
(43,35,o),
(36,34,qs),
(28,34,l),
(16,31,o),
(16,17,qs),
(16,9,o),
(22,5,q),
(26,1,o),
(64,0,o),
(192,0,qs),
(330,0,o),
(388,2,o),
(418,8,qs),
(524,31,o),
(595,99,qs),
(690,197,o),
(690,354,qs),
(690,498,o),
(603,585,qs),
(531,660,o),
(413,678,qs),
(412,678,l),
(411,678,ls),
(408,679,o),
(406,679,q),
(382,684,o),
(261,685,qs),
(260,685,l),
(259,685,l),
(258,685,l),
(257,685,l),
(256,685,l),
(255,685,l),
(254,685,l),
(253,685,l),
(252,685,l),
(251,685,l),
(250,685,l),
(249,685,l),
(248,685,l),
(247,685,l),
(246,685,l),
(245,685,l),
(244,685,l),
(243,685,l),
(242,685,l),
(240,685,l),
(239,685,l),
(238,685,l),
(237,685,l),
(236,685,l),
(235,685,l),
(234,685,l),
(233,685,l),
(232,685,l),
(231,685,l),
(230,685,l),
(229,685,l),
(228,685,l),
(227,685,l),
(225,685,l),
(224,685,l),
(223,685,l),
(222,685,l),
(221,685,l),
(220,685,l),
(219,685,l),
(218,685,l),
(217,685,l),
(216,685,l),
(214,685,l),
(213,685,l),
(212,685,l),
(211,685,l),
(210,685,l),
(209,685,l),
(208,685,l),
(207,685,l),
(206,685,l),
(204,685,l),
(203,685,l),
(202,685,l),
(201,685,ls),
(30,685,o),
(27,683,qs)
);
},
{
closed = 1;
nodes = (
(226,614,o),
(226,342,qs),
(226,71,o),
(228,61,qs),
(233,45,o),
(240,35,q),
(183,35,ls),
(126,35,o),
(126,37,q),
(130,46,o),
(132,57,qs),
(134,69,o),
(134,342,qs),
(134,616,o),
(132,628,qs),
(130,639,o),
(126,648,q),
(126,650,o),
(183,650,qs),
(240,650,l),
(231,637,o),
(228,624,qs)
);
},
{
closed = 1;
nodes = (
(515,260,o),
(472,110,o),
(431,74,qs),
(385,35,o),
(321,35,qs),
(274,35,o),
(263,67,q),
(262,340,l),
(262,487,ls),
(262,540,o),
(262,593,o),
(264,622,o),
(265,627,o),
(267,628,qs),
(268,629,o),
(269,630,qs),
(287,649,o),
(326,649,qs),
(332,649,ls),
(346,649,o),
(356,647,qs),
(437,630,o),
(515,471,o),
(515,350,qs)
);
},
{
closed = 1;
nodes = (
(550,143,o),
(550,354,qs),
(550,532,o),
(467,622,qs),
(458,632,l),
(476,625,o),
(484,623,q),
(564,591,o),
(656,457,o),
(656,357,qs),
(656,134,o),
(464,57,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 9 values pushed */
166 161 147 87 4 2 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 4 2 3 3 0 95 8 1 0 0 14 77 7 5 2 2 2 1 97 0 1 1 15 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
7 5 2 2 0 1 2 1 101 6 4 2 3 3 0 95 8 1 0 0 14 3 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
58 0 150 148 137 134 124 121 112 110 103 100 85 81 76 72 0 108 58 108 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(638,197,o),
(628,205,o),
(623,205,qs),
(606,205,o),
(604,187,q),
(595,151,o),
(565,118,qs),
(537,90,o),
(451,46,o),
(408,39,qs),
(380,35,o),
(328,35,qs),
(283,35,o),
(279,37,qs),
(267,44,o),
(262,65,qs),
(260,75,l),
(259,205,l),
(259,336,l),
(270,336,ls),
(343,336,o),
(381,304,qs),
(397,290,o),
(419,241,o),
(419,197,o),
(437,197,qs),
(448,197,o),
(452,206,qs),
(454,210,o),
(454,364,qs),
(454,519,o),
(452,523,qs),
(448,532,o),
(437,532,qs),
(419,532,o),
(419,510,qs),
(419,478,o),
(407,449,qs),
(376,378,o),
(272,372,qs),
(259,372,l),
(259,491,l),
(260,611,l),
(267,641,o),
(279,648,qs),
(283,650,o),
(324,650,qs),
(376,650,o),
(404,646,qs),
(465,637,o),
(548,570,o),
(556,524,qs),
(558,514,o),
(558,509,qs),
(558,500,o),
(569,489,o),
(583,489,o),
(587,493,qs),
(592,498,o),
(593,518,o),
(593,587,qs),
(593,672,o),
(592,674,qs),
(589,681,o),
(582,684,qs),
(580,685,o),
(28,685,o),
(25,683,qs),
(14,678,o),
(14,667,qs),
(14,654,o),
(26,651,qs),
(27,651,o),
(34,650,o),
(44,650,o),
(49,650,qs),
(81,648,o),
(99,637,o),
(101,618,qs),
(101,617,o),
(101,584,o),
(102,530,o),
(102,463,o),
(102,380,o),
(102,304,o),
(102,221,o),
(102,155,o),
(101,100,o),
(101,68,o),
(101,67,qs),
(99,48,o),
(81,37,o),
(49,35,qs),
(44,35,o),
(34,34,o),
(27,34,o),
(26,34,qs),
(14,31,o),
(14,17,qs),
(14,9,o),
(20,5,q),
(20,4,l),
(20,4,o),
(21,4,q),
(24,0,o),
(313,0,qs),
(598,0,o),
(600,1,qs),
(608,5,o),
(610,11,q),
(610,14,o),
(639,182,o),
(639,192,q)
);
},
{
closed = 1;
nodes = (
(229,642,o),
(226,620,qs),
(225,611,o),
(225,343,qs),
(225,74,o),
(226,65,qs),
(229,43,o),
(235,37,q),
(235,35,o),
(182,35,qs),
(129,35,l),
(129,38,o),
(135,52,o),
(135,55,qs),
(137,71,o),
(137,343,qs),
(137,614,o),
(135,630,qs),
(135,633,o),
(129,647,o),
(129,650,q),
(182,650,ls),
(235,650,o),
(235,648,q)
);
},
{
closed = 1;
nodes = (
(530,632,o),
(511,643,qs),
(501,650,l),
(558,650,l),
(558,602,l),
(547,613,ls)
);
},
{
closed = 1;
nodes = (
(391,343,o),
(371,352,qs),
(366,354,o),
(363,356,q),
(390,371,o),
(407,388,qs),
(419,400,l),
(419,316,l),
(409,325,ls)
);
},
{
closed = 1;
nodes = (
(507,35,l),
(517,40,ls),
(541,53,o),
(588,91,q),
(583,63,l),
(579,35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
49 1 2 3 137 69 2 6 2 144 80 58 3 5 6 147 1 8 5 143 1 10 8 153 95 22 3 1 7 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 10 8 7 8 10 7 128 0 5 0 8 10 5 8 105 0 6 0 7 1 6 7 105 13 15 11 4 4 2 2 3 97 0 3 3 14 77 14 12 9 3 1 1 0 95 0 0 0 15 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 10 8 7 8 10 7 128 0 5 0 8 10 5 8 105 0 6 0 7 1 6 7 105 14 12 9 3 1 0 0 1 0 99 13 15 11 4 4 2 2 3 97 0 3 3 14 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
115 113 157 156 139 138 127 124 113 136 115 136 109 108 101 98 93 91 87 85 79 77 73 71 66 64 38 63 88 52 16 7 26 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(436,197,o),
(441,206,qs),
(443,210,o),
(443,365,qs),
(443,519,o),
(441,523,qs),
(436,532,o),
(426,532,qs),
(421,532,o),
(414,527,qs),
(408,522,o),
(408,505,qs),
(404,441,o),
(336,377,o),
(270,372,qs),
(259,372,l),
(259,491,l),
(260,611,l),
(267,641,o),
(279,648,qs),
(283,650,o),
(324,650,qs),
(373,650,o),
(401,646,qs),
(453,638,o),
(530,580,o),
(542,540,q),
(548,525,o),
(548,509,qs),
(548,500,o),
(559,489,o),
(573,489,o),
(577,493,qs),
(582,498,o),
(583,518,o),
(583,587,qs),
(583,672,o),
(582,674,qs),
(579,681,o),
(572,684,qs),
(570,685,o),
(28,685,o),
(25,683,qs),
(14,678,o),
(14,667,qs),
(14,654,o),
(26,651,qs),
(27,651,o),
(34,650,o),
(44,650,o),
(49,650,qs),
(81,648,o),
(99,637,o),
(101,618,qs),
(101,617,o),
(101,584,o),
(102,530,o),
(102,463,o),
(102,380,o),
(102,304,o),
(102,221,o),
(102,155,o),
(101,100,o),
(101,68,o),
(101,67,qs),
(99,48,o),
(81,37,o),
(49,35,qs),
(44,35,o),
(34,34,o),
(27,34,o),
(26,34,qs),
(14,31,o),
(14,17,qs),
(14,9,o),
(20,5,q),
(24,1,o),
(63,0,o),
(192,0,qs),
(357,0,o),
(359,1,qs),
(370,4,o),
(370,18,qs),
(370,34,o),
(357,34,q),
(355,35,o),
(330,35,qs),
(277,36,o),
(268,47,qs),
(262,53,o),
(260,70,qs),
(259,75,o),
(259,207,qs),
(259,336,l),
(267,336,ls),
(331,336,o),
(408,276,o),
(408,217,qs),
(408,197,o),
(426,197,qs)
);
},
{
closed = 1;
nodes = (
(234,645,o),
(233,643,qs),
(232,640,o),
(231,638,qs),
(226,623,o),
(225,574,o),
(224,345,qs),
(224,75,o),
(225,65,qs),
(228,45,o),
(234,35,q),
(129,35,l),
(129,38,o),
(135,52,o),
(135,55,qs),
(137,71,o),
(137,343,qs),
(137,614,o),
(135,630,qs),
(135,633,o),
(129,647,o),
(129,650,q),
(182,650,ls),
(235,650,o),
(235,648,q),
(234,646,l)
);
},
{
closed = 1;
nodes = (
(518,634,o),
(499,647,q),
(494,649,o),
(494,650,q),
(548,650,l),
(548,603,l),
(535,616,ls)
);
},
{
closed = 1;
nodes = (
(383,342,o),
(366,350,qs),
(360,353,o),
(355,356,q),
(377,365,o),
(396,386,qs),
(402,393,o),
(408,398,q),
(408,317,l),
(400,325,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
61 1 4 5 126 81 2 8 4 134 93 2 7 8 138 1 0 7 133 1 9 0 34 1 1 9 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 7 0 0 9 7 0 105 0 8 13 1 9 1 8 9 105 12 10 6 3 4 4 5 97 0 5 5 14 77 11 3 2 1 1 2 95 0 2 2 15 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 40 values pushed */
0 7 0 0 9 7 0 105 0 8 13 1 9 1 8 9 105 11 3 2 1 0 2 1 2 99 12 10 6 3 4 4 5 97 0 5 5 14 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 27 values pushed */
0 0 128 127 114 112 103 102 0 99 0 98 92 90 84 83 78 76 38 63 85 67 71 19 14 7 28 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(548,661,o),
(514,676,qs),
(468,694,o),
(430,703,o),
(382,703,qs),
(365,703,l),
(215,692,o),
(125,595,qs),
(38,497,o),
(38,343,qs),
(38,298,o),
(44,263,qs),
(59,173,o),
(165,40,o),
(247,8,qs),
(313,-18,o),
(391,-18,qs),
(525,-18,o),
(640,38,qs),
(663,49,o),
(665,58,q),
(666,60,o),
(666,126,qs),
(666,191,l),
(680,254,o),
(726,254,qs),
(748,254,o),
(748,272,qs),
(748,286,o),
(735,289,q),
(726,289,ls),
(717,289,o),
(686,290,o),
(648,290,o),
(601,290,o),
(559,290,o),
(511,290,o),
(474,290,o),
(443,289,o),
(434,289,qs),
(424,289,l),
(410,286,o),
(410,272,qs),
(410,262,o),
(421,255,o),
(434,254,qs),
(493,249,o),
(509,197,qs),
(511,190,o),
(512,128,qs),
(512,53,o),
(508,46,qs),
(494,17,o),
(399,17,qs),
(372,17,o),
(364,18,qs),
(213,46,o),
(213,343,qs),
(213,427,o),
(230,491,qs),
(262,627,o),
(346,660,qs),
(366,668,o),
(392,668,qs),
(448,668,o),
(509,628,qs),
(600,567,o),
(621,487,qs),
(626,471,o),
(639,471,qs),
(645,471,o),
(650,475,qs),
(655,480,o),
(656,505,o),
(656,588,qs),
(656,670,o),
(655,695,o),
(650,700,qs),
(646,704,o),
(632,704,o),
(621,694,o),
(621,686,qs),
(621,658,o),
(585,658,qs)
);
},
{
closed = 1;
nodes = (
(178,137,o),
(250,49,qs),
(255,44,o),
(255,42,q),
(245,46,ls),
(164,83,o),
(72,235,o),
(72,344,qs),
(72,550,o),
(230,631,qs),
(261,648,o),
(268,648,qs),
(269,648,o),
(264,643,qs),
(178,542,o),
(178,340,qs)
);
},
{
closed = 1;
nodes = (
(614,578,ls),
(590,608,o),
(571,624,q),
(584,623,ls),
(607,623,o),
(621,630,q),
(621,568,l)
);
},
{
closed = 1;
nodes = (
(547,193,o),
(542,208,qs),
(534,235,o),
(514,255,q),
(657,255,l),
(657,255,o),
(653,249,qs),
(640,231,o),
(634,210,qs),
(632,200,l),
(631,136,l),
(631,72,l),
(620,67,ls),
(580,49,o),
(558,43,qs),
(545,38,o),
(543,38,q),
(546,56,o),
(547,112,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
1 1 2 0 103 100 2 9 8 106 1 1 9 115 113 108 95 59 5 3 5 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
26 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
11 1 8 0 9 1 8 9 105 0 4 10 1 5 3 4 5 105 0 2 2 0 97 7 1 0 0 14 77 0 1 1 0 97 7 1 0 0 14 77 0 3 3 6 97 0 6 6 18 6 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 8 0 2 89 11 1 8 0 9 1 8 9 105 7 1 0 0 1 4 0 1 105 0 4 10 1 5 3 4 5 105 0 3 3 6 97 0 6 6 18 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 2 8 0 2 89 11 1 8 0 9 1 8 9 105 7 1 0 0 1 4 0 1 105 0 4 10 1 5 3 4 5 105 0 3 6 6 3 89 0 3 3 6 97 0 6 3 6 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
0 0 121 119 102 101 0 83 0 83 42 39 35 188 40 36 40 19 12 7 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(17,678,o),
(17,667,qs),
(17,654,o),
(29,651,qs),
(30,651,o),
(37,650,o),
(47,650,o),
(52,650,qs),
(84,648,o),
(102,637,o),
(104,618,qs),
(104,617,o),
(104,584,o),
(104,530,o),
(105,463,o),
(105,380,o),
(105,304,o),
(105,221,o),
(104,155,o),
(104,100,o),
(104,68,o),
(104,67,qs),
(102,48,o),
(84,37,o),
(52,35,qs),
(47,35,o),
(37,34,o),
(30,34,o),
(29,34,qs),
(17,31,o),
(17,17,qs),
(17,9,o),
(23,5,q),
(27,1,o),
(64,0,o),
(187,0,qs),
(343,0,o),
(345,1,qs),
(356,4,o),
(356,18,qs),
(356,34,o),
(343,34,q),
(341,35,o),
(321,35,qs),
(294,37,o),
(275,44,o),
(272,54,qs),
(267,68,o),
(267,105,qs),
(267,114,o),
(268,176,o),
(268,199,qs),
(268,324,l),
(510,324,l),
(510,199,ls),
(510,71,o),
(509,67,qs),
(507,48,o),
(489,37,o),
(457,35,qs),
(452,35,o),
(442,34,o),
(435,34,o),
(434,34,qs),
(422,31,o),
(422,18,qs),
(422,9,o),
(428,5,q),
(432,1,o),
(469,0,o),
(592,0,qs),
(716,0,o),
(752,1,o),
(756,6,qs),
(769,19,o),
(755,31,qs),
(750,35,o),
(726,35,qs),
(699,37,o),
(680,44,o),
(677,54,qs),
(673,65,o),
(673,181,qs),
(673,342,ls),
(673,380,o),
(673,463,o),
(674,530,o),
(674,584,o),
(674,617,o),
(674,618,qs),
(676,637,o),
(694,648,o),
(726,650,qs),
(750,650,o),
(755,654,qs),
(769,666,o),
(756,679,qs),
(752,684,o),
(716,685,o),
(592,685,qs),
(437,685,o),
(433,683,qs),
(423,678,o),
(423,654,o),
(434,651,qs),
(435,651,o),
(442,650,o),
(452,650,o),
(457,650,qs),
(484,648,o),
(503,641,o),
(506,631,qs),
(510,620,o),
(510,490,qs),
(510,370,l),
(268,370,l),
(268,490,ls),
(268,614,o),
(269,618,qs),
(271,637,o),
(289,648,o),
(321,650,qs),
(345,650,o),
(350,654,qs),
(364,666,o),
(351,679,qs),
(347,684,o),
(311,685,o),
(187,685,qs),
(31,685,o),
(28,683,qs)
);
},
{
closed = 1;
nodes = (
(241,647,o),
(235,633,o),
(235,630,qs),
(234,622,o),
(234,343,qs),
(234,63,o),
(235,55,qs),
(235,52,o),
(241,38,o),
(241,35,q),
(132,35,l),
(132,38,o),
(138,52,o),
(138,55,qs),
(140,71,o),
(140,343,qs),
(140,614,o),
(138,630,qs),
(138,633,o),
(132,647,o),
(132,650,q),
(241,650,l)
);
},
{
closed = 1;
nodes = (
(646,647,o),
(640,633,o),
(640,630,qs),
(639,622,o),
(639,343,qs),
(639,63,o),
(640,55,qs),
(640,52,o),
(646,38,o),
(646,35,q),
(537,35,l),
(537,38,o),
(543,52,o),
(543,55,qs),
(545,71,o),
(545,343,qs),
(545,614,o),
(543,630,qs),
(543,633,o),
(537,647,o),
(537,650,q),
(646,650,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
40 11 2 2 1 108 73 2 6 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 0 9 6 2 9 103 20 17 19 15 13 5 3 7 1 1 0 95 4 18 2 0 0 14 77 16 14 12 10 8 5 6 6 7 97 11 1 7 7 15 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 41 values pushed */
0 2 0 9 6 2 9 103 16 14 12 10 8 5 6 11 1 7 6 7 101 20 17 19 15 13 5 3 7 1 1 0 95 4 18 2 0 0 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 51 values pushed */
153 153 131 131 3 0 153 174 153 173 164 162 131 152 131 151 142 140 124 121 106 101 96 92 89 86 77 76 71 66 61 57 53 52 38 36 32 28 23 21 15 14 9 7 0 130 3 130 21 7 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,678,o),
(20,667,qs),
(20,654,o),
(32,651,qs),
(33,651,o),
(40,650,o),
(51,650,o),
(56,650,qs),
(59,650,o),
(74,649,o),
(79,649,o),
(89,648,o),
(93,646,o),
(100,644,o),
(103,641,o),
(107,636,o),
(110,630,o),
(111,626,qs),
(113,614,o),
(113,343,qs),
(113,71,o),
(111,59,qs),
(110,55,o),
(107,49,o),
(103,44,o),
(100,41,o),
(93,39,o),
(89,37,o),
(79,36,o),
(74,36,o),
(59,35,o),
(56,35,qs),
(51,35,o),
(40,34,o),
(33,34,o),
(32,34,qs),
(20,31,o),
(20,17,qs),
(20,9,o),
(26,5,q),
(30,1,o),
(68,0,o),
(195,0,qs),
(356,0,o),
(358,1,qs),
(369,4,o),
(369,18,qs),
(369,34,o),
(356,34,q),
(354,35,o),
(333,35,qs),
(330,35,o),
(315,36,o),
(310,36,o),
(300,37,o),
(296,39,o),
(289,41,o),
(286,44,o),
(282,49,o),
(279,55,o),
(278,59,qs),
(277,65,o),
(277,343,qs),
(277,620,o),
(278,626,qs),
(279,630,o),
(282,636,o),
(286,641,o),
(289,644,o),
(296,646,o),
(300,648,o),
(310,649,o),
(315,649,o),
(330,650,o),
(333,650,qs),
(358,650,o),
(363,654,qs),
(377,666,o),
(364,679,qs),
(360,684,o),
(323,685,o),
(195,685,qs),
(34,685,o),
(31,683,qs)
);
},
{
closed = 1;
nodes = (
(242,620,o),
(242,587,o),
(242,532,o),
(241,465,o),
(241,381,o),
(241,305,o),
(241,221,o),
(242,154,o),
(242,99,o),
(242,66,o),
(242,65,qs),
(243,51,o),
(250,35,q),
(139,35,l),
(146,51,o),
(147,65,qs),
(147,66,o),
(147,99,o),
(148,154,o),
(148,221,o),
(148,305,o),
(148,381,o),
(148,465,o),
(148,532,o),
(147,587,o),
(147,620,o),
(147,621,qs),
(146,634,o),
(139,650,q),
(250,650,l),
(243,634,o),
(242,621,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
104 88 2 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
6 5 2 1 1 0 95 8 1 0 0 14 77 7 4 2 2 2 3 95 0 3 3 15 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
7 4 2 2 0 3 2 3 99 6 5 2 1 1 0 95 8 1 0 0 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
3 0 102 101 86 85 77 72 55 47 42 38 35 29 12 7 0 83 3 83 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(116,675,o),
(125,660,qs),
(130,650,o),
(152,650,qs),
(172,650,o),
(199,647,qs),
(208,645,o),
(217,638,o),
(221,630,o),
(224,620,q),
(225,316,ls),
(225,74,o),
(224,5,o),
(220,-5,qs),
(203,-40,o),
(161,-40,qs),
(122,-40,o),
(122,-29,qs),
(122,-22,o),
(131,-12,qs),
(149,6,o),
(149,68,o),
(109,106,o),
(78,106,qs),
(55,106,o),
(16,79,o),
(9,57,qs),
(7,49,o),
(7,35,qs),
(7,15,o),
(15,-2,qs),
(47,-74,o),
(169,-74,qs),
(301,-74,o),
(355,-1,q),
(382,44,o),
(387,89,qs),
(388,95,o),
(388,355,qs),
(388,613,o),
(389,618,qs),
(391,637,o),
(409,648,o),
(441,650,qs),
(465,650,o),
(470,654,qs),
(484,666,o),
(471,679,qs),
(467,684,o),
(430,685,o),
(300,685,qs),
(137,685,o),
(134,683,q)
);
},
{
closed = 1;
nodes = (
(359,642,o),
(354,626,o),
(354,624,qs),
(353,356,ls),
(352,87,o),
(351,79,qs),
(336,9,o),
(278,-19,qs),
(271,-22,o),
(246,-31,o),
(245,-31,q),
(258,-10,o),
(259,5,q),
(260,9,o),
(260,312,qs),
(260,552,o),
(259,628,o),
(255,640,q),
(252,644,o),
(252,648,qs),
(252,650,o),
(306,650,qs),
(361,650,o),
(361,649,q),
(359,645,l)
);
},
{
closed = 1;
nodes = (
(114,24,o),
(89,-9,o),
(88,-18,qs),
(88,-20,o),
(88,-22,q),
(87,-24,l),
(82,-24,o),
(65,-11,qs),
(41,10,o),
(41,36,qs),
(41,51,o),
(63,71,o),
(80,71,q),
(114,66,o),
(114,36,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
74 42 11 3 3 1 66 1 4 7 2 76 0 3 0 7 4 3 7 105 0 4 0 2 4 2 101 6 5 2 1 1 0 95 8 1 0 0 14 1 78 3 0 80 79 56 53 49 47 37 35 29 27 20 18 9 7 0 52 3 52 9 7 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = J;
unicode = 74;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(480,7,o),
(491,1,qs),
(493,0,o),
(625,0,qs),
(730,0,o),
(760,1,o),
(764,6,qs),
(777,19,o),
(763,31,qs),
(759,34,o),
(748,35,qs),
(734,37,o),
(720,51,qs),
(709,64,o),
(556,246,o),
(484,332,qs),
(413,417,l),
(476,477,ls),
(580,578,o),
(620,608,qs),
(676,650,o),
(712,650,qs),
(731,650,o),
(731,667,qs),
(731,674,o),
(726,679,qs),
(722,684,o),
(692,685,o),
(593,685,qs),
(467,685,o),
(465,684,qs),
(454,681,o),
(454,668,qs),
(454,652,o),
(473,650,qs),
(513,645,o),
(513,601,qs),
(513,575,o),
(496,555,qs),
(495,554,o),
(465,525,o),
(408,470,o),
(383,446,qs),
(276,343,l),
(275,475,ls),
(275,619,o),
(279,631,qs),
(282,641,o),
(301,648,o),
(328,650,qs),
(352,650,o),
(357,654,qs),
(371,666,o),
(358,679,qs),
(354,684,o),
(318,685,o),
(194,685,qs),
(38,685,o),
(35,683,qs),
(24,678,o),
(24,667,qs),
(24,654,o),
(36,651,qs),
(37,651,o),
(44,650,o),
(54,650,o),
(59,650,qs),
(91,648,o),
(109,637,o),
(111,618,qs),
(111,617,o),
(111,584,o),
(112,530,o),
(112,463,o),
(112,380,o),
(112,304,o),
(112,221,o),
(112,155,o),
(111,100,o),
(111,68,o),
(111,67,qs),
(109,48,o),
(91,37,o),
(59,35,qs),
(54,35,o),
(44,34,o),
(37,34,o),
(36,34,qs),
(24,31,o),
(24,17,qs),
(24,9,o),
(30,5,q),
(34,1,o),
(71,0,o),
(194,0,qs),
(350,0,o),
(352,1,qs),
(363,4,o),
(363,18,qs),
(363,34,o),
(350,34,q),
(348,35,o),
(328,35,qs),
(301,37,o),
(282,44,o),
(279,54,qs),
(275,65,o),
(275,180,qs),
(275,285,l),
(280,289,o),
(299,306,o),
(303,311,q),
(308,306,o),
(505,70,o),
(510,63,qs),
(522,48,o),
(522,44,qs),
(522,38,o),
(505,35,q),
(480,35,o),
(480,18,qs)
);
},
{
closed = 1;
nodes = (
(248,647,o),
(242,633,o),
(242,630,qs),
(241,622,o),
(241,343,qs),
(241,63,o),
(242,55,qs),
(242,52,o),
(248,38,o),
(248,35,q),
(139,35,l),
(139,38,o),
(145,52,o),
(145,55,qs),
(147,71,o),
(147,343,qs),
(147,614,o),
(145,630,qs),
(145,633,o),
(139,647,o),
(139,650,q),
(248,650,l)
);
},
{
closed = 1;
nodes = (
(584,626,o),
(561,606,qs),
(550,595,o),
(548,595,q),
(548,597,l),
(550,606,o),
(545,627,q),
(541,637,o),
(535,649,q),
(535,650,o),
(576,650,qs),
(587,650,o),
(598,650,o),
(611,650,o),
(614,650,q),
(616,649,l),
(605,640,ls)
);
},
{
closed = 1;
nodes = (
(557,40,ls),
(557,58,o),
(538,83,qs),
(535,88,o),
(332,333,o),
(330,335,qs),
(329,336,o),
(387,392,o),
(388,392,q),
(666,56,o),
(687,35,q),
(557,35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
162 154 103 76 39 11 8 7 0 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
12 14 11 8 6 5 4 4 5 95 7 1 5 5 14 77 15 13 10 3 1 5 0 0 2 97 9 1 2 2 15 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
15 13 10 3 1 5 0 9 1 2 0 2 101 12 14 11 8 6 5 4 4 5 95 7 1 5 5 14 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 38 values pushed */
160 160 121 121 160 171 160 170 149 143 121 142 121 141 132 130 117 114 99 97 93 89 70 69 65 61 55 52 37 32 27 23 20 17 16 16 7 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(608,224,o),
(603,203,qs),
(591,146,o),
(535,102,qs),
(470,49,o),
(395,37,qs),
(389,36,o),
(335,35,qs),
(285,35,o),
(281,37,qs),
(269,44,o),
(264,65,qs),
(262,75,l),
(261,341,ls),
(261,611,o),
(262,617,qs),
(264,638,o),
(281,648,o),
(311,650,qs),
(333,650,o),
(338,654,qs),
(352,666,o),
(339,679,qs),
(335,684,o),
(300,685,o),
(179,685,qs),
(28,685,o),
(25,683,qs),
(14,678,o),
(14,667,qs),
(14,654,o),
(26,651,qs),
(27,651,o),
(34,650,o),
(44,650,o),
(49,650,qs),
(81,648,o),
(99,637,o),
(101,618,qs),
(101,617,o),
(101,584,o),
(102,530,o),
(102,463,o),
(102,380,o),
(102,304,o),
(102,221,o),
(102,155,o),
(101,100,o),
(101,68,o),
(101,67,qs),
(99,48,o),
(81,37,o),
(49,35,qs),
(44,35,o),
(34,34,o),
(27,34,o),
(26,34,qs),
(14,31,o),
(14,17,qs),
(14,9,o),
(20,5,q),
(20,4,l),
(20,4,o),
(21,4,q),
(24,0,o),
(313,0,qs),
(598,0,o),
(600,1,qs),
(610,6,o),
(610,13,q),
(611,14,o),
(639,208,o),
(639,211,qs),
(638,216,o),
(628,224,o),
(622,224,qs)
);
},
{
closed = 1;
nodes = (
(230,639,o),
(228,628,qs),
(227,621,o),
(227,347,qs),
(227,74,o),
(228,65,qs),
(231,43,o),
(237,37,q),
(237,35,o),
(183,35,qs),
(129,35,l),
(129,38,o),
(135,52,o),
(135,55,qs),
(137,71,o),
(137,343,qs),
(137,614,o),
(135,630,qs),
(135,633,o),
(129,647,o),
(129,650,q),
(182,650,ls),
(234,650,o),
(234,648,q)
);
},
{
closed = 1;
nodes = (
(578,35,o),
(538,35,qs),
(498,36,l),
(539,54,o),
(589,104,q),
(589,103,l),
(578,36,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
59 1 6 2 62 25 2 1 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 6 2 1 2 6 1 128 10 7 4 3 2 2 3 95 0 3 3 14 77 9 8 5 3 1 1 0 95 0 0 0 15 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 6 2 1 2 6 1 128 9 8 5 3 1 0 0 1 0 99 10 7 4 3 2 2 3 95 0 3 3 14 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
78 76 105 103 90 87 76 99 78 99 22 56 36 70 63 88 55 11 7 29 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(20,678,o),
(20,667,qs),
(20,660,o),
(26,654,q),
(33,650,o),
(50,650,qs),
(90,648,o),
(102,641,qs),
(104,640,o),
(104,364,qs),
(104,87,o),
(102,81,qs),
(98,63,o),
(66,38,o),
(44,36,qs),
(42,36,o),
(32,34,o),
(29,33,o),
(22,30,o),
(19,27,o),
(17,22,o),
(17,18,qs),
(17,11,o),
(23,5,qs),
(27,1,o),
(52,0,o),
(128,0,qs),
(226,0,o),
(228,1,qs),
(240,7,o),
(240,19,qs),
(240,34,o),
(214,36,q),
(163,36,o),
(147,83,q),
(146,344,ls),
(146,485,o),
(146,605,o),
(147,604,q),
(395,14,ls),
(401,0,o),
(412,0,qs),
(421,0,o),
(426,7,qs),
(427,8,o),
(553,308,qs),
(678,606,l),
(678,347,ls),
(678,87,o),
(676,81,qs),
(672,63,o),
(640,38,o),
(618,36,qs),
(616,36,o),
(606,34,o),
(603,33,o),
(596,30,o),
(593,27,o),
(591,22,o),
(591,18,qs),
(591,11,o),
(597,5,qs),
(601,1,o),
(638,0,o),
(759,0,qs),
(881,0,o),
(916,1,o),
(920,6,qs),
(933,19,o),
(919,31,qs),
(914,35,o),
(900,36,qs),
(849,36,o),
(833,83,q),
(832,340,ls),
(832,548,o),
(833,607,o),
(838,616,qs),
(845,630,o),
(881,650,o),
(900,650,qs),
(908,650,o),
(919,660,o),
(919,668,qs),
(919,674,o),
(914,679,qs),
(910,684,o),
(882,685,o),
(789,685,qs),
(673,685,l),
(667,682,o),
(663,678,q),
(614,562,ls),
(565,446,o),
(466,213,o),
(466,212,q),
(268,679,o),
(269,678,q),
(268,681,o),
(263,683,qs),
(259,685,o),
(33,685,o),
(31,684,qs)
);
},
{
closed = 1;
nodes = (
(423,88,o),
(412,64,q),
(354,202,o),
(231,493,o),
(183,609,o),
(177,621,qs),
(171,634,o),
(163,642,qs),
(156,650,l),
(244,650,l),
(342,414,ls),
(345,406,o),
(348,399,qs),
(438,185,o),
(444,177,qs),
(446,174,o),
(457,169,q),
(435,117,ls)
);
},
{
closed = 1;
nodes = (
(818,644,o),
(800,617,o),
(799,613,qs),
(798,607,o),
(797,347,qs),
(797,85,o),
(798,78,qs),
(802,59,o),
(820,35,q),
(755,35,ls),
(692,35,o),
(692,36,q),
(707,56,o),
(711,72,qs),
(712,78,o),
(713,364,qs),
(713,650,l),
(766,650,ls),
(818,650,o),
(818,649,qs)
);
},
{
closed = 1;
nodes = (
(118,36,l),
(120,39,o),
(121,40,qs),
(125,46,o),
(126,45,qs),
(134,35,l),
(125,35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
144 133 118 90 67 63 55 52 28 6 10 3 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
10 9 8 3 2 2 0 97 1 13 2 0 0 14 77 14 12 11 6 4 3 3 4 97 7 5 2 4 4 15 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
14 12 11 6 4 3 7 5 2 4 3 4 101 10 9 8 3 2 2 0 97 1 13 2 0 0 14 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 37 values pushed */
141 141 1 0 141 147 141 147 131 128 123 122 111 110 97 95 77 73 69 68 61 59 39 35 30 29 22 20 15 12 0 102 1 102 15 7 22 
CALL[ ]	/* CallFunction */";
};
width = 944;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(25,9,o),
(31,5,q),
(35,1,o),
(60,0,o),
(136,0,qs),
(234,0,o),
(236,1,qs),
(247,6,o),
(247,17,qs),
(247,35,o),
(222,35,qs),
(187,35,o),
(161,53,o),
(155,80,q),
(154,315,ls),
(154,465,o),
(154,550,o),
(155,549,q),
(156,549,o),
(371,272,o),
(592,-11,o),
(597,-16,q),
(603,-19,o),
(611,-19,q),
(617,-17,o),
(622,-10,qs),
(624,-6,o),
(624,301,qs),
(625,609,o),
(626,616,qs),
(630,635,o),
(651,648,o),
(675,650,qs),
(691,650,o),
(696,654,qs),
(710,666,o),
(697,679,qs),
(693,684,o),
(670,685,o),
(596,685,qs),
(503,685,o),
(500,683,q),
(483,676,o),
(491,660,qs),
(496,650,o),
(514,650,qs),
(548,650,o),
(574,632,o),
(581,606,q),
(582,432,ls),
(582,314,o),
(582,259,o),
(580,261,o),
(263,676,o),
(261,679,qs),
(256,684,o),
(230,685,o),
(143,685,qs),
(35,685,o),
(33,684,qs),
(22,678,o),
(22,667,qs),
(22,652,o),
(45,650,qs),
(74,647,o),
(105,613,qs),
(112,605,l),
(112,348,ls),
(112,88,o),
(111,81,qs),
(108,55,o),
(80,35,o),
(49,35,qs),
(25,35,o),
(25,17,qs)
);
},
{
closed = 1;
nodes = (
(365,338,ls),
(134,632,o),
(129,638,qs),
(118,650,l),
(239,650,l),
(355,497,o),
(589,191,q),
(589,50,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
82 75 60 44 25 7 4 7 0 2 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 25 values pushed */
7 4 2 2 2 1 95 3 1 1 1 14 77 5 1 0 0 6 95 0 6 6 15 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 22 values pushed */
5 1 0 0 6 0 6 99 7 4 2 2 2 1 95 3 1 1 1 14 2 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
78 77 71 67 64 62 20 67 41 76 32 8 7 27 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,603,o),
(103,573,qs),
(34,480,o),
(34,342,qs),
(34,154,o),
(158,56,qs),
(254,-18,o),
(524,-18,o),
(620,56,qs),
(653,82,o),
(675,112,qs),
(744,206,o),
(744,343,qs),
(744,531,o),
(620,629,qs),
(542,689,o),
(436,702,qs),
(425,703,o),
(377,703,qs),
(255,703,o),
(158,629,qs)
);
},
{
closed = 1;
nodes = (
(520,648,o),
(553,501,qs),
(568,436,o),
(568,343,qs),
(568,263,o),
(559,214,qs),
(532,56,o),
(438,23,qs),
(418,17,o),
(360,17,o),
(340,23,qs),
(284,42,o),
(251,108,qs),
(210,187,o),
(210,342,qs),
(210,553,o),
(287,628,qs),
(327,668,o),
(383,668,qs),
(405,668,o),
(419,666,qs)
);
},
{
closed = 1;
nodes = (
(175,134,o),
(247,49,qs),
(250,45,o),
(252,42,q),
(247,42,o),
(216,59,qs),
(68,145,o),
(68,342,qs),
(68,537,o),
(216,626,qs),
(243,643,o),
(251,643,qs),
(252,643,o),
(249,639,o),
(247,636,qs),
(175,549,o),
(175,343,qs)
);
},
{
closed = 1;
nodes = (
(603,549,o),
(531,636,qs),
(528,640,o),
(526,643,q),
(527,643,o),
(539,638,qs),
(585,617,o),
(623,579,qs),
(709,493,o),
(709,343,qs),
(709,145,o),
(562,59,qs),
(531,42,o),
(526,42,q),
(603,135,o),
(603,343,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
60 1 3 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
0 4 2 3 2 4 3 128 0 2 2 0 97 0 0 0 14 77 0 3 3 1 97 0 1 1 18 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
0 4 2 3 2 4 3 128 0 0 0 2 4 0 2 105 0 3 3 1 97 0 1 1 18 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 4 2 3 2 4 3 128 0 0 0 2 4 0 2 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
45 24 40 26 32 5 7 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,678,o),
(16,667,qs),
(16,654,o),
(28,651,qs),
(36,650,ls),
(43,650,o),
(49,650,qs),
(79,648,o),
(96,638,o),
(98,618,qs),
(98,617,o),
(98,584,o),
(98,529,o),
(99,463,o),
(99,380,o),
(99,304,o),
(99,221,o),
(98,155,o),
(98,101,o),
(98,68,o),
(98,67,qs),
(96,47,o),
(79,37,o),
(49,35,qs),
(43,35,o),
(36,34,qs),
(28,34,l),
(16,31,o),
(16,17,qs),
(16,9,o),
(22,5,q),
(26,1,o),
(63,0,o),
(184,0,qs),
(338,0,o),
(340,1,qs),
(351,4,o),
(351,18,qs),
(351,34,o),
(338,34,q),
(336,35,o),
(316,35,qs),
(284,37,o),
(265,48,o),
(263,67,qs),
(262,71,o),
(262,191,qs),
(262,308,l),
(305,307,ls),
(396,307,o),
(512,341,o),
(554,383,qs),
(599,430,o),
(599,497,qs),
(599,587,o),
(475,678,o),
(372,684,qs),
(363,685,o),
(194,685,qs),
(30,685,o),
(27,683,qs)
);
},
{
closed = 1;
nodes = (
(235,35,o),
(180,35,qs),
(126,35,o),
(126,37,q),
(130,46,o),
(132,57,qs),
(134,69,o),
(134,342,qs),
(134,616,o),
(132,628,qs),
(130,639,o),
(126,648,q),
(126,650,o),
(183,650,qs),
(240,650,l),
(233,640,o),
(228,624,qs),
(227,618,o),
(227,345,qs),
(227,154,ls),
(227,137,o),
(227,114,o),
(227,93,o),
(228,79,o),
(228,68,o),
(229,60,o),
(229,54,o),
(231,48,o),
(232,45,o),
(234,38,o),
(235,36,q)
);
},
{
closed = 1;
nodes = (
(427,550,o),
(427,499,qs),
(427,437,o),
(401,363,o),
(366,350,qs),
(350,344,o),
(301,343,qs),
(262,343,l),
(262,481,l),
(263,619,l),
(275,650,o),
(323,650,qs),
(365,650,o),
(409,619,o),
(418,584,qs)
);
},
{
closed = 1;
nodes = (
(510,620,o),
(539,580,qs),
(563,547,o),
(563,495,qs),
(563,476,o),
(562,470,qs),
(545,392,o),
(448,359,qs),
(435,354,o),
(430,354,q),
(427,353,l),
(462,401,o),
(462,500,qs),
(462,591,o),
(432,639,qs),
(431,641,o),
(433,641,q),
(434,640,o),
(444,638,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
119 114 96 3 10 6 39 1 3 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 10 0 2 3 10 2 105 9 7 2 6 6 0 97 1 11 2 0 0 14 77 8 5 2 3 3 4 95 0 4 4 15 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 10 0 2 3 10 2 105 8 5 2 3 0 4 3 4 99 9 7 2 6 6 0 97 1 11 2 0 0 14 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
2 0 100 98 95 93 90 87 78 76 55 52 37 33 28 24 21 17 12 10 4 3 0 60 2 60 12 7 22 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(560,10,o),
(620,56,qs),
(653,82,o),
(675,112,qs),
(744,206,o),
(744,343,qs),
(744,531,o),
(620,629,qs),
(542,689,o),
(436,702,qs),
(425,703,o),
(377,703,qs),
(255,703,o),
(158,629,qs),
(125,603,o),
(103,573,qs),
(34,480,o),
(34,342,qs),
(34,210,o),
(155,38,o),
(262,1,qs),
(279,-5,l),
(287,-20,ls),
(299,-47,o),
(322,-74,qs),
(388,-153,o),
(489,-173,qs),
(519,-179,o),
(545,-179,qs),
(632,-179,o),
(716,-144,q),
(725,-139,o),
(726,-138,qs),
(732,-133,o),
(732,-117,o),
(726,-112,qs),
(719,-106,o),
(701,-111,qs),
(674,-117,o),
(650,-117,qs),
(533,-117,o),
(478,-10,q),
(491,-6,ls)
);
},
{
closed = 1;
nodes = (
(520,648,o),
(553,501,qs),
(568,436,o),
(568,343,qs),
(568,263,o),
(559,214,qs),
(532,56,o),
(438,23,qs),
(418,17,o),
(360,17,o),
(340,23,qs),
(284,42,o),
(251,108,qs),
(210,187,o),
(210,342,qs),
(210,553,o),
(287,628,qs),
(327,668,o),
(383,668,qs),
(405,668,o),
(419,666,qs)
);
},
{
closed = 1;
nodes = (
(175,134,o),
(247,49,qs),
(250,45,o),
(252,42,q),
(247,42,o),
(216,59,qs),
(68,145,o),
(68,342,qs),
(68,537,o),
(216,626,qs),
(243,643,o),
(251,643,qs),
(252,643,o),
(249,639,o),
(247,636,qs),
(175,549,o),
(175,343,qs)
);
},
{
closed = 1;
nodes = (
(603,549,o),
(531,636,qs),
(528,640,o),
(526,643,q),
(527,643,o),
(539,638,qs),
(585,617,o),
(623,579,qs),
(709,493,o),
(709,343,qs),
(709,145,o),
(562,59,qs),
(531,42,o),
(526,42,q),
(603,135,o),
(603,343,qs)
);
},
{
closed = 1;
nodes = (
(367,-19,o),
(386,-19,qs),
(416,-19,o),
(437,-16,q),
(443,-16,l),
(448,-27,ls),
(458,-48,o),
(475,-69,qs),
(516,-119,o),
(570,-138,qs),
(576,-140,o),
(579,-142,q),
(579,-144,o),
(550,-144,qs),
(475,-144,o),
(358,-74,o),
(325,-19,q),
(323,-14,l),
(326,-14,l),
(328,-15,o),
(343,-17,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
82 1 4 5 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
28 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 5 3 4 3 5 4 128 0 0 7 6 6 0 114 0 6 0 1 6 1 102 0 3 3 2 97 0 2 2 14 77 0 4 4 7 97 0 7 7 18 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 41 values pushed */
0 5 3 4 3 5 4 128 0 0 7 6 6 0 114 0 2 0 3 5 2 3 105 0 6 0 1 6 1 102 0 4 4 7 97 0 7 7 18 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
46 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
0 5 3 4 3 5 4 128 0 0 7 6 6 0 114 0 2 0 3 5 2 3 105 0 4 0 7 0 4 7 105 0 6 1 1 6 89 0 6 6 1 98 0 1 6 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 0 0 7 6 7 0 6 128 0 2 0 3 5 2 3 105 0 4 0 7 0 4 7 105 0 6 1 1 6 89 0 6 6 1 98 0 1 6 1 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
116 114 104 102 45 24 44 47 41 33 8 7 28 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,678,o),
(16,667,qs),
(16,654,o),
(28,651,qs),
(29,651,o),
(36,650,o),
(46,650,o),
(51,650,qs),
(83,648,o),
(102,637,o),
(104,618,qs),
(104,617,o),
(104,584,o),
(104,530,o),
(105,463,o),
(105,380,o),
(105,304,o),
(105,221,o),
(104,155,o),
(104,100,o),
(104,68,o),
(104,67,qs),
(102,48,o),
(83,37,o),
(51,35,qs),
(46,35,o),
(36,34,o),
(29,34,o),
(28,34,qs),
(16,31,o),
(16,17,qs),
(16,9,o),
(22,5,q),
(26,1,o),
(63,0,o),
(187,0,qs),
(344,0,o),
(346,1,qs),
(357,4,o),
(357,18,qs),
(357,34,o),
(344,34,q),
(342,35,o),
(322,35,qs),
(290,37,o),
(271,48,o),
(269,67,qs),
(268,71,o),
(268,194,qs),
(268,314,l),
(304,314,l),
(401,163,ls),
(500,10,o),
(501,9,q),
(501,8,o),
(502,7,qs),
(505,2,o),
(521,0,o),
(559,0,qs),
(601,0,ls),
(672,0,o),
(694,1,o),
(698,6,qs),
(703,11,o),
(703,25,o),
(693,35,o),
(686,35,qs),
(685,35,o),
(680,37,qs),
(677,38,o),
(675,38,q),
(627,65,o),
(520,223,qs),
(454,319,o),
(454,325,qs),
(454,326,o),
(494,333,o),
(559,358,o),
(584,382,qs),
(628,423,o),
(628,498,qs),
(628,521,o),
(627,529,qs),
(617,587,o),
(517,665,o),
(436,679,qs),
(428,680,o),
(426,681,q),
(407,684,o),
(214,685,qs),
(30,685,o),
(27,683,qs)
);
},
{
closed = 1;
nodes = (
(241,35,o),
(187,35,qs),
(132,35,o),
(132,36,qs),
(134,43,ls),
(139,55,o),
(140,125,o),
(140,342,qs),
(140,531,ls),
(140,548,o),
(140,571,o),
(140,592,o),
(139,606,o),
(139,617,o),
(138,625,o),
(138,631,o),
(136,637,o),
(135,640,o),
(133,647,o),
(132,649,q),
(132,650,o),
(189,650,qs),
(246,650,l),
(239,640,o),
(234,624,qs),
(233,618,o),
(233,345,qs),
(233,154,ls),
(233,137,o),
(233,114,o),
(233,93,o),
(234,79,o),
(234,68,o),
(235,60,o),
(235,54,o),
(237,48,o),
(238,45,o),
(240,38,o),
(241,36,q)
);
},
{
closed = 1;
nodes = (
(457,543,o),
(457,492,qs),
(457,448,o),
(450,421,qs),
(439,381,o),
(375,351,o),
(295,349,qs),
(268,349,l),
(268,484,l),
(269,619,l),
(281,649,o),
(322,649,qs),
(377,649,o),
(436,615,o),
(448,573,qs)
);
},
{
closed = 1;
nodes = (
(465,637,o),
(485,631,o),
(489,629,qs),
(594,590,o),
(594,497,qs),
(594,445,o),
(543,385,o),
(488,369,qs),
(474,365,o),
(460,362,q),
(492,407,o),
(492,496,qs),
(492,589,o),
(453,640,q),
(464,637,ls)
);
},
{
closed = 1;
nodes = (
(475,225,o),
(520,162,qs),
(571,88,o),
(611,46,qs),
(622,35,l),
(574,35,l),
(525,36,l),
(345,315,l),
(352,315,l),
(355,316,o),
(384,318,qs),
(409,318,o),
(409,320,q),
(412,320,ls),
(415,320,o),
(435,289,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
150 146 135 3 10 6 69 1 3 2 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 10 11 1 2 3 10 2 105 9 7 2 6 6 0 95 13 1 0 0 14 77 12 8 5 3 3 3 1 97 4 1 1 1 15 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 10 11 1 2 3 10 2 105 12 8 5 3 3 4 1 1 3 1 101 9 7 2 6 6 0 95 13 1 0 0 14 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 33 values pushed */
2 0 171 169 166 161 139 137 134 132 129 126 109 107 85 82 67 62 57 53 50 46 41 40 33 29 0 91 2 91 14 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(29,437,o),
(78,388,qs),
(123,343,o),
(223,300,qs),
(376,238,o),
(392,155,qs),
(394,147,o),
(394,133,qs),
(394,74,o),
(331,24,o),
(265,24,qs),
(242,24,o),
(236,25,qs),
(168,40,o),
(116,106,qs),
(72,163,o),
(72,215,qs),
(72,240,o),
(55,240,qs),
(46,240,o),
(37,227,q),
(37,2,l),
(45,-12,o),
(54,-12,qs),
(62,-12,o),
(71,-3,qs),
(91,16,o),
(143,16,o),
(178,3,qs),
(218,-12,o),
(262,-12,qs),
(358,-12,o),
(495,64,o),
(519,128,qs),
(530,159,o),
(530,192,qs),
(530,217,o),
(524,241,qs),
(504,324,o),
(416,382,qs),
(386,402,o),
(326,427,qs),
(257,453,o),
(171,502,o),
(156,535,qs),
(149,548,o),
(149,568,qs),
(149,614,o),
(210,669,o),
(260,669,qs),
(269,669,o),
(283,667,qs),
(327,657,o),
(370,622,qs),
(430,575,o),
(446,510,q),
(449,489,o),
(462,486,qs),
(475,484,o),
(481,497,qs),
(482,499,o),
(482,691,o),
(481,693,qs),
(476,704,o),
(465,704,qs),
(458,704,o),
(447,694,qs),
(430,677,o),
(400,677,qs),
(374,677,o),
(334,691,qs),
(295,704,o),
(255,704,qs),
(249,704,o),
(241,704,qs),
(233,703,ls),
(138,698,o),
(29,593,o),
(29,504,qs)
);
},
{
closed = 1;
nodes = (
(447,651,o),
(447,621,qs),
(447,591,l),
(419,623,o),
(415,628,qs),
(403,641,l),
(411,641,ls),
(417,642,o),
(446,651,q)
);
},
{
closed = 1;
nodes = (
(429,96,o),
(429,174,o),
(398,236,o),
(334,285,o),
(276,316,o),
(231,335,qs),
(113,385,o),
(79,443,qs),
(64,468,o),
(64,503,qs),
(64,583,o),
(111,625,qs),
(113,627,o),
(125,635,o),
(128,638,q),
(132,640,l),
(128,631,ls),
(113,601,o),
(113,565,qs),
(113,523,o),
(148,486,qs),
(172,461,o),
(245,421,o),
(314,394,qs),
(370,371,o),
(396,353,qs),
(482,296,o),
(494,214,qs),
(494,212,o),
(495,196,o),
(495,191,qs),
(495,145,o),
(453,84,o),
(413,58,q)
);
},
{
closed = 1;
nodes = (
(113,51,ls),
(96,51,o),
(73,41,q),
(72,41,o),
(72,74,qs),
(72,107,l),
(96,75,o),
(108,63,qs),
(119,51,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
15 1 2 0 105 84 81 3 8 4 124 121 57 3 10 8 56 1 5 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 2 2 14 77 0 4 4 0 97 3 1 2 0 0 14 77 0 8 8 5 97 7 1 5 5 18 77 0 10 10 6 97 0 6 6 15 77 0 9 9 5 97 7 1 5 5 18 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 10 0 6 5 10 6 105 0 2 2 14 77 0 4 4 0 97 3 1 2 0 0 14 77 0 8 8 5 97 7 1 5 5 18 77 0 9 9 5 97 7 1 5 5 18 5 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
3 1 2 0 0 4 8 0 4 105 0 10 0 6 5 10 6 105 0 2 2 14 77 0 8 8 5 97 7 1 5 5 18 77 0 9 9 5 97 7 1 5 5 18 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 38 values pushed */
3 1 2 0 0 4 8 0 4 105 0 8 10 5 8 89 0 10 0 6 5 10 6 105 0 9 7 1 5 9 5 101 0 2 2 14 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
129 128 68 65 60 58 55 53 51 50 48 46 45 34 34 49 17 11 7 27 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,682,o),
(34,675,qs),
(32,671,o),
(32,582,qs),
(32,494,o),
(34,490,qs),
(43,472,o),
(60,483,qs),
(67,488,o),
(68,505,qs),
(70,525,o),
(75,539,qs),
(92,585,o),
(184,644,o),
(243,649,qs),
(252,649,l),
(252,363,ls),
(252,74,o),
(251,68,qs),
(249,46,o),
(228,36,o),
(192,35,qs),
(187,35,o),
(175,34,o),
(168,34,o),
(167,34,qs),
(155,31,o),
(155,18,qs),
(155,9,o),
(161,5,q),
(165,1,o),
(204,0,o),
(334,0,qs),
(499,0,o),
(501,1,qs),
(512,4,o),
(512,18,qs),
(512,34,o),
(499,34,q),
(497,35,o),
(475,35,qs),
(439,36,o),
(418,46,o),
(416,68,qs),
(415,74,o),
(415,363,qs),
(415,649,l),
(424,649,ls),
(486,644,o),
(531,613,qs),
(594,572,o),
(599,505,qs),
(600,490,o),
(606,484,qs),
(613,479,o),
(628,482,o),
(632,490,q),
(635,494,o),
(635,580,qs),
(635,668,o),
(634,671,qs),
(631,680,o),
(625,683,qs),
(621,685,o),
(334,685,qs),
(46,685,o),
(44,684,qs)
);
},
{
closed = 1;
nodes = (
(128,650,l),
(118,643,ls),
(87,624,o),
(68,598,q),
(68,650,l)
);
},
{
closed = 1;
nodes = (
(381,104,o),
(382,54,o),
(386,42,qs),
(389,35,l),
(278,35,l),
(281,42,l),
(282,45,ls),
(286,54,o),
(287,243,qs),
(287,312,o),
(287,356,qs),
(287,650,l),
(380,650,l),
(380,356,ls)
);
},
{
closed = 1;
nodes = (
(577,625,o),
(549,643,qs),
(539,650,l),
(600,650,l),
(600,597,l),
(596,601,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
5 1 1 0 67 60 56 47 14 5 2 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
9 7 6 5 4 1 1 0 97 0 0 0 14 77 8 4 2 2 2 3 95 0 3 3 15 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
8 4 2 2 0 3 2 3 99 9 7 6 5 4 1 1 0 97 0 0 0 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
88 87 81 80 73 72 71 70 51 50 45 40 35 31 28 24 19 18 32 10 7 23 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(16,678,o),
(16,667,qs),
(16,654,o),
(28,651,qs),
(36,650,ls),
(43,650,o),
(49,650,qs),
(85,649,o),
(92,639,qs),
(94,637,o),
(97,625,o),
(98,624,q),
(98,618,ls),
(98,612,o),
(98,590,o),
(98,561,o),
(99,523,o),
(99,481,o),
(99,432,o),
(99,408,qs),
(100,224,o),
(101,179,o),
(106,157,qs),
(122,71,o),
(258,-19,o),
(364,-19,qs),
(482,-19,o),
(610,106,o),
(619,221,qs),
(620,229,o),
(620,383,qs),
(620,535,o),
(621,543,qs),
(626,594,o),
(662,650,o),
(690,650,qs),
(708,650,o),
(708,667,qs),
(708,674,o),
(703,679,qs),
(699,684,o),
(675,685,o),
(599,685,qs),
(524,685,o),
(500,684,o),
(496,680,qs),
(490,674,o),
(490,667,qs),
(490,664,o),
(491,660,o),
(493,657,o),
(497,655,o),
(499,653,o),
(504,652,o),
(508,651,o),
(514,649,o),
(515,649,qs),
(541,646,o),
(573,589,o),
(577,541,qs),
(578,532,o),
(578,373,qs),
(577,215,o),
(576,204,qs),
(558,68,o),
(462,34,q),
(425,24,o),
(389,24,qs),
(365,24,o),
(359,25,qs),
(310,34,o),
(264,111,o),
(259,190,qs),
(258,204,o),
(258,416,qs),
(259,621,o),
(260,627,q),
(263,635,o),
(268,641,q),
(276,648,o),
(315,650,qs),
(340,650,o),
(345,654,qs),
(359,666,o),
(346,679,qs),
(342,684,o),
(307,685,o),
(184,685,qs),
(30,685,o),
(27,683,qs)
);
},
{
closed = 1;
nodes = (
(224,620,o),
(224,594,o),
(224,552,o),
(223,501,o),
(223,437,o),
(223,408,qs),
(223,362,o),
(224,257,o),
(224,188,o),
(224,186,qs),
(230,75,o),
(281,24,q),
(272,27,ls),
(163,55,o),
(140,163,qs),
(140,164,o),
(139,166,q),
(135,184,o),
(134,326,qs),
(134,378,o),
(134,410,qs),
(134,453,o),
(134,515,qs),
(133,630,o),
(128,644,qs),
(127,648,o),
(126,650,q),
(232,650,l),
(225,634,o),
(224,621,qs)
);
},
{
closed = 1;
nodes = (
(619,648,o),
(615,642,qs),
(605,627,o),
(602,616,qs),
(601,613,o),
(599,611,q),
(597,615,o),
(585,638,o),
(583,642,qs),
(579,648,o),
(579,649,q),
(599,650,l),
(599,650,l),
(619,649,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
77 16 12 3 2 1 1 76 107 1 2 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
8 7 6 4 4 1 1 0 97 3 9 2 0 0 14 77 0 2 2 5 97 0 5 5 18 5 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 24 values pushed */
0 2 0 5 2 5 101 8 7 6 4 4 1 1 0 97 3 9 2 0 0 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
3 0 122 120 92 91 84 81 64 62 54 52 48 45 22 19 9 7 0 89 3 89 10 7 22 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(47,650,o),
(74,601,qs),
(81,587,o),
(216,290,qs),
(231,257,o),
(256,202,qs),
(326,49,o),
(340,19,qs),
(358,-18,o),
(363,-19,qs),
(364,-19,ls),
(377,-21,o),
(382,-12,q),
(383,-11,o),
(641,608,o),
(642,611,q),
(661,647,o),
(697,649,qs),
(698,649,o),
(706,650,o),
(707,651,q),
(712,651,o),
(719,660,q),
(724,679,o),
(709,684,qs),
(707,685,o),
(607,685,qs),
(506,685,o),
(504,684,qs),
(489,679,o),
(494,660,q),
(501,651,o),
(506,651,q),
(508,650,o),
(516,650,q),
(535,647,o),
(549,620,o),
(549,593,qs),
(549,569,o),
(544,539,qs),
(526,443,o),
(447,250,qs),
(421,188,o),
(421,185,q),
(419,185,o),
(340,365,qs),
(252,570,o),
(250,617,qs),
(250,624,o),
(262,633,qs),
(279,647,o),
(305,649,qs),
(318,650,o),
(323,654,qs),
(337,666,o),
(324,679,qs),
(320,684,o),
(285,685,o),
(165,685,qs),
(14,685,o),
(10,683,qs),
(0,678,o),
(0,668,qs),
(0,661,o),
(11,650,o),
(19,650,qs)
);
},
{
closed = 1;
nodes = (
(215,552,o),
(385,178,qs),
(405,134,o),
(405,133,q),
(386,87,l),
(368,42,l),
(361,56,o),
(107,613,o),
(106,615,qs),
(104,620,o),
(93,636,o),
(85,648,o),
(85,650,o),
(156,650,qs),
(227,650,l),
(215,635,o),
(215,620,qs)
);
},
{
closed = 1;
nodes = (
(585,624,o),
(573,650,q),
(627,650,l),
(611,632,o),
(588,572,qs),
(583,561,l),
(583,564,o),
(585,589,o),
(585,594,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
78 76 2 2 73 5 4 3 3 2 2 0 95 1 1 0 0 14 2 78 89 88 69 67 65 64 48 46 39 36 68 6 7 23 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(847,559,o),
(846,553,qs),
(840,487,o),
(801,360,qs),
(794,340,o),
(778,291,o),
(763,247,o),
(752,217,o),
(752,218,q),
(748,222,o),
(704,346,qs),
(627,562,o),
(622,616,qs),
(622,626,l),
(650,648,o),
(668,650,qs),
(681,651,o),
(685,654,qs),
(699,666,o),
(686,679,qs),
(682,684,o),
(649,685,o),
(537,685,qs),
(397,685,o),
(393,683,qs),
(386,680,o),
(382,665,o),
(386,658,qs),
(391,651,o),
(403,650,qs),
(433,647,o),
(454,598,qs),
(458,589,o),
(494,493,o),
(494,492,qs),
(494,485,o),
(366,197,qs),
(364,193,l),
(361,199,l),
(268,466,o),
(243,563,qs),
(233,605,o),
(232,618,q),
(230,623,o),
(232,631,o),
(234,633,o),
(241,638,qs),
(253,648,o),
(267,650,qs),
(279,651,o),
(284,658,qs),
(288,665,o),
(284,680,o),
(277,683,qs),
(273,685,o),
(21,685,o),
(19,684,qs),
(8,680,o),
(8,668,qs),
(8,660,o),
(19,650,o),
(26,650,qs),
(47,650,o),
(64,608,qs),
(69,595,o),
(179,285,o),
(284,-8,o),
(285,-9,qs),
(292,-19,o),
(300,-19,qs),
(309,-19,o),
(316,-9,qs),
(319,-3,o),
(415,218,qs),
(512,441,o),
(513,441,q),
(685,-10,ls),
(690,-21,o),
(704,-19,q),
(710,-17,o),
(716,-9,q),
(716,-8,o),
(825,297,o),
(937,612,o),
(941,621,qs),
(956,650,o),
(974,650,qs),
(984,650,o),
(991,660,q),
(996,679,o),
(981,684,qs),
(979,685,o),
(888,685,qs),
(816,685,o),
(793,684,o),
(789,679,qs),
(784,674,o),
(784,667,qs),
(784,650,o),
(802,650,qs),
(828,650,o),
(847,612,o),
(847,576,qs)
);
},
{
closed = 1;
nodes = (
(202,648,o),
(199,644,q),
(196,636,o),
(196,625,qs),
(196,616,o),
(197,610,qs),
(208,530,o),
(322,205,qs),
(344,143,l),
(323,96,ls),
(303,48,o),
(302,48,qs),
(300,48,o),
(206,317,o),
(100,614,o),
(88,639,qs),
(83,649,o),
(83,650,q),
(202,650,l)
);
},
{
closed = 1;
nodes = (
(593,646,o),
(590,640,qs),
(588,635,o),
(588,620,qs),
(588,603,o),
(594,573,qs),
(615,482,o),
(713,220,qs),
(726,186,o),
(737,157,q),
(728,130,ls),
(718,102,o),
(699,49,o),
(699,51,qs),
(699,52,o),
(599,316,o),
(494,589,o),
(491,600,q),
(478,631,o),
(470,642,qs),
(466,648,o),
(466,650,o),
(531,650,qs),
(597,650,l),
(595,647,l)
);
},
{
closed = 1;
nodes = (
(910,637,ls),
(906,628,o),
(893,594,qs),
(882,564,l),
(882,585,ls),
(881,621,o),
(867,650,q),
(917,650,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
4 1 0 1 150 136 115 112 100 89 88 64 26 9 3 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 26 values pushed */
12 9 11 8 10 7 4 2 8 0 0 1 97 6 5 2 1 1 14 77 0 3 3 18 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 26 values pushed */
0 3 0 3 134 12 9 11 8 10 7 4 2 8 0 0 1 97 6 5 2 1 1 14 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
147 147 124 122 103 103 147 154 147 154 122 146 124 145 103 121 103 121 81 77 37 23 31 36 52 33 13 7 28 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(346,681,o),
(335,684,qs),
(333,685,o),
(184,685,qs),
(36,685,o),
(32,683,qs),
(22,679,o),
(22,669,qs),
(22,662,o),
(32,650,o),
(40,650,qs),
(59,650,o),
(73,638,qs),
(107,606,o),
(284,338,qs),
(308,302,l),
(245,230,ls),
(150,121,o),
(124,94,qs),
(63,35,o),
(36,35,qs),
(29,35,o),
(18,25,o),
(18,18,qs),
(18,7,o),
(28,2,qs),
(32,0,o),
(138,0,qs),
(243,0,l),
(257,7,o),
(257,17,qs),
(257,24,o),
(247,35,o),
(238,35,qs),
(221,35,o),
(199,65,o),
(199,85,qs),
(199,113,o),
(216,133,qs),
(222,140,o),
(277,203,qs),
(332,266,l),
(347,243,ls),
(353,234,o),
(365,216,qs),
(459,74,o),
(459,52,qs),
(459,35,o),
(396,35,qs),
(371,35,o),
(371,18,qs),
(371,7,o),
(381,2,qs),
(385,0,o),
(538,0,qs),
(692,0,o),
(694,1,qs),
(699,3,o),
(704,10,q),
(704,11,o),
(705,16,o),
(705,18,qs),
(705,25,o),
(695,35,o),
(688,35,qs),
(678,35,o),
(668,42,qs),
(648,54,o),
(456,342,qs),
(409,412,l),
(449,464,ls),
(515,551,o),
(526,563,qs),
(597,646,o),
(666,650,qs),
(677,650,o),
(679,651,q),
(684,651,o),
(691,660,q),
(696,679,o),
(681,684,qs),
(679,685,o),
(439,685,o),
(437,684,qs),
(422,679,o),
(427,660,q),
(434,651,o),
(439,651,q),
(441,650,o),
(448,650,q),
(479,643,o),
(479,602,qs),
(479,578,o),
(467,558,qs),
(465,555,o),
(435,514,o),
(392,458,o),
(385,449,q),
(378,459,ls),
(329,534,o),
(300,583,qs),
(279,621,o),
(274,633,q),
(273,638,o),
(275,640,qs),
(289,650,o),
(324,650,qs),
(346,650,o),
(346,667,qs)
);
},
{
closed = 1;
nodes = (
(496,69,o),
(456,136,qs),
(427,187,o),
(334,327,qs),
(166,579,o),
(118,638,qs),
(109,650,l),
(237,650,l),
(237,642,ls),
(237,631,o),
(250,602,qs),
(279,544,o),
(411,346,qs),
(550,137,o),
(611,55,qs),
(626,35,l),
(494,35,l),
(496,41,o),
(496,45,qs)
);
},
{
closed = 1;
nodes = (
(567,647,o),
(551,634,o),
(531,619,o),
(528,616,qs),
(515,603,l),
(515,609,l),
(511,631,o),
(507,640,qs),
(506,642,o),
(505,646,o),
(504,648,qs),
(503,649,l),
(503,650,o),
(536,650,qs),
(567,650,o),
(567,649,qs)
);
},
{
closed = 1;
nodes = (
(126,47,o),
(151,72,qs),
(157,79,o),
(163,84,q),
(167,58,o),
(177,35,q),
(111,35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
146 137 127 92 66 38 10 3 8 3 0 84 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
13 12 9 2 4 0 0 1 97 10 1 1 1 14 77 15 14 11 8 6 5 6 3 3 4 97 7 1 4 4 15 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
15 14 11 8 6 5 6 3 7 1 4 3 4 101 13 12 9 2 4 0 0 1 97 10 1 1 1 14 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
144 144 144 150 144 150 130 129 120 118 111 110 105 102 97 96 88 86 81 79 75 73 60 58 54 52 43 42 34 30 26 24 32 16 7 23 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(504,650,o),
(512,649,o),
(513,649,qs),
(535,644,o),
(563,607,o),
(563,584,qs),
(563,571,o),
(559,560,qs),
(556,552,o),
(421,336,q),
(261,624,ls),
(254,638,o),
(254,645,q),
(257,648,o),
(278,650,qs),
(294,650,o),
(301,654,q),
(315,666,o),
(302,679,qs),
(298,684,o),
(267,685,o),
(163,685,qs),
(33,685,o),
(30,683,qs),
(19,678,o),
(19,667,qs),
(19,654,o),
(31,651,qs),
(32,651,o),
(41,650,o),
(44,650,qs),
(60,649,o),
(67,639,qs),
(79,623,o),
(199,408,qs),
(280,263,l),
(280,169,ls),
(279,71,o),
(274,56,qs),
(272,47,o),
(254,38,o),
(238,36,o),
(221,35,qs),
(215,35,o),
(207,34,qs),
(199,34,l),
(187,31,o),
(187,18,qs),
(187,9,o),
(193,5,q),
(197,1,o),
(235,0,o),
(362,0,qs),
(523,0,o),
(525,1,qs),
(536,4,o),
(536,18,qs),
(536,34,o),
(523,34,q),
(521,35,o),
(502,35,qs),
(477,36,o),
(452,43,o),
(449,56,q),
(447,60,o),
(447,61,q),
(444,70,o),
(443,189,qs),
(443,303,l),
(518,424,ls),
(619,586,o),
(637,609,qs),
(669,650,o),
(686,650,qs),
(693,650,o),
(703,661,o),
(703,668,qs),
(703,674,o),
(698,679,qs),
(694,684,o),
(670,685,o),
(593,685,qs),
(517,685,o),
(493,684,o),
(489,680,q),
(483,676,o),
(483,668,qs),
(483,661,o),
(494,650,o),
(502,650,qs)
);
},
{
closed = 1;
nodes = (
(399,303,o),
(406,292,qs),
(408,289,o),
(408,181,qs),
(409,72,o),
(410,64,q),
(411,62,o),
(415,50,o),
(418,40,o),
(418,37,qs),
(418,35,o),
(362,35,qs),
(305,35,o),
(305,37,qs),
(305,40,o),
(308,50,o),
(312,62,o),
(313,64,q),
(314,72,o),
(315,172,qs),
(315,271,o),
(313,274,qs),
(102,650,l),
(220,650,l),
(219,648,o),
(219,643,qs),
(219,633,o),
(232,603,q)
);
},
{
closed = 1;
nodes = (
(621,645,o),
(595,614,o),
(594,614,q),
(575,650,l),
(625,650,l),
(623,648,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
120 95 79 53 20 5 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
11 9 12 8 7 5 6 1 1 0 97 6 1 0 0 14 77 10 4 2 2 2 3 95 0 3 3 15 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
10 4 2 2 0 3 2 3 99 11 9 12 8 7 5 6 1 1 0 97 6 1 0 0 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
0 0 119 118 106 105 94 91 0 89 0 88 20 71 26 69 67 75 37 54 13 7 30 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(604,243,o),
(599,219,qs),
(588,149,o),
(479,49,o),
(405,38,qs),
(392,36,o),
(306,35,qs),
(220,35,l),
(221,37,l),
(224,40,o),
(604,662,o),
(605,665,qs),
(607,678,o),
(594,684,qs),
(592,685,o),
(94,685,o),
(91,683,qs),
(85,680,o),
(82,674,qs),
(80,670,o),
(71,587,qs),
(62,504,l),
(68,489,o),
(80,489,qs),
(95,489,o),
(98,509,qs),
(105,558,o),
(193,631,o),
(258,643,qs),
(286,649,o),
(356,650,qs),
(413,650,l),
(410,643,o),
(33,29,o),
(30,25,q),
(22,9,o),
(39,2,qs),
(43,0,o),
(595,0,o),
(597,1,qs),
(607,6,o),
(607,13,q),
(608,14,o),
(636,223,o),
(636,230,q),
(635,235,o),
(625,243,o),
(620,243,qs)
);
},
{
closed = 1;
nodes = (
(136,631,o),
(119,615,qs),
(117,613,o),
(116,613,q),
(108,605,o),
(108,608,q),
(113,628,o),
(113,649,qs),
(113,650,o),
(141,650,qs),
(168,650,l),
(158,644,ls)
);
},
{
closed = 1;
nodes = (
(179,35,o),
(128,35,qs),
(77,36,l),
(245,309,ls),
(428,607,o),
(433,616,qs),
(454,650,l),
(556,650,l),
(546,635,o),
(358,326,o),
(180,36,o),
(179,36,q)
);
},
{
closed = 1;
nodes = (
(505,35,l),
(532,51,o),
(543,61,qs),
(550,67,o),
(583,100,o),
(583,102,o),
(584,102,q),
(584,100,o),
(576,38,o),
(575,37,q),
(575,35,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
53 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 7 6 2 1 1 3 97 0 3 3 14 77 9 8 2 4 4 0 97 0 0 0 15 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 2 1 5 1 2 5 128 0 5 4 1 5 4 126 9 8 2 4 0 0 4 0 101 7 6 2 1 1 3 97 0 3 3 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
82 81 36 29 33 21 39 38 37 38 39 10 7 31 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = Z;
unicode = 90;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(294,7,o),
(305,1,qs),
(307,0,o),
(416,0,qs),
(501,0,o),
(528,1,o),
(532,5,qs),
(538,11,o),
(538,18,qs),
(538,31,o),
(523,35,q),
(515,36,o),
(504,46,o),
(486,67,qs),
(478,76,o),
(389,187,o),
(308,289,o),
(308,290,q),
(358,335,ls),
(457,424,o),
(496,427,q),
(518,432,o),
(518,445,qs),
(518,456,o),
(507,462,qs),
(505,463,o),
(411,463,qs),
(338,463,o),
(314,462,o),
(310,458,q),
(304,454,o),
(304,438,o),
(314,428,o),
(322,428,qs),
(331,428,o),
(342,411,o),
(342,400,qs),
(342,379,o),
(323,354,q),
(318,349,o),
(205,246,o),
(203,246,o),
(203,457,qs),
(203,669,o),
(202,672,qs),
(199,680,o),
(193,683,qs),
(189,685,o),
(33,685,o),
(31,684,qs),
(20,681,o),
(20,669,qs),
(20,662,o),
(30,650,o),
(37,650,qs),
(62,650,o),
(65,600,qs),
(65,599,o),
(66,521,o),
(66,398,o),
(66,288,o),
(66,165,o),
(66,126,qs),
(65,86,ls),
(62,35,o),
(37,35,qs),
(28,35,o),
(21,25,q),
(16,6,o),
(31,1,qs),
(33,0,o),
(235,0,o),
(239,2,qs),
(249,7,o),
(249,18,qs),
(249,25,o),
(238,35,o),
(231,35,qs),
(214,35,o),
(206,65,qs),
(204,72,o),
(203,134,qs),
(203,196,l),
(211,202,o),
(214,205,q),
(220,197,ls),
(227,189,o),
(256,153,o),
(267,139,qs),
(335,53,o),
(337,43,q),
(337,37,o),
(319,35,q),
(294,35,o),
(294,18,qs)
);
},
{
closed = 1;
nodes = (
(175,46,o),
(179,37,q),
(179,35,o),
(89,35,o),
(89,37,q),
(99,61,o),
(100,83,qs),
(100,84,o),
(100,163,o),
(101,287,o),
(101,397,o),
(100,522,o),
(100,601,o),
(100,602,qs),
(99,624,o),
(89,648,q),
(89,650,o),
(128,650,qs),
(168,650,l),
(168,359,l),
(169,69,l)
);
},
{
closed = 1;
nodes = (
(391,409,o),
(378,398,q),
(376,419,o),
(372,426,q),
(372,428,o),
(394,428,qs),
(416,428,l),
(404,418,ls)
);
},
{
closed = 1;
nodes = (
(372,43,ls),
(371,60,o),
(357,80,qs),
(342,104,o),
(240,229,q),
(261,247,ls),
(282,266,o),
(283,265,q),
(283,264,o),
(364,163,qs),
(460,41,o),
(466,35,q),
(372,35,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
49 1 4 5 135 131 121 115 76 11 9 7 0 6 85 1 2 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
0 7 11 1 6 0 7 6 105 9 1 4 4 5 97 0 5 5 14 77 10 3 1 3 0 0 2 97 8 1 2 2 15 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 32 values pushed */
0 7 11 1 6 0 7 6 105 10 3 1 3 0 8 1 2 0 2 101 9 1 4 4 5 97 0 5 5 14 4 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
118 116 112 110 98 96 91 89 38 29 37 25 36 37 30 16 12 7 30 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = k;
unicode = 107;
},
{
glyphname = uni00A0;
layers = (
{
layerId = m01;
width = 250;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = yen;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(525,46,l),
(503,46,ls),
(456,46,o),
(441,49,qs),
(427,52,o),
(424,60,qs),
(422,64,o),
(422,139,qs),
(422,213,l),
(616,213,ls),
(628,213,o),
(645,213,o),
(659,213,o),
(668,213,o),
(675,214,o),
(678,215,o),
(680,216,o),
(681,217,o),
(682,219,o),
(682,220,q),
(685,225,o),
(681,238,o),
(676,240,qs),
(673,242,o),
(547,242,qs),
(422,242,l),
(422,273,l),
(476,363,o),
(503,407,q),
(589,407,ls),
(663,408,o),
(679,409,o),
(685,419,o),
(681,432,o),
(676,434,qs),
(673,436,o),
(521,436,o),
(521,438,o),
(614,591,o),
(617,595,qs),
(644,632,o),
(723,637,qs),
(738,637,l),
(738,683,l),
(731,683,l),
(719,680,o),
(633,680,qs),
(534,680,o),
(516,683,q),
(508,683,l),
(508,637,l),
(517,637,ls),
(536,635,o),
(564,619,o),
(564,605,qs),
(564,602,o),
(560,590,o),
(513,514,qs),
(467,436,l),
(403,436,l),
(340,437,l),
(305,494,ls),
(298,505,o),
(274,546,o),
(255,576,o),
(250,584,qs),
(230,619,o),
(230,623,o),
(233,626,qs),
(241,636,o),
(280,637,qs),
(298,637,l),
(298,683,l),
(288,683,l),
(279,681,o),
(211,681,qs),
(153,681,ls),
(66,681,o),
(20,683,qs),
(11,683,l),
(11,637,l),
(31,637,ls),
(66,637,o),
(93,634,qs),
(107,631,o),
(115,623,qs),
(118,620,o),
(227,440,o),
(228,437,qs),
(228,436,o),
(153,436,qs),
(76,436,o),
(73,434,qs),
(68,432,o),
(64,419,o),
(67,414,qs),
(69,409,o),
(81,407,o),
(115,407,qs),
(247,407,l),
(260,384,o),
(314,295,o),
(327,273,q),
(327,242,l),
(202,242,ls),
(76,242,o),
(73,240,qs),
(68,238,o),
(64,225,o),
(67,220,q),
(67,219,o),
(68,217,o),
(69,216,o),
(71,215,o),
(74,214,o),
(81,213,o),
(90,213,o),
(104,213,o),
(121,213,o),
(133,213,qs),
(327,213,l),
(327,137,ls),
(327,63,o),
(324,58,qs),
(316,47,o),
(257,46,qs),
(224,46,l),
(224,0,l),
(235,0,l),
(251,3,o),
(374,3,qs),
(499,3,o),
(515,0,q),
(525,0,l)
);
},
{
closed = 1;
nodes = (
(447,404,o),
(404,331,q),
(392,350,ls),
(381,368,o),
(370,387,qs),
(358,406,l),
(358,407,o),
(403,407,qs),
(449,407,o),
(449,406,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
141 106 30 3 4 5 23 1 3 4 9 1 2 3 3 76 88 83 2 8 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
15 11 2 6 23 21 16 3 5 4 6 5 103 17 1 4 18 1 3 2 4 3 103 14 12 10 3 7 7 8 95 13 9 2 8 8 14 77 19 1 2 2 0 95 22 20 1 3 0 0 15 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
15 11 2 6 23 21 16 3 5 4 6 5 103 17 1 4 18 1 3 2 4 3 103 19 1 2 22 20 1 3 0 2 0 99 14 12 10 3 7 7 8 95 13 9 2 8 8 14 7 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 46 values pushed */
136 134 0 0 134 143 136 142 0 133 0 133 132 130 124 118 109 107 104 101 97 95 92 90 87 85 82 81 74 72 63 61 60 59 81 39 38 36 42 84 33 17 33 24 7 31 
CALL[ ]	/* CallFunction */";
};
width = 750;
}
);
note = yen;
unicode = 165;
},
{
glyphname = registered;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(319,690,o),
(179,607,o),
(129,545,qs),
(57,457,o),
(37,342,qs),
(32,314,o),
(32,287,qs),
(32,266,ls),
(32,220,o),
(38,190,qs),
(63,41,o),
(175,-60,qs),
(302,-175,o),
(474,-175,qs),
(639,-175,o),
(883,37,o),
(909,190,qs),
(915,220,o),
(915,266,qs),
(915,287,ls),
(915,315,o),
(910,342,qs),
(900,404,o),
(870,464,qs),
(821,561,o),
(640,693,o),
(522,708,qs),
(513,709,o),
(464,709,qs),
(422,709,o),
(397,703,q)
);
},
{
closed = 1;
nodes = (
(686,648,o),
(788,518,qs),
(853,437,o),
(870,336,qs),
(875,312,o),
(875,285,qs),
(875,266,ls),
(875,231,o),
(873,217,qs),
(858,102,o),
(784,11,qs),
(756,-22,o),
(727,-46,qs),
(634,-120,o),
(519,-133,qs),
(507,-135,o),
(474,-135,qs),
(440,-135,o),
(428,-133,qs),
(289,-116,o),
(91,79,o),
(74,217,qs),
(72,231,o),
(72,266,qs),
(72,285,ls),
(72,312,o),
(77,336,qs),
(93,431,o),
(211,588,o),
(299,630,qs),
(364,662,o),
(448,669,q),
(465,669,ls),
(510,669,o),
(519,668,qs)
);
},
{
closed = 1;
nodes = (
(432,40,l),
(418,40,ls),
(399,40,o),
(393,41,qs),
(376,43,o),
(365,48,o),
(361,58,q),
(360,148,l),
(360,239,l),
(413,239,ls),
(466,238,o),
(472,236,qs),
(517,222,o),
(528,180,qs),
(530,169,o),
(531,75,o),
(534,67,q),
(552,0,o),
(647,-12,q),
(650,-13,o),
(669,-14,o),
(673,-14,qs),
(700,-14,o),
(715,-7,qs),
(735,2,o),
(760,45,o),
(760,70,qs),
(760,79,o),
(752,84,o),
(728,84,o),
(721,78,o),
(720,68,qs),
(715,23,o),
(683,23,qs),
(663,23,o),
(651,41,qs),
(640,57,o),
(626,124,qs),
(614,177,o),
(590,224,o),
(559,245,qs),
(552,249,o),
(547,253,q),
(588,268,o),
(651,320,o),
(659,353,qs),
(661,359,o),
(661,375,qs),
(661,407,o),
(642,434,qs),
(622,463,o),
(544,504,o),
(499,510,qs),
(477,514,o),
(335,514,qs),
(204,514,l),
(204,474,l),
(218,474,ls),
(237,474,o),
(243,473,qs),
(255,472,o),
(267,468,o),
(271,464,o),
(276,457,q),
(276,58,l),
(270,48,o),
(260,42,o),
(243,41,qs),
(237,40,o),
(218,40,qs),
(204,40,l),
(204,0,l),
(212,0,l),
(223,3,o),
(413,3,o),
(424,0,q),
(432,0,l)
);
},
{
closed = 1;
nodes = (
(561,324,o),
(542,305,qs),
(525,288,o),
(500,282,qs),
(480,277,o),
(416,276,qs),
(360,276,l),
(360,366,ls),
(360,458,o),
(361,460,qs),
(364,470,o),
(376,473,qs),
(384,474,ls),
(391,474,o),
(415,474,o),
(427,474,qs),
(478,473,o),
(482,472,qs),
(526,463,o),
(561,424,o),
(561,375,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 116 values pushed */
153 78 2 14 6 99 1 11 14 135 77 2 5 9 142 69 2 10 4 4 76 0 9 11 5 11 9 5 128 0 0 0 2 7 0 2 105 0 7 13 1 6 14 7 6 103 0 14 0 11 9 14 11 103 12 1 5 0 4 10 5 4 105 0 8 0 10 3 8 10 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 158 156 151 145 141 138 133 130 122 119 113 112 109 107 88 86 85 82 73 71 68 67 46 46 45 32 15 7 26 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 947;
}
);
note = registered;
unicode = 174;
},
{
glyphname = eth;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,679,o),
(89,677,qs),
(92,676,l),
(95,676,o),
(104,676,o),
(108,676,qs),
(192,671,o),
(257,639,qs),
(267,634,o),
(267,633,q),
(122,556,l),
(121,556,o),
(121,588,qs),
(121,621,o),
(120,622,qs),
(114,630,o),
(94,630,qs),
(77,630,o),
(65,623,q),
(65,520,l),
(75,513,o),
(93,513,qs),
(106,513,o),
(110,515,qs),
(116,517,o),
(209,566,o),
(254,590,qs),
(298,613,l),
(304,613,o),
(331,586,qs),
(366,549,o),
(383,507,qs),
(411,443,o),
(411,378,qs),
(411,372,l),
(406,379,ls),
(363,447,o),
(291,462,qs),
(282,464,o),
(258,464,qs),
(228,464,o),
(205,458,qs),
(142,443,o),
(89,374,qs),
(42,311,o),
(42,225,qs),
(42,202,o),
(44,186,qs),
(55,106,o),
(115,45,qs),
(150,11,o),
(222,-22,o),
(276,-22,qs),
(324,-22,o),
(365,-2,qs),
(513,72,o),
(513,343,qs),
(513,366,o),
(512,374,qs),
(505,450,o),
(424,587,o),
(358,633,qs),
(349,640,o),
(350,641,q),
(351,641,o),
(393,663,qs),
(434,685,l),
(434,652,l),
(435,619,l),
(441,610,o),
(463,610,qs),
(476,610,o),
(490,618,q),
(490,721,l),
(485,726,o),
(480,726,q),
(474,728,o),
(460,728,qs),
(456,728,o),
(448,727,o),
(447,727,qs),
(444,726,o),
(354,679,qs),
(318,659,l),
(299,669,ls),
(203,716,o),
(100,716,qs),
(88,716,o),
(83,710,o),
(83,696,qs)
);
},
{
closed = 1;
nodes = (
(368,409,o),
(397,322,qs),
(409,288,o),
(409,235,qs),
(409,134,o),
(387,92,qs),
(372,62,o),
(317,22,o),
(282,22,qs),
(274,22,ls),
(218,22,o),
(187,53,qs),
(160,80,o),
(143,155,o),
(143,223,qs),
(143,277,o),
(145,297,qs),
(150,340,o),
(159,359,qs),
(192,427,o),
(264,427,qs),
(284,427,o),
(298,425,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 30 values pushed */
15 1 0 1 22 1 7 0 79 5 2 6 7 74 70 20 16 4 2 6 69 1 5 2 54 1 9 8 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 43 values pushed */
0 0 0 7 6 0 7 105 0 1 0 2 5 1 2 105 0 6 0 5 4 6 5 105 0 4 0 8 9 4 8 105 0 9 9 3 97 0 3 3 18 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 0 0 7 6 0 7 105 0 1 0 2 5 1 2 105 0 6 0 5 4 6 5 105 0 4 0 8 9 4 8 105 0 9 3 3 9 89 0 9 9 3 97 0 3 9 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
104 101 92 90 85 82 73 71 68 66 50 48 37 35 37 39 33 10 7 25 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = eth;
unicode = 240;
},
{
glyphname = hbar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,548,o),
(105,543,qs),
(107,542,o),
(143,542,qs),
(177,542,o),
(177,540,q),
(144,415,ls),
(112,290,o),
(48,28,o),
(48,17,qs),
(48,5,o),
(71,-11,o),
(83,-11,qs),
(114,-11,o),
(127,16,qs),
(132,28,o),
(164,158,qs),
(198,293,l),
(205,306,ls),
(256,388,o),
(323,402,qs),
(331,404,o),
(349,404,qs),
(398,404,o),
(398,345,qs),
(398,322,o),
(395,307,qs),
(382,239,o),
(335,118,qs),
(325,90,o),
(325,74,qs),
(325,37,o),
(375,-10,o),
(414,-10,qs),
(439,-10,o),
(458,-1,qs),
(490,16,o),
(539,87,o),
(551,130,q),
(555,139,o),
(555,153,o),
(535,153,qs),
(522,153,o),
(516,149,o),
(513,138,qs),
(499,87,o),
(450,26,o),
(422,26,qs),
(411,26,o),
(403,36,o),
(402,50,qs),
(402,72,o),
(420,121,qs),
(466,247,o),
(475,298,qs),
(478,313,o),
(478,336,qs),
(478,388,o),
(412,442,o),
(357,442,qs),
(281,442,o),
(220,381,q),
(220,382,o),
(239,458,o),
(259,538,o),
(260,542,q),
(453,542,l),
(469,552,o),
(469,562,qs),
(469,574,o),
(454,582,q),
(362,582,ls),
(270,582,o),
(270,584,o),
(294,675,o),
(294,684,qs),
(294,694,o),
(282,694,qs),
(281,694,o),
(138,683,o),
(137,683,qs),
(129,683,o),
(124,664,qs),
(121,647,o),
(122,643,o),
(128,637,q),
(149,637,ls),
(177,636,o),
(195,631,o),
(195,621,qs),
(195,612,o),
(187,582,q),
(106,582,l),
(90,572,o),
(90,563,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
43 1 7 8 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
43 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 8 10 7 10 8 7 128 4 1 0 12 1 5 6 0 5 106 0 6 0 10 8 6 10 105 0 3 3 14 77 0 1 1 2 97 0 2 2 14 77 0 7 7 9 97 11 1 9 9 18 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 8 10 7 10 8 7 128 4 1 0 12 1 5 6 0 5 106 0 6 0 10 8 6 10 105 0 7 11 1 9 7 9 101 0 3 3 14 77 0 1 1 2 97 0 2 2 14 1 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
91 88 82 80 72 70 61 59 36 42 37 20 51 33 36 36 17 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = hbar;
unicode = 295;
},
{
glyphname = circumflex;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-13,620,o),
(-13,613,qs),
(-13,577,o),
(1,577,qs),
(5,577,o),
(1164,768,o),
(1168,768,o),
(2327,577,o),
(2331,577,qs),
(2345,577,o),
(2345,613,qs),
(2345,620,o),
(2340,623,qs),
(2338,624,o),
(1167,847,o),
(1165,847,qs),
(1161,847,o),
(-6,623,o),
(-8,623,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
16 1 0 74 1 1 0 0 118 36 24 2 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 2333;
}
);
note = circumflex;
unicode = 710;
},
{
glyphname = tilde;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(562,887,o),
(105,751,qs),
(33,729,o),
(24,724,qs),
(3,714,o),
(0,704,q),
(0,672,o),
(6,663,q),
(8,657,o),
(16,657,qs),
(17,657,o),
(62,670,qs),
(261,732,o),
(691,826,o),
(835,826,qs),
(917,826,o),
(980,811,qs),
(1053,795,o),
(1146,744,qs),
(1255,685,o),
(1335,669,qs),
(1395,657,o),
(1470,657,qs),
(1706,657,o),
(2155,785,qs),
(2292,824,o),
(2308,833,qs),
(2329,843,o),
(2332,853,q),
(2332,885,o),
(2326,894,q),
(2324,900,o),
(2316,900,qs),
(2314,900,o),
(2271,887,qs),
(1763,731,o),
(1497,731,qs),
(1415,731,o),
(1352,746,qs),
(1279,763,o),
(1187,813,qs),
(1091,865,o),
(1028,881,qs),
(956,900,o),
(862,900,qs),
(830,900,o),
(814,899,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
17 1 4 0 40 1 3 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 6 2 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 97 5 1 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 6 1 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 97 5 1 3 1 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 37 35 32 30 24 22 14 12 10 8 0 46 2 45 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 2333;
}
);
note = tilde;
unicode = 732;
},
{
glyphname = uni0302;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-2346,620,o),
(-2346,613,qs),
(-2346,577,o),
(-2332,577,qs),
(-2328,577,o),
(-1169,768,o),
(-1165,768,o),
(-6,577,o),
(-2,577,qs),
(12,577,o),
(12,613,qs),
(12,620,o),
(7,623,qs),
(5,624,o),
(-1166,847,o),
(-1168,847,qs),
(-1172,847,o),
(-2339,623,o),
(-2341,623,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 14 values pushed */
16 1 0 74 1 1 0 0 118 36 24 2 7 24 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni0302;
unicode = 770;
},
{
glyphname = tildecomb;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(-1771,887,o),
(-2228,751,qs),
(-2300,729,o),
(-2309,724,qs),
(-2330,714,o),
(-2333,704,q),
(-2333,672,o),
(-2327,663,q),
(-2326,657,o),
(-2317,657,qs),
(-2316,657,o),
(-2271,670,qs),
(-2072,732,o),
(-1642,826,o),
(-1498,826,qs),
(-1416,826,o),
(-1353,811,qs),
(-1280,795,o),
(-1187,744,qs),
(-1078,685,o),
(-998,669,qs),
(-938,657,o),
(-863,657,qs),
(-627,657,o),
(-178,785,qs),
(-41,824,o),
(-25,833,qs),
(-4,843,o),
(-1,853,q),
(-1,885,o),
(-7,894,q),
(-8,900,o),
(-17,900,qs),
(-19,900,o),
(-62,887,qs),
(-570,731,o),
(-836,731,qs),
(-918,731,o),
(-981,746,qs),
(-1054,763,o),
(-1146,813,qs),
(-1242,865,o),
(-1305,881,qs),
(-1377,900,o),
(-1471,900,qs),
(-1503,900,o),
(-1519,899,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 10 values pushed */
17 1 4 0 40 1 3 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
2 6 2 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 97 5 1 3 1 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
0 2 0 2 133 6 1 0 0 4 1 0 4 105 0 1 3 3 1 89 0 1 1 3 97 5 1 3 1 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 19 values pushed */
2 0 37 35 32 30 24 22 14 12 10 8 0 46 2 45 7 7 22 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = tildecomb;
unicode = 771;
},
{
glyphname = uni03DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-82,o),
(156,-72,qs),
(156,-71,o),
(166,-31,o),
(188,56,o),
(197,91,qs),
(236,251,l),
(345,251,ls),
(454,252,o),
(463,254,qs),
(478,257,o),
(478,265,o),
(463,268,qs),
(454,270,o),
(348,271,qs),
(242,271,o),
(242,273,o),
(280,423,o),
(319,579,o),
(320,585,q),
(508,585,ls),
(697,586,o),
(706,588,qs),
(722,591,o),
(722,595,qs),
(722,598,o),
(702,603,qs),
(694,605,o),
(421,605,qs),
(396,605,o),
(343,605,o),
(303,604,o),
(270,604,o),
(250,604,o),
(249,604,qs),
(226,601,o),
(223,596,qs),
(222,595,o),
(140,266,o),
(57,-69,o),
(57,-74,qs),
(57,-82,o),
(107,-82,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 4 3 4 134 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 95 0 3 2 3 79 0 0 0 42 0 41 37 51 38 119 6 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni03DD;
unicode = 989;
},
{
glyphname = uni03F0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,429,o),
(133,372,o),
(121,329,qs),
(116,312,o),
(138,312,qs),
(156,312,o),
(159,320,q),
(167,335,o),
(240,348,o),
(273,348,q),
(278,347,o),
(278,335,qs),
(278,307,o),
(248,233,qs),
(227,183,o),
(196,134,q),
(129,90,ls),
(64,48,o),
(58,42,qs),
(49,33,o),
(49,22,qs),
(49,-4,o),
(87,-4,qs),
(110,-4,o),
(135,9,q),
(228,70,ls),
(322,130,o),
(506,250,o),
(507,251,q),
(517,257,l),
(515,252,l),
(487,203,o),
(467,147,qs),
(450,94,o),
(450,61,qs),
(450,1,o),
(488,1,qs),
(543,1,o),
(634,56,o),
(650,94,q),
(654,108,o),
(654,109,qs),
(654,119,o),
(634,119,qs),
(618,119,o),
(615,112,qs),
(613,105,o),
(602,100,qs),
(571,87,o),
(521,84,qs),
(501,83,l),
(495,88,o),
(495,94,qs),
(495,103,o),
(499,115,qs),
(529,231,o),
(580,298,q),
(644,340,ls),
(711,384,o),
(714,387,qs),
(724,396,o),
(724,408,qs),
(724,434,o),
(688,434,qs),
(666,434,o),
(641,423,qs),
(627,417,o),
(444,296,qs),
(421,281,o),
(351,235,o),
(314,212,o),
(274,185,o),
(266,180,qs),
(257,175,l),
(263,186,ls),
(308,263,o),
(321,339,qs),
(323,349,o),
(323,368,qs),
(323,429,o),
(285,429,qs),
(282,429,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
50 7 2 3 7 39 28 2 2 3 2 76 0 1 0 1 133 0 7 6 3 6 7 3 128 0 3 2 6 3 2 126 0 5 4 5 134 8 1 0 0 6 7 0 6 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 1 0 77 75 72 70 59 57 45 43 38 36 32 30 18 16 0 81 1 80 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni03F0;
unicode = 1008;
},
{
glyphname = uni2035;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,558,o),
(46,552,q),
(12,536,o),
(12,501,qs),
(12,496,o),
(14,486,qs),
(15,479,o),
(188,47,o),
(190,45,qs),
(194,41,o),
(218,48,qs),
(244,57,o),
(244,61,qs),
(244,68,o),
(133,518,o),
(128,528,qs),
(114,560,o),
(77,560,qs),
(73,560,o),
(63,558,q)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 32 1 7 23 
CALL[ ]	/* CallFunction */";
};
width = 275;
}
);
note = uni2035;
unicode = 8245;
},
{
glyphname = uni210F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(439,-10,o),
(458,-1,qs),
(490,16,o),
(539,87,o),
(551,130,q),
(555,139,o),
(555,153,o),
(535,153,qs),
(522,153,o),
(516,149,o),
(513,138,qs),
(499,87,o),
(450,26,o),
(422,26,qs),
(411,26,o),
(403,36,o),
(402,50,qs),
(402,72,o),
(420,121,qs),
(466,247,o),
(475,298,qs),
(478,313,o),
(478,336,qs),
(478,388,o),
(412,442,o),
(357,442,qs),
(286,442,o),
(227,388,qs),
(220,381,o),
(220,383,q),
(222,392,ls),
(224,400,o),
(233,435,o),
(237,450,qs),
(253,516,l),
(368,551,ls),
(486,588,o),
(489,590,qs),
(500,595,o),
(500,607,qs),
(500,615,o),
(488,627,o),
(481,627,qs),
(478,627,o),
(373,595,o),
(266,561,o),
(265,561,q),
(265,563,o),
(294,678,o),
(294,685,qs),
(294,694,o),
(282,694,qs),
(281,694,o),
(138,683,o),
(137,683,qs),
(129,683,o),
(124,664,qs),
(121,647,o),
(122,643,o),
(128,637,q),
(149,637,ls),
(152,637,o),
(156,637,qs),
(167,637,o),
(185,635,o),
(195,628,o),
(195,616,o),
(184,569,qs),
(175,533,l),
(135,520,ls),
(113,514,o),
(89,506,q),
(71,502,o),
(71,486,qs),
(71,468,o),
(89,466,qs),
(98,466,o),
(162,487,o),
(163,487,q),
(163,486,o),
(48,31,o),
(48,17,qs),
(48,5,o),
(71,-11,o),
(83,-11,qs),
(114,-11,o),
(127,16,qs),
(132,28,o),
(164,158,qs),
(198,293,l),
(205,306,ls),
(256,388,o),
(323,402,qs),
(331,404,o),
(349,404,qs),
(398,404,o),
(398,345,qs),
(398,322,o),
(395,307,qs),
(382,239,o),
(335,118,qs),
(325,90,o),
(325,74,qs),
(325,37,o),
(375,-10,o),
(414,-10,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 96 values pushed */
55 1 4 5 75 1 9 0 88 1 8 9 3 76 0 5 4 5 133 0 6 3 2 3 6 2 128 0 2 7 3 2 7 126 0 9 0 8 0 9 8 128 0 4 0 3 6 4 3 105 0 7 0 0 9 7 0 105 0 8 1 1 8 89 0 8 8 1 97 11 10 2 1 8 1 81 0 0 0 105 0 104 98 96 42 47 39 33 36 76 23 40 41 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 540;
}
);
note = uni210F;
unicode = 8463;
},
{
glyphname = uni2127;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(77,510,o),
(80,512,qs),
(83,515,o),
(90,545,qs),
(96,576,o),
(104,596,qs),
(110,608,o),
(148,608,qs),
(155,608,o),
(185,607,o),
(193,607,qs),
(223,607,o),
(223,606,qs),
(223,600,o),
(213,578,q),
(198,536,o),
(145,455,qs),
(81,352,o),
(65,298,qs),
(55,261,o),
(55,229,qs),
(55,200,o),
(63,173,qs),
(81,107,o),
(138,56,qs),
(230,-22,o),
(361,-22,qs),
(384,-22,o),
(400,-20,qs),
(494,-9,o),
(637,94,o),
(658,173,qs),
(666,200,o),
(666,229,qs),
(666,261,o),
(656,298,qs),
(640,352,o),
(576,455,qs),
(523,536,o),
(508,578,q),
(498,600,o),
(498,606,qs),
(498,607,o),
(528,607,qs),
(587,607,o),
(599,605,q),
(615,599,o),
(617,596,q),
(625,576,o),
(631,545,qs),
(638,515,o),
(641,512,qs),
(644,510,o),
(657,510,qs),
(669,510,o),
(674,512,o),
(677,519,q),
(677,522,o),
(644,675,o),
(643,676,q),
(643,677,o),
(637,683,q),
(548,683,ls),
(476,683,o),
(455,682,o),
(452,677,qs),
(451,675,o),
(451,665,qs),
(451,637,o),
(458,598,qs),
(467,549,o),
(503,445,qs),
(544,331,o),
(552,263,qs),
(554,247,o),
(554,226,qs),
(554,82,o),
(440,32,qs),
(401,15,o),
(361,15,qs),
(274,15,o),
(168,132,o),
(168,226,qs),
(168,255,o),
(169,263,qs),
(177,331,o),
(218,445,qs),
(248,534,o),
(258,576,qs),
(269,619,o),
(269,659,qs),
(270,677,l),
(267,679,o),
(263,683,q),
(174,683,ls),
(85,683,o),
(83,681,q),
(79,681,o),
(79,677,q),
(77,674,o),
(44,523,o),
(44,519,q),
(47,512,o),
(52,510,o),
(64,510,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
12 1 4 0 2 1 3 4 2 76 8 7 2 3 4 1 4 3 1 128 2 1 0 6 1 4 3 0 4 105 0 1 5 5 1 89 0 1 1 5 97 0 5 1 5 81 0 0 0 104 0 103 79 47 40 24 62 45 70 9 6 29 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni2127;
unicode = 8487;
},
{
glyphname = uni2132;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(460,40,l),
(70,40,l),
(56,33,o),
(56,7,o),
(70,0,q),
(279,0,l),
(487,1,l),
(498,10,o),
(500,15,q),
(500,679,l),
(493,693,o),
(482,694,qs),
(470,694,o),
(460,678,q),
(460,367,l),
(220,367,l),
(206,360,o),
(206,334,o),
(220,327,q),
(460,327,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
9 5 2 0 1 10 1 2 3 2 76 0 1 0 1 133 0 0 5 1 4 3 0 4 103 0 3 2 2 3 87 0 3 3 2 95 0 2 3 2 79 0 0 0 19 0 19 19 37 18 19 6 6 26 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uni2132;
unicode = 8498;
},
{
glyphname = uni2136;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(565,-20,o),
(569,-18,qs),
(571,-17,o),
(626,36,qs),
(678,89,o),
(679,93,qs),
(683,109,o),
(669,116,qs),
(663,119,o),
(638,119,qs),
(611,119,l),
(611,376,ls),
(610,634,o),
(609,643,qs),
(603,676,o),
(575,706,o),
(546,713,q),
(337,714,ls),
(132,714,o),
(124,716,q),
(103,726,o),
(96,746,q),
(91,756,l),
(82,769,o),
(66,761,qs),
(55,754,o),
(55,732,qs),
(55,716,ls),
(55,670,o),
(57,652,qs),
(63,619,o),
(92,588,o),
(121,582,q),
(330,581,l),
(540,581,l),
(567,568,o),
(570,554,qs),
(571,550,o),
(571,333,qs),
(571,119,l),
(338,119,ls),
(104,119,o),
(99,117,q),
(93,116,o),
(43,65,qs),
(-6,18,o),
(-11,10,qs),
(-14,5,o),
(-14,0,qs),
(-14,-10,o),
(2,-20,q),
(284,-20,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
2 1 4 0 1 76 0 2 0 1 0 2 1 103 3 1 0 4 4 0 89 3 1 0 0 4 95 5 1 4 0 4 79 0 0 0 51 0 50 38 46 37 41 6 6 26 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni2136;
unicode = 8502;
},
{
glyphname = uni2137;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(410,697,o),
(357,711,qs),
(349,713,o),
(239,714,qs),
(131,714,o),
(125,716,qs),
(103,724,o),
(95,747,qs),
(91,763,o),
(75,763,qs),
(62,763,o),
(56,748,qs),
(55,745,o),
(55,702,qs),
(56,648,o),
(62,631,qs),
(73,599,o),
(102,587,qs),
(117,581,o),
(220,581,qs),
(312,581,l),
(312,119,l),
(206,119,ls),
(102,119,o),
(96,117,qs),
(94,116,o),
(42,64,qs),
(2,25,o),
(-14,6,o),
(-14,0,qs),
(-14,-11,o),
(2,-20,q),
(120,-20,ls),
(238,-20,o),
(242,-18,qs),
(250,-13,o),
(284,21,o),
(313,50,o),
(315,50,qs),
(316,50,o),
(321,16,o),
(328,-25,o),
(331,-31,qs),
(340,-49,o),
(357,-40,qs),
(380,-29,o),
(389,17,qs),
(393,35,o),
(393,100,qs),
(393,194,o),
(373,355,qs),
(353,519,o),
(353,573,qs),
(353,583,l),
(410,599,o),
(410,650,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
1 1 2 4 25 1 0 1 2 76 0 3 4 3 133 0 4 0 2 1 4 2 103 0 1 0 0 1 87 0 1 1 0 95 0 0 1 0 79 52 49 46 44 36 34 33 31 23 20 5 6 22 
CALL[ ]	/* CallFunction */";
};
width = 444;
}
);
note = uni2137;
unicode = 8503;
},
{
glyphname = uni2138;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(632,698,o),
(572,713,q),
(350,714,ls),
(132,714,o),
(124,716,q),
(103,726,o),
(96,746,q),
(91,756,l),
(82,769,o),
(66,761,qs),
(55,754,o),
(55,732,qs),
(55,716,ls),
(55,670,o),
(57,652,qs),
(63,619,o),
(92,588,o),
(121,582,q),
(328,581,l),
(535,581,l),
(535,337,ls),
(535,78,o),
(539,48,qs),
(546,-11,o),
(553,-30,qs),
(558,-42,o),
(572,-42,qs),
(595,-42,o),
(610,8,q),
(617,40,o),
(617,95,qs),
(617,124,o),
(616,172,o),
(611,228,o),
(608,257,o),
(598,337,o),
(596,357,qs),
(578,494,o),
(576,570,qs),
(575,583,l),
(600,587,o),
(632,622,o),
(632,648,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
3 1 0 1 1 76 0 0 1 0 134 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 46 38 46 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni2138;
unicode = 8504;
},
{
glyphname = uni2141;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(39,65,o),
(40,33,o),
(45,23,qs),
(54,4,o),
(113,-16,o),
(166,-21,o),
(215,-22,qs),
(288,-22,o),
(326,-12,qs),
(426,13,o),
(565,182,o),
(581,298,qs),
(582,308,o),
(582,342,qs),
(582,436,o),
(540,520,qs),
(499,600,o),
(345,705,o),
(247,705,qs),
(158,705,o),
(74,663,qs),
(53,653,o),
(49,646,q),
(47,640,o),
(47,638,qs),
(47,630,o),
(59,617,o),
(66,617,qs),
(69,617,o),
(88,625,q),
(167,665,o),
(247,665,qs),
(301,665,o),
(346,648,qs),
(426,614,o),
(528,475,o),
(541,383,qs),
(542,373,o),
(542,311,o),
(541,301,qs),
(528,208,o),
(426,69,o),
(346,35,qs),
(302,18,o),
(229,18,qs),
(187,18,o),
(161,20,qs),
(98,24,o),
(79,43,q),
(79,269,l),
(234,269,l),
(250,278,o),
(250,300,o),
(234,309,q),
(52,309,l),
(42,301,o),
(39,294,q),
(39,167,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
0 1 1 0 8 1 2 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 4 0 4 5 0 128 0 2 1 3 1 2 3 128 0 6 0 4 5 6 4 105 0 0 0 1 2 0 1 103 0 3 7 7 3 89 0 3 3 7 97 0 7 3 7 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 42 values pushed */
0 5 4 0 4 5 0 128 0 6 0 4 5 6 4 105 0 0 0 1 2 0 1 103 3 1 2 7 7 2 89 3 1 2 2 7 97 0 7 2 7 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 4 0 4 5 0 128 0 2 1 3 1 2 3 128 0 6 0 4 5 6 4 105 0 0 0 1 2 0 1 103 0 3 7 7 3 89 0 3 3 7 97 0 7 3 7 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
42 39 34 43 33 18 19 18 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 639;
}
);
note = uni2141;
unicode = 8513;
},
{
glyphname = arrowleft;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,317,o),
(78,270,qs),
(64,262,o),
(64,238,o),
(78,230,qs),
(162,183,o),
(205,83,qs),
(210,70,o),
(218,66,qs),
(221,64,o),
(250,64,qs),
(278,64,o),
(281,65,q),
(292,71,o),
(292,82,qs),
(292,91,o),
(287,100,q),
(264,160,o),
(223,209,qs),
(216,218,o),
(213,223,q),
(211,225,l),
(306,225,ls),
(385,225,o),
(409,227,o),
(415,232,q),
(422,241,o),
(422,259,o),
(415,268,q),
(409,273,o),
(385,275,o),
(306,275,qs),
(211,275,l),
(213,277,l),
(216,282,o),
(223,291,qs),
(264,340,o),
(287,400,q),
(292,409,o),
(292,418,qs),
(292,429,o),
(281,435,q),
(275,437,o),
(252,437,qs),
(238,437,ls),
(221,437,o),
(212,431,o),
(205,417,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 0 3 2 3 134 0 1 2 2 1 87 0 1 1 2 96 0 2 1 2 80 57 39 42 49 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = arrowleft;
unicode = 8592;
},
{
glyphname = arrowright;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,433,o),
(188,417,qs),
(188,408,o),
(205,374,qs),
(230,322,o),
(257,291,qs),
(264,282,o),
(267,277,q),
(269,275,l),
(174,275,ls),
(95,275,o),
(71,273,o),
(65,268,q),
(58,259,o),
(58,241,o),
(65,232,q),
(71,227,o),
(95,225,o),
(174,225,qs),
(269,225,l),
(267,223,l),
(264,218,o),
(257,209,qs),
(216,160,o),
(193,100,q),
(188,91,o),
(188,82,qs),
(188,71,o),
(199,65,q),
(202,64,o),
(231,64,qs),
(259,64,o),
(263,66,qs),
(270,70,o),
(275,83,qs),
(318,183,o),
(402,230,qs),
(417,239,o),
(417,261,o),
(402,270,qs),
(318,317,o),
(275,417,qs),
(270,430,o),
(263,434,qs),
(257,437,o),
(233,437,qs),
(205,437,o),
(204,436,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
4 1 0 3 0 133 0 1 2 1 134 0 3 2 2 3 87 0 3 3 2 96 0 2 3 2 80 2 0 38 36 29 27 17 14 0 47 2 47 5 6 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = arrowright;
unicode = 8594;
},
{
glyphname = uni219A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(944,261,o),
(934,267,qs),
(930,270,o),
(734,270,qs),
(537,271,l),
(552,294,o),
(613,386,o),
(629,409,q),
(631,420,o),
(621,437,o),
(611,437,qs),
(608,437,o),
(606,436,q),
(600,435,o),
(586,415,o),
(543,351,qs),
(489,270,l),
(156,270,l),
(172,286,ls),
(220,334,o),
(248,396,qs),
(255,414,o),
(255,419,qs),
(255,428,o),
(231,428,qs),
(218,427,o),
(211,423,o),
(207,412,qs),
(166,314,o),
(70,264,qs),
(55,256,o),
(55,244,o),
(70,236,qs),
(165,188,o),
(207,88,qs),
(211,77,o),
(218,73,o),
(231,72,qs),
(255,72,o),
(255,82,qs),
(255,86,o),
(248,105,q),
(219,166,o),
(172,214,qs),
(156,230,l),
(462,230,l),
(460,228,o),
(449,210,o),
(425,175,o),
(414,158,qs),
(370,91,l),
(369,85,ls),
(369,76,o),
(381,63,o),
(389,63,qs),
(394,63,o),
(398,66,qs),
(401,68,o),
(456,149,qs),
(510,230,l),
(929,230,l),
(944,238,o),
(944,250,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
39 1 5 4 10 1 3 0 2 76 0 6 4 6 133 0 4 5 4 133 0 3 0 1 0 3 1 128 0 1 1 132 7 1 5 0 0 5 87 7 1 5 5 0 96 2 1 0 5 0 80 37 37 22 29 22 39 36 17 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni219A;
unicode = 8602;
},
{
glyphname = uni219B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,238,o),
(65,233,qs),
(70,230,o),
(265,230,qs),
(462,230,l),
(432,183,o),
(370,91,q),
(369,85,ls),
(369,76,o),
(381,63,o),
(389,63,qs),
(394,63,o),
(398,66,qs),
(401,68,o),
(456,149,qs),
(510,230,l),
(843,230,l),
(827,214,ls),
(780,167,o),
(751,105,q),
(744,86,o),
(744,82,qs),
(744,72,o),
(768,72,qs),
(782,73,o),
(787,77,o),
(792,88,qs),
(834,187,o),
(929,236,qs),
(939,242,o),
(944,246,o),
(944,250,qs),
(944,252,o),
(943,255,o),
(939,258,o),
(935,261,o),
(929,264,qs),
(833,314,o),
(792,412,qs),
(787,423,o),
(782,427,o),
(768,428,qs),
(744,428,o),
(744,419,qs),
(744,413,o),
(751,396,qs),
(779,334,o),
(827,286,qs),
(843,270,l),
(537,270,l),
(539,272,o),
(550,290,o),
(574,325,o),
(585,342,qs),
(629,409,l),
(631,420,o),
(621,437,o),
(611,437,qs),
(608,437,o),
(606,436,q),
(600,435,o),
(586,415,o),
(543,351,qs),
(489,270,l),
(70,270,l),
(56,263,o),
(56,250,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
58 44 2 4 5 1 76 0 1 3 1 133 0 3 0 3 133 0 4 5 6 5 4 6 128 0 6 6 132 2 1 0 5 5 0 87 2 1 0 0 5 96 7 1 5 0 5 80 63 61 56 54 50 49 43 42 22 38 37 17 8 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni219B;
unicode = 8603;
},
{
glyphname = uni219E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,317,o),
(60,253,qs),
(58,252,o),
(56,250,q),
(159,188,o),
(196,89,q),
(199,83,l),
(221,83,ls),
(244,83,o),
(244,84,qs),
(244,86,o),
(228,121,qs),
(201,174,o),
(158,222,qs),
(151,230,l),
(276,230,l),
(285,223,ls),
(361,164,o),
(388,83,q),
(434,83,l),
(434,90,o),
(415,125,qs),
(388,178,o),
(349,221,qs),
(340,230,l),
(634,230,ls),
(933,230,o),
(937,234,qs),
(938,235,ls),
(944,241,o),
(944,259,o),
(938,265,qs),
(937,266,ls),
(933,270,o),
(634,270,qs),
(340,270,l),
(349,279,ls),
(388,322,o),
(415,375,qs),
(434,410,o),
(434,417,q),
(388,417,l),
(361,336,o),
(285,277,qs),
(276,270,l),
(151,270,l),
(158,278,ls),
(201,326,o),
(228,379,qs),
(244,414,o),
(244,416,qs),
(244,417,o),
(221,417,qs),
(199,417,l),
(196,411,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
50 1 4 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 32 values pushed */
2 1 0 1 1 0 112 0 6 4 4 6 113 3 1 1 4 4 1 87 3 1 1 1 4 96 5 1 4 1 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 30 values pushed */
2 1 0 1 0 133 0 6 4 6 134 3 1 1 4 4 1 87 3 1 1 1 4 96 5 1 4 1 4 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
23 25 39 37 19 22 32 7 6 29 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni219E;
unicode = 8606;
},
{
glyphname = uni21A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,417,o),
(755,416,qs),
(755,414,o),
(771,379,qs),
(798,326,o),
(841,278,qs),
(848,270,l),
(723,270,l),
(714,277,ls),
(638,336,o),
(611,417,q),
(565,417,l),
(565,410,o),
(584,375,qs),
(611,322,o),
(650,279,qs),
(659,270,l),
(365,270,ls),
(140,270,o),
(65,269,o),
(62,266,qs),
(61,265,ls),
(55,259,o),
(55,241,o),
(61,235,qs),
(62,234,ls),
(66,230,o),
(365,230,qs),
(659,230,l),
(650,221,ls),
(611,178,o),
(584,125,qs),
(565,90,o),
(565,83,q),
(611,83,l),
(638,164,o),
(714,223,qs),
(723,230,l),
(848,230,l),
(841,222,ls),
(798,174,o),
(771,121,qs),
(755,86,o),
(755,84,qs),
(755,83,o),
(778,83,qs),
(801,83,l),
(833,181,o),
(939,247,qs),
(941,248,o),
(943,250,q),
(836,314,o),
(801,417,q),
(778,417,ls)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
2 1 1 4 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
7 1 6 4 4 6 112 2 1 0 1 1 0 113 5 1 4 1 1 4 87 5 1 4 4 1 96 3 1 1 4 1 80 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
7 1 6 5 6 133 2 1 0 1 0 134 0 5 4 1 5 87 0 4 1 1 4 87 0 4 4 1 95 3 1 1 4 1 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
7 1 6 4 6 133 2 1 0 1 0 134 5 1 4 1 1 4 87 5 1 4 4 1 96 3 1 1 4 1 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 53 0 53 25 85 37 19 22 38 8 6 28 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21A0;
unicode = 8608;
},
{
glyphname = uni21A2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,230,l),
(873,230,l),
(882,223,l),
(882,277,l),
(873,270,l),
(151,270,l)
);
},
{
closed = 1;
nodes = (
(1043,133,o),
(1111,201,o),
(1111,249,qs),
(1111,297,o),
(1043,365,o),
(994,365,qs),
(946,365,o),
(878,297,o),
(878,249,qs),
(878,201,o),
(946,133,o),
(994,133,qs)
);
},
{
closed = 1;
nodes = (
(238,270,l),
(229,277,l),
(229,223,l),
(238,230,l),
(800,230,l),
(800,270,l)
);
},
{
closed = 1;
nodes = (
(165,133,o),
(233,201,o),
(233,249,qs),
(233,297,o),
(165,365,o),
(116,365,qs),
(68,365,o),
(0,297,o),
(0,249,qs),
(0,201,o),
(68,133,o),
(116,133,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
21 1 2 1 2 20 2 2 3 0 2 76 6 1 2 1 3 2 89 5 8 2 1 4 1 0 3 1 0 104 6 1 2 2 3 97 10 7 9 3 3 2 3 81 24 24 6 6 0 0 24 35 24 34 30 28 23 22 19 18 6 17 6 16 12 10 0 5 0 5 19 11 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1111;
}
);
note = uni21A2;
unicode = 8610;
},
{
glyphname = uni21A3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(866,417,o),
(866,416,qs),
(866,414,o),
(882,379,qs),
(910,326,o),
(952,278,qs),
(959,270,l),
(237,270,l),
(228,277,l),
(228,223,l),
(237,230,l),
(959,230,l),
(952,222,ls),
(910,174,o),
(882,121,qs),
(866,86,o),
(866,84,qs),
(866,83,o),
(889,83,qs),
(912,83,l),
(944,181,o),
(1050,247,qs),
(1052,248,o),
(1054,250,q),
(947,314,o),
(912,417,q),
(889,417,ls)
);
},
{
closed = 1;
nodes = (
(164,133,o),
(232,201,o),
(232,249,qs),
(232,297,o),
(164,365,o),
(115,365,qs),
(67,365,o),
(-1,297,o),
(-1,249,qs),
(-1,201,o),
(67,133,o),
(115,133,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
17 1 2 4 2 1 1 2 16 1 5 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
6 1 3 4 2 3 112 0 0 5 1 0 113 0 4 2 5 4 89 0 2 0 1 5 2 1 104 0 4 4 5 97 7 1 5 4 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
6 1 3 4 3 133 0 0 5 0 134 0 4 2 5 4 89 0 2 0 1 5 2 1 104 0 4 4 5 97 7 1 5 4 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 20 values pushed */
27 27 0 0 27 38 27 37 33 31 0 26 0 26 19 22 38 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1111;
}
);
note = uni21A3;
unicode = 8611;
},
{
glyphname = uni21AB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(215,133,o),
(283,201,o),
(283,249,qs),
(283,297,o),
(215,365,o),
(166,365,qs),
(118,365,o),
(50,297,o),
(50,249,qs),
(50,201,o),
(118,133,o),
(166,133,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 89 0 0 0 1 97 2 1 1 0 1 81 0 0 0 11 0 10 36 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 333;
}
);
note = uni21AB;
unicode = 8619;
},
{
glyphname = uni21AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,417,o),
(755,416,qs),
(755,414,o),
(771,379,qs),
(798,326,o),
(841,278,qs),
(848,270,l),
(377,270,l),
(377,305,ls),
(377,384,o),
(370,429,qs),
(359,507,o),
(279,575,o),
(195,575,qs),
(35,575,o),
(35,405,qs),
(35,350,o),
(68,280,o),
(140,244,o),
(222,231,o),
(286,230,qs),
(337,230,l),
(337,-25,l),
(342,-41,o),
(357,-41,qs),
(370,-41,o),
(377,-27,q),
(377,230,l),
(848,230,l),
(841,222,ls),
(798,174,o),
(771,121,qs),
(755,86,o),
(755,84,qs),
(755,83,o),
(778,83,qs),
(801,83,l),
(826,157,o),
(901,221,qs),
(914,231,o),
(939,247,qs),
(941,248,o),
(943,250,q),
(836,315,o),
(801,417,q),
(778,417,ls)
);
},
{
closed = 1;
nodes = (
(232,535,o),
(240,534,qs),
(303,521,o),
(321,465,qs),
(336,422,o),
(337,319,qs),
(337,270,l),
(300,270,ls),
(211,270,o),
(167,280,qs),
(117,291,o),
(75,349,o),
(75,406,qs),
(75,471,o),
(133,535,o),
(197,535,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
2 1 1 5 22 18 2 2 0 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 47 values pushed */
9 1 6 8 5 5 6 114 0 0 1 2 1 0 114 0 2 2 132 0 4 10 1 8 6 4 8 105 7 1 5 1 1 5 89 7 1 5 5 1 98 3 1 1 5 1 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
9 1 6 8 5 8 6 5 128 0 0 1 2 1 0 2 128 0 2 2 132 0 4 10 1 8 6 4 8 105 7 1 5 1 1 5 89 7 1 5 5 1 98 3 1 1 5 1 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
46 46 0 0 46 61 46 60 54 52 0 45 0 45 21 37 34 34 22 40 11 6 28 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21AC;
unicode = 8620;
},
{
glyphname = uni21AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(151,191,o),
(195,96,qs),
(200,84,l),
(223,83,l),
(246,83,l),
(242,93,ls),
(215,160,o),
(159,222,qs),
(152,230,l),
(220,230,ls),
(289,230,o),
(293,232,qs),
(298,234,o),
(332,269,qs),
(367,304,l),
(404,267,ls),
(440,230,o),
(517,152,o),
(521,149,q),
(531,144,o),
(540,150,q),
(543,151,o),
(693,304,o),
(695,304,o),
(844,151,o),
(848,150,q),
(857,144,o),
(867,149,q),
(871,152,o),
(948,230,o),
(984,267,qs),
(1021,304,l),
(1056,269,ls),
(1090,234,o),
(1095,232,qs),
(1099,230,o),
(1168,230,qs),
(1236,230,l),
(1229,222,ls),
(1173,160,o),
(1146,93,qs),
(1142,83,l),
(1188,83,l),
(1232,190,o),
(1331,250,q),
(1264,289,o),
(1222,352,qs),
(1216,362,o),
(1188,417,q),
(1142,417,l),
(1146,407,ls),
(1173,340,o),
(1229,278,qs),
(1236,270,l),
(1112,270,l),
(1073,310,ls),
(1034,349,o),
(1030,351,qs),
(1022,356,o),
(1012,351,qs),
(1009,350,o),
(961,301,o),
(907,247,o),
(882,222,qs),
(858,196,l),
(703,351,l),
(694,354,o),
(686,351,qs),
(682,350,o),
(642,309,qs),
(585,251,o),
(530,196,q),
(520,206,o),
(439,289,o),
(379,350,o),
(376,351,qs),
(366,356,o),
(358,351,qs),
(354,349,o),
(315,310,qs),
(276,270,l),
(152,270,l),
(159,278,ls),
(215,340,o),
(242,407,qs),
(246,417,l),
(200,417,l),
(160,312,o),
(57,250,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
73 56 2 1 0 88 43 2 5 1 23 16 2 4 5 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
3 1 0 1 1 0 112 7 1 4 5 5 4 113 2 1 1 5 5 1 87 2 1 1 1 5 98 6 1 5 1 5 82 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 31 values pushed */
3 1 0 1 0 133 7 1 4 5 4 134 2 1 1 5 5 1 87 2 1 1 1 5 98 6 1 5 1 5 82 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 17 values pushed */
85 83 79 77 52 50 46 45 39 38 34 33 20 17 8 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1389;
}
);
note = uni21AD;
unicode = 8621;
},
{
glyphname = uni21AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(600,435,o),
(586,415,o),
(543,351,qs),
(489,270,l),
(156,270,l),
(172,286,ls),
(220,334,o),
(248,396,qs),
(255,414,o),
(255,419,qs),
(255,428,o),
(231,428,qs),
(218,427,o),
(211,423,o),
(207,412,qs),
(166,314,o),
(70,264,qs),
(55,256,o),
(55,244,o),
(70,236,qs),
(165,188,o),
(207,88,qs),
(211,77,o),
(218,73,o),
(231,72,qs),
(255,72,o),
(255,82,qs),
(255,86,o),
(248,105,q),
(219,166,o),
(172,214,qs),
(156,230,l),
(462,230,l),
(460,228,o),
(449,210,o),
(425,175,o),
(414,158,qs),
(370,91,l),
(369,85,ls),
(369,76,o),
(381,63,o),
(389,63,qs),
(394,63,o),
(398,66,qs),
(401,68,o),
(456,149,qs),
(510,230,l),
(843,230,l),
(827,214,ls),
(780,167,o),
(751,105,q),
(744,86,o),
(744,82,qs),
(744,72,o),
(768,72,qs),
(782,73,o),
(787,77,o),
(792,88,qs),
(834,187,o),
(929,236,qs),
(939,242,o),
(944,246,o),
(944,250,qs),
(944,252,o),
(943,255,o),
(939,258,o),
(935,261,o),
(929,264,qs),
(833,314,o),
(792,412,qs),
(787,423,o),
(782,427,o),
(768,428,qs),
(744,428,o),
(744,419,qs),
(744,413,o),
(751,396,qs),
(779,334,o),
(827,286,qs),
(843,270,l),
(537,270,l),
(539,272,o),
(550,290,o),
(574,325,o),
(585,342,qs),
(629,409,l),
(631,420,o),
(621,437,o),
(611,437,qs),
(608,437,o),
(606,436,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
80 1 1 2 51 37 2 3 4 2 76 0 0 2 0 133 8 1 2 1 2 133 7 1 3 4 5 4 3 5 128 0 5 5 132 9 1 1 4 4 1 87 9 1 1 1 4 96 6 1 4 1 4 80 86 85 79 78 65 64 58 56 49 47 43 42 36 35 22 38 32 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21AE;
unicode = 8622;
},
{
glyphname = uni21B0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(60,558,o),
(56,555,q),
(73,546,o),
(106,519,qs),
(164,471,o),
(193,402,qs),
(198,389,l),
(244,389,l),
(244,390,o),
(227,428,qs),
(202,479,o),
(162,523,qs),
(151,535,l),
(404,535,l),
(404,275,ls),
(404,15,o),
(406,12,qs),
(412,0,o),
(436,0,o),
(442,12,qs),
(444,15,o),
(444,287,qs),
(444,495,o),
(443,565,o),
(440,568,qs),
(439,569,l),
(438,570,ls),
(435,574,o),
(345,575,qs),
(343,575,l),
(342,575,l),
(341,575,l),
(340,575,l),
(339,575,l),
(338,575,l),
(337,575,l),
(336,575,l),
(335,575,l),
(334,575,l),
(333,575,l),
(332,575,l),
(331,575,l),
(330,575,l),
(329,575,l),
(328,575,l),
(327,575,l),
(325,575,l),
(324,575,l),
(323,575,l),
(322,575,l),
(321,575,l),
(320,575,l),
(319,575,l),
(318,575,l),
(317,575,l),
(316,575,l),
(315,575,l),
(314,575,l),
(312,575,l),
(311,575,l),
(310,575,l),
(309,575,l),
(308,575,l),
(307,575,l),
(306,575,l),
(305,575,l),
(304,575,l),
(302,575,l),
(301,575,l),
(300,575,l),
(299,575,l),
(298,575,l),
(297,575,l),
(296,575,l),
(294,575,l),
(293,575,l),
(292,575,l),
(291,575,l),
(151,576,l),
(161,587,ls),
(199,628,o),
(228,684,qs),
(244,719,o),
(244,721,qs),
(244,722,o),
(221,722,qs),
(198,722,l),
(159,619,o),
(65,561,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
86 62 2 3 1 71 1 2 4 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 1 0 112 0 4 3 2 3 4 114 0 2 2 132 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 1 0 133 0 4 3 2 3 4 2 128 0 2 2 132 0 1 3 3 1 87 0 1 1 3 96 0 3 1 3 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
81 79 75 74 70 69 60 9 33 5 6 23 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni21B0;
unicode = 8624;
},
{
glyphname = uni21B1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(255,719,o),
(271,684,qs),
(300,628,o),
(338,587,qs),
(348,576,l),
(208,575,ls),
(88,574,o),
(64,573,o),
(60,569,qs),
(59,568,ls),
(55,564,o),
(55,287,qs),
(55,15,o),
(57,12,qs),
(63,0,o),
(87,0,o),
(93,12,qs),
(95,15,o),
(95,275,qs),
(95,535,l),
(348,535,l),
(337,523,ls),
(297,479,o),
(272,428,qs),
(255,390,o),
(255,389,q),
(301,389,l),
(306,402,ls),
(322,440,o),
(350,475,qs),
(392,527,o),
(434,549,qs),
(439,552,o),
(443,555,q),
(340,618,o),
(301,722,q),
(278,722,ls),
(255,722,o),
(255,721,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
4 1 2 4 24 1 3 1 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 33 values pushed */
0 0 4 4 0 112 0 1 2 3 2 1 114 0 3 3 132 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
0 0 4 0 133 0 1 2 3 2 1 3 128 0 3 3 132 0 4 2 2 4 87 0 4 4 2 96 0 2 4 2 80 
EIF[ ]	/* EndIf */
PUSHB[ ]	/* 8 values pushed */
40 20 21 25 17 5 6 27 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni21B1;
unicode = 8625;
},
{
glyphname = uni21B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(952,60,o),
(947,93,qs),
(932,204,o),
(811,379,o),
(724,424,qs),
(682,445,o),
(609,461,o),
(552,461,qs),
(533,461,l),
(448,453,o),
(301,371,o),
(252,304,qs),
(188,217,o),
(177,111,qs),
(176,100,l),
(165,111,ls),
(116,164,o),
(45,195,qs),
(27,202,o),
(17,194,o),
(17,177,qs),
(17,164,o),
(22,157,o),
(35,151,qs),
(134,108,o),
(181,13,qs),
(188,0,o),
(194,0,qs),
(202,0,o),
(210,16,qs),
(232,61,o),
(310,132,o),
(355,151,qs),
(367,156,o),
(372,161,o),
(372,172,qs),
(372,178,ls),
(372,201,o),
(363,201,qs),
(358,201,o),
(346,195,qs),
(284,170,o),
(233,119,qs),
(216,103,l),
(218,114,ls),
(231,228,o),
(389,393,o),
(495,415,qs),
(525,421,o),
(563,421,qs),
(599,421,o),
(628,415,qs),
(744,392,o),
(908,181,o),
(912,39,qs),
(913,13,o),
(919,7,qs),
(926,2,o),
(932,2,qs),
(952,2,o),
(952,30,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
45 16 2 0 2 1 76 0 2 1 0 1 2 0 128 3 1 0 0 132 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 53 51 41 41 40 16 5 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21B6;
unicode = 8630;
},
{
glyphname = uni21B7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(73,2,o),
(80,7,qs),
(86,13,o),
(87,39,qs),
(88,88,o),
(101,134,qs),
(124,224,o),
(236,364,o),
(312,397,qs),
(370,422,o),
(436,422,qs),
(457,422,o),
(477,420,qs),
(626,400,o),
(717,279,qs),
(771,204,o),
(782,114,qs),
(784,103,l),
(767,119,ls),
(716,170,o),
(654,195,qs),
(642,201,o),
(637,201,qs),
(628,201,o),
(628,178,qs),
(628,172,ls),
(628,161,o),
(633,156,o),
(645,151,qs),
(690,132,o),
(768,61,o),
(790,16,qs),
(798,0,o),
(806,0,qs),
(812,0,o),
(819,13,qs),
(867,108,o),
(966,151,qs),
(979,157,o),
(983,164,o),
(983,177,qs),
(983,194,o),
(973,202,o),
(955,195,qs),
(884,164,o),
(835,111,qs),
(824,100,l),
(823,111,ls),
(804,269,o),
(694,363,qs),
(604,442,o),
(484,459,qs),
(462,461,o),
(428,461,qs),
(412,461,l),
(263,449,o),
(60,218,o),
(48,61,qs),
(46,41,o),
(46,31,qs),
(46,2,o),
(67,2,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
43 14 2 1 2 1 76 0 2 3 1 3 2 1 128 5 4 2 1 1 132 0 0 3 3 0 89 0 0 0 3 97 0 3 0 3 81 0 0 0 61 0 60 51 49 38 37 28 26 38 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21B7;
unicode = 8631;
},
{
glyphname = uni21BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,538,ls),
(469,493,o),
(488,408,qs),
(491,397,l),
(513,390,ls),
(518,389,o),
(529,386,o),
(532,385,qs),
(535,384,l),
(535,387,o),
(528,413,qs),
(517,460,o),
(490,506,qs),
(485,515,l),
(488,524,o),
(488,526,q),
(495,526,o),
(522,511,qs),
(628,457,o),
(666,345,qs),
(682,295,o),
(682,250,qs),
(682,127,o),
(511,-42,o),
(388,-42,qs),
(260,-42,o),
(177,47,qs),
(95,132,o),
(95,250,qs),
(95,352,o),
(159,433,qs),
(193,475,o),
(246,506,qs),
(265,517,o),
(267,521,qs),
(270,526,o),
(270,531,qs),
(270,545,o),
(255,550,qs),
(248,552,o),
(235,545,qs),
(164,509,o),
(68,374,o),
(57,286,qs),
(56,279,o),
(56,221,o),
(57,214,qs),
(69,110,o),
(195,-39,o),
(289,-68,qs),
(337,-83,o),
(387,-83,qs),
(468,-83,o),
(540,-47,qs),
(586,-23,o),
(626,15,q),
(705,98,o),
(720,214,qs),
(722,228,o),
(722,272,o),
(720,286,qs),
(708,381,o),
(599,526,o),
(519,556,qs),
(510,560,l),
(523,568,ls),
(562,590,o),
(607,637,q),
(565,650,l),
(563,650,o),
(552,639,qs),
(513,600,o),
(464,581,qs),
(454,577,l),
(440,579,ls),
(408,583,o),
(397,583,qs),
(369,583,o),
(369,543,o),
(399,543,qs),
(413,542,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 49 values pushed */
15 1 0 1 66 43 33 3 3 0 2 76 12 1 1 74 0 1 0 0 3 1 0 105 0 3 2 2 3 89 0 3 3 2 97 0 2 3 2 81 56 54 29 27 33 16 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni21BA;
unicode = 8634;
},
{
glyphname = uni21BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(362,-42,o),
(355,-41,qs),
(246,-29,o),
(95,134,o),
(95,249,qs),
(95,300,o),
(111,345,qs),
(149,457,o),
(255,511,qs),
(282,526,o),
(289,526,q),
(289,524,o),
(292,515,q),
(287,506,ls),
(260,460,o),
(249,413,qs),
(242,387,o),
(242,384,q),
(245,385,ls),
(248,386,o),
(259,389,o),
(264,390,qs),
(286,397,l),
(289,408,ls),
(301,463,o),
(332,506,qs),
(344,522,o),
(364,542,q),
(378,543,ls),
(408,543,o),
(408,583,o),
(380,583,qs),
(369,583,o),
(337,579,qs),
(323,577,l),
(313,581,ls),
(267,599,o),
(225,639,qs),
(219,645,o),
(213,650,q),
(170,637,l),
(211,592,o),
(254,568,qs),
(267,560,l),
(258,556,ls),
(178,526,o),
(69,380,o),
(57,286,qs),
(56,279,o),
(56,221,o),
(57,214,qs),
(71,98,o),
(225,-61,o),
(337,-79,qs),
(360,-83,o),
(388,-83,qs),
(514,-83,o),
(698,76,o),
(717,192,qs),
(721,214,o),
(721,286,o),
(717,308,qs),
(704,385,o),
(609,513,o),
(542,545,qs),
(529,552,o),
(522,550,qs),
(507,545,o),
(507,531,qs),
(507,525,o),
(510,521,qs),
(512,517,o),
(532,506,qs),
(582,479,o),
(659,380,o),
(673,322,qs),
(682,286,o),
(682,250,qs),
(682,127,o),
(511,-42,o),
(388,-42,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
36 1 2 1 67 64 29 3 3 2 2 76 40 39 2 1 74 0 1 0 2 3 1 2 105 4 1 3 0 0 3 89 4 1 3 3 0 97 0 0 3 0 81 0 0 0 80 0 78 51 50 49 47 25 23 5 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni21BB;
unicode = 8635;
},
{
glyphname = uni21BE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,-178,o),
(190,-182,qs),
(195,-194,o),
(221,-194,o),
(226,-182,qs),
(228,-178,o),
(228,205,qs),
(228,587,l),
(237,578,ls),
(281,537,o),
(339,515,q),
(372,505,o),
(374,505,qs),
(375,505,o),
(375,528,qs),
(375,551,l),
(353,557,o),
(332,569,qs),
(257,607,o),
(215,682,qs),
(208,694,l),
(188,694,l),
(188,258,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
20 14 6 3 1 0 1 76 0 0 1 0 133 0 1 1 118 19 18 16 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = uni21BE;
unicode = 8638;
},
{
glyphname = uni21BF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(169,623,o),
(110,584,qs),
(72,559,o),
(41,551,q),
(41,528,ls),
(41,505,o),
(42,505,qs),
(44,505,o),
(77,515,q),
(135,537,o),
(179,578,qs),
(188,587,l),
(188,205,ls),
(188,-178,o),
(190,-182,qs),
(195,-194,o),
(221,-194,o),
(226,-182,qs),
(228,-178,o),
(228,258,qs),
(228,694,l),
(208,694,l),
(201,682,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
18 17 10 7 4 1 0 1 76 0 0 1 0 133 0 1 1 118 20 16 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = uni21BF;
unicode = 8639;
},
{
glyphname = uni21C2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,678,o),
(188,242,qs),
(188,-194,l),
(208,-194,l),
(215,-182,ls),
(247,-123,o),
(306,-84,qs),
(344,-59,o),
(375,-51,q),
(375,-28,ls),
(375,-5,o),
(374,-5,qs),
(372,-5,o),
(339,-15,q),
(281,-37,o),
(237,-78,qs),
(228,-87,l),
(228,296,ls),
(228,679,o),
(226,683,qs),
(221,694,o),
(208,694,qs),
(194,694,o),
(190,682,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
14 13 6 3 4 1 0 1 76 0 0 1 0 133 0 1 1 118 20 19 32 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = uni21C2;
unicode = 8642;
},
{
glyphname = uni21C3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(188,678,o),
(188,295,qs),
(188,-87,l),
(179,-78,ls),
(135,-37,o),
(77,-15,q),
(44,-5,o),
(42,-5,qs),
(41,-5,o),
(41,-28,qs),
(41,-51,l),
(63,-57,o),
(84,-69,qs),
(159,-107,o),
(201,-182,qs),
(208,-194,l),
(228,-194,l),
(228,242,ls),
(228,679,o),
(226,683,qs),
(221,694,o),
(208,694,qs),
(194,694,o),
(190,682,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
20 12 3 3 1 0 1 76 0 0 1 0 133 0 1 1 118 20 32 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 417;
}
);
note = uni21C3;
unicode = 8643;
},
{
glyphname = uni21C4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,667,o),
(755,666,qs),
(755,664,o),
(771,629,qs),
(798,576,o),
(841,528,qs),
(848,520,l),
(459,520,ls),
(70,520,o),
(67,518,qs),
(55,512,o),
(55,488,o),
(67,482,qs),
(70,480,o),
(459,480,qs),
(848,480,l),
(841,472,ls),
(798,424,o),
(771,371,qs),
(755,336,o),
(755,334,qs),
(755,333,o),
(778,333,qs),
(801,333,l),
(833,431,o),
(939,497,qs),
(941,498,o),
(943,500,q),
(836,565,o),
(801,667,q),
(778,667,ls)
);
},
{
closed = 1;
nodes = (
(244,0,o),
(244,1,q),
(230,34,l),
(201,91,o),
(160,137,qs),
(151,147,l),
(541,147,ls),
(930,147,o),
(934,149,qs),
(944,155,o),
(944,167,qs),
(944,182,o),
(930,186,qs),
(928,187,o),
(539,187,qs),
(151,187,l),
(161,198,ls),
(203,244,o),
(228,296,qs),
(244,331,o),
(244,333,o),
(221,333,qs),
(198,333,l),
(157,230,o),
(65,173,qs),
(60,170,o),
(56,167,q),
(154,108,o),
(199,0,q),
(221,0,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
2 1 1 2 33 1 6 5 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
8 1 3 2 2 3 112 0 0 1 4 1 0 114 0 4 5 5 4 112 9 1 7 6 6 7 113 0 2 0 1 0 2 1 104 0 5 6 6 5 87 0 5 5 6 96 0 6 5 6 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
8 1 3 2 3 133 0 0 1 4 1 0 4 128 0 4 5 1 4 5 126 9 1 7 6 7 134 0 2 0 1 0 2 1 104 0 5 6 6 5 87 0 5 5 6 96 0 6 5 6 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
31 31 0 0 31 60 31 58 54 51 46 44 39 37 0 30 0 30 52 38 38 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21C4;
unicode = 8644;
},
{
glyphname = uni21C6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,567,o),
(60,503,qs),
(58,502,o),
(56,500,q),
(159,438,o),
(196,339,q),
(199,333,l),
(221,333,ls),
(244,333,o),
(244,334,qs),
(244,336,o),
(228,371,qs),
(201,424,o),
(158,472,qs),
(151,480,l),
(539,480,ls),
(928,480,o),
(932,482,qs),
(944,487,o),
(944,513,o),
(932,518,qs),
(928,520,o),
(539,520,qs),
(151,520,l),
(158,528,ls),
(201,576,o),
(228,629,qs),
(244,664,o),
(244,666,qs),
(244,667,o),
(221,667,qs),
(199,667,l),
(196,661,l)
);
},
{
closed = 1;
nodes = (
(796,244,o),
(838,198,qs),
(848,187,l),
(460,187,ls),
(71,187,o),
(69,186,qs),
(55,182,o),
(55,167,qs),
(55,154,o),
(66,149,q),
(68,147,o),
(458,147,qs),
(848,147,l),
(839,137,ls),
(800,94,o),
(771,39,qs),
(769,35,o),
(761,16,o),
(755,2,o),
(755,0,o),
(778,0,qs),
(801,0,l),
(818,50,o),
(891,135,o),
(936,162,qs),
(940,164,o),
(943,167,q),
(932,173,o),
(896,200,qs),
(835,249,o),
(801,333,q),
(778,333,ls),
(755,333,o),
(755,331,o),
(771,296,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
28 1 2 1 40 1 6 7 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 1 0 112 0 3 2 4 2 3 114 0 4 7 7 4 112 0 5 6 6 5 113 0 1 0 2 3 1 2 104 0 7 6 6 7 87 0 7 7 6 96 0 6 7 6 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 49 values pushed */
0 0 1 0 133 0 3 2 4 2 3 4 128 0 4 7 2 4 7 126 0 5 6 5 134 0 1 0 2 3 1 2 104 0 7 6 6 7 87 0 7 7 6 96 0 6 7 6 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
53 39 41 26 23 52 38 32 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21C6;
unicode = 8646;
},
{
glyphname = uni21C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(183,469,o),
(213,518,qs),
(219,528,o),
(242,580,o),
(244,583,q),
(198,583,l),
(179,533,o),
(109,449,o),
(66,423,qs),
(55,417,l),
(65,411,ls),
(150,359,o),
(190,269,qs),
(199,250,o),
(197,246,qs),
(156,145,o),
(65,89,qs),
(55,83,l),
(66,77,ls),
(109,51,o),
(179,-33,o),
(198,-83,q),
(244,-83,l),
(243,-80,o),
(219,-28,o),
(213,-18,qs),
(183,31,o),
(151,63,q),
(540,63,l),
(930,64,l),
(944,71,o),
(944,84,qs),
(944,94,o),
(934,101,qs),
(930,103,o),
(540,103,qs),
(150,103,l),
(159,113,ls),
(206,162,o),
(235,227,qs),
(245,249,o),
(243,254,q),
(243,255,o),
(240,260,o),
(237,269,o),
(235,273,qs),
(207,338,o),
(159,387,qs),
(150,397,l),
(540,397,ls),
(930,397,o),
(934,399,qs),
(944,406,o),
(944,416,qs),
(944,427,o),
(930,437,q),
(151,437,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
46 1 0 5 41 14 2 1 0 38 1 2 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
0 4 5 5 4 112 0 3 2 2 3 113 6 1 5 0 0 1 5 0 104 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 35 values pushed */
0 4 5 4 133 0 3 2 3 134 6 1 5 0 0 1 5 0 104 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 15 values pushed */
0 0 0 56 0 56 51 50 36 37 44 52 7 6 26 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21C7;
unicode = 8647;
},
{
glyphname = uni21C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(280,589,ls),
(332,540,o),
(394,514,qs),
(399,512,o),
(406,509,qs),
(412,506,ls),
(417,504,o),
(438,514,qs),
(500,540,o),
(552,589,qs),
(562,598,l),
(562,209,l),
(563,-179,l),
(570,-193,o),
(582,-193,qs),
(593,-194,o),
(602,-181,q),
(602,599,l),
(612,590,ls),
(654,550,o),
(713,521,qs),
(743,505,o),
(748,505,qs),
(749,505,o),
(749,528,qs),
(749,551,l),
(642,591,o),
(582,694,q),
(577,684,ls),
(532,610,o),
(452,567,qs),
(423,551,o),
(409,551,o),
(380,567,qs),
(300,610,o),
(256,684,q),
(252,689,o),
(250,694,q),
(184,584,o),
(83,551,q),
(83,528,ls),
(83,505,o),
(84,505,qs),
(88,505,o),
(120,521,qs),
(179,551,o),
(220,590,qs),
(230,599,l),
(230,-181,l),
(239,-194,o),
(250,-193,qs),
(260,-193,o),
(270,-179,q),
(270,598,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
40 36 12 4 0 5 0 1 1 76 53 42 35 27 25 15 13 5 8 1 74 0 1 0 1 133 2 1 0 0 118 39 38 21 20 17 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uni21C8;
unicode = 8648;
},
{
glyphname = uni21C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,406,o),
(65,399,qs),
(69,397,o),
(459,397,qs),
(849,397,l),
(840,387,ls),
(792,338,o),
(764,273,qs),
(762,269,o),
(759,260,o),
(756,255,o),
(756,254,q),
(754,249,o),
(764,227,qs),
(792,162,o),
(840,113,qs),
(849,103,l),
(459,103,ls),
(69,103,o),
(65,101,qs),
(55,94,o),
(55,84,qs),
(55,71,o),
(70,64,q),
(459,63,l),
(848,63,l),
(816,31,o),
(786,-18,qs),
(780,-28,o),
(757,-80,o),
(755,-83,q),
(801,-83,l),
(820,-33,o),
(890,51,o),
(933,77,qs),
(944,83,l),
(934,89,ls),
(849,141,o),
(809,231,qs),
(800,250,o),
(802,254,qs),
(842,353,o),
(934,411,qs),
(944,417,l),
(933,423,ls),
(890,449,o),
(820,533,o),
(801,583,q),
(755,583,l),
(756,580,o),
(780,528,o),
(786,518,qs),
(816,469,o),
(848,437,q),
(70,437,l),
(55,428,o),
(55,416,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
12 1 5 0 15 1 4 5 20 1 3 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 1 0 0 1 112 0 2 3 3 2 113 0 0 0 5 4 0 5 104 0 4 3 3 4 87 0 4 4 3 95 0 3 4 3 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 1 0 1 133 0 2 3 2 134 0 0 0 5 4 0 5 104 0 4 3 3 4 87 0 4 4 3 95 0 3 4 3 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
53 51 39 36 32 30 25 24 36 17 6 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21C9;
unicode = 8649;
},
{
glyphname = uni21CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(220,-90,ls),
(179,-51,o),
(120,-21,qs),
(88,-5,o),
(84,-5,qs),
(83,-5,o),
(83,-28,qs),
(83,-51,l),
(190,-91,o),
(250,-194,q),
(255,-184,ls),
(300,-110,o),
(380,-67,qs),
(409,-51,o),
(423,-51,o),
(452,-67,qs),
(532,-110,o),
(577,-184,qs),
(582,-194,l),
(642,-91,o),
(749,-51,q),
(749,-28,ls),
(749,-5,o),
(748,-5,qs),
(743,-5,o),
(713,-21,qs),
(654,-50,o),
(612,-90,qs),
(602,-99,l),
(602,681,l),
(593,694,o),
(582,693,qs),
(570,693,o),
(563,680,q),
(562,291,l),
(562,-98,l),
(552,-89,ls),
(500,-40,o),
(438,-14,qs),
(417,-4,o),
(412,-6,qs),
(406,-9,ls),
(399,-12,o),
(394,-14,qs),
(332,-40,o),
(280,-89,qs),
(270,-98,l),
(270,680,l),
(259,693,o),
(251,694,qs),
(241,694,o),
(230,681,q),
(230,-99,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 40 values pushed */
30 22 18 11 4 0 6 2 0 1 76 52 44 42 33 31 23 16 5 8 2 73 1 1 0 2 0 133 0 2 2 118 38 37 20 19 17 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uni21CA;
unicode = 8650;
},
{
glyphname = uni21CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(160,406,o),
(67,354,qs),
(55,347,l),
(55,327,l),
(492,327,ls),
(928,327,o),
(932,329,qs),
(944,334,o),
(944,360,o),
(932,365,qs),
(928,367,o),
(545,367,qs),
(162,367,l),
(171,376,ls),
(212,420,o),
(233,476,qs),
(244,509,o),
(244,512,qs),
(244,514,o),
(221,514,qs),
(198,514,l),
(195,504,ls)
);
},
{
closed = 1;
nodes = (
(55,165,o),
(55,153,qs),
(55,140,o),
(67,135,qs),
(71,133,o),
(454,133,qs),
(837,133,l),
(828,124,ls),
(788,80,o),
(766,25,q),
(755,-11,o),
(755,-12,qs),
(755,-14,o),
(778,-14,qs),
(801,-14,l),
(804,-4,ls),
(839,95,o),
(932,146,qs),
(944,153,l),
(944,173,l),
(507,173,ls),
(70,173,o),
(67,171,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
18 1 2 1 25 1 5 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 38 values pushed */
0 0 1 1 0 112 0 4 5 5 4 113 0 1 0 2 3 1 2 104 6 1 3 5 5 3 87 6 1 3 3 5 95 0 5 3 5 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 36 values pushed */
0 0 1 0 133 0 4 5 4 134 0 1 0 2 3 1 2 104 6 1 3 5 5 3 87 6 1 3 3 5 95 0 5 3 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 16 values pushed */
24 22 39 37 31 29 22 44 24 44 52 38 32 7 6 25 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21CB;
unicode = 8651;
},
{
glyphname = uni21CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,509,o),
(766,476,qs),
(787,420,o),
(828,376,qs),
(837,367,l),
(454,367,ls),
(70,367,o),
(67,365,qs),
(55,359,o),
(55,335,o),
(67,329,qs),
(70,327,o),
(507,327,qs),
(944,327,l),
(944,347,l),
(932,354,ls),
(854,398,o),
(817,475,qs),
(814,480,o),
(805,501,o),
(804,503,qs),
(801,514,l),
(778,514,ls),
(755,514,o),
(755,512,qs)
);
},
{
closed = 1;
nodes = (
(110,122,o),
(178,44,o),
(195,-4,qs),
(198,-14,l),
(221,-14,ls),
(244,-14,o),
(244,-12,qs),
(244,-11,o),
(233,25,q),
(211,80,o),
(171,124,qs),
(162,133,l),
(545,133,ls),
(928,133,o),
(932,135,qs),
(944,140,o),
(944,166,o),
(932,171,qs),
(928,173,o),
(492,173,qs),
(55,173,l),
(55,153,l),
(67,146,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
9 1 1 2 25 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 2 2 0 112 0 5 4 4 5 113 0 2 0 1 3 2 1 104 0 3 4 4 3 87 0 3 3 4 95 0 4 3 4 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 34 values pushed */
0 0 2 0 133 0 5 4 5 134 0 2 0 1 3 2 1 104 0 3 4 4 3 87 0 3 3 4 95 0 4 3 4 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 9 values pushed */
23 52 39 52 40 17 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21CC;
unicode = 8652;
},
{
glyphname = uni21CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(467,-21,o),
(479,-33,o),
(495,-33,o),
(500,-28,qs),
(504,-24,o),
(537,54,qs),
(570,133,l),
(929,133,l),
(944,140,o),
(944,153,qs),
(944,157,o),
(941,164,o),
(938,167,o),
(931,172,o),
(930,173,q),
(758,173,l),
(587,174,l),
(626,263,o),
(652,327,q),
(791,327,ls),
(928,327,o),
(934,330,qs),
(944,335,o),
(944,347,qs),
(944,360,o),
(929,367,q),
(799,367,ls),
(669,367,o),
(669,368,q),
(671,370,o),
(729,512,o),
(729,514,qs),
(729,533,o),
(710,533,qs),
(697,533,o),
(691,521,q),
(689,519,o),
(657,442,qs),
(626,367,l),
(318,367,l),
(328,377,ls),
(379,431,o),
(414,500,qs),
(419,512,o),
(419,516,qs),
(419,525,o),
(399,525,qs),
(388,525,o),
(382,521,o),
(377,512,qs),
(331,420,o),
(174,289,o),
(72,263,qs),
(62,260,o),
(56,255,o),
(56,245,o),
(62,240,o),
(72,237,qs),
(118,225,o),
(160,204,qs),
(303,134,o),
(377,-12,qs),
(381,-21,o),
(388,-24,o),
(399,-24,qs),
(419,-24,o),
(419,-16,qs),
(419,-12,o),
(414,0,qs),
(379,69,o),
(328,123,qs),
(318,133,l),
(527,133,l),
(525,130,o),
(467,-10,o),
(467,-13,qs)
);
},
{
closed = 1;
nodes = (
(544,173,o),
(409,173,qs),
(274,173,l),
(264,181,ls),
(212,221,o),
(157,245,qs),
(151,247,o),
(147,250,q),
(218,282,o),
(264,319,qs),
(274,327,l),
(441,327,ls),
(608,327,o),
(608,325,o),
(576,249,o),
(560,212,qs),
(544,174,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
43 30 2 3 2 84 1 7 6 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 4 2 4 133 0 2 3 2 133 0 1 0 9 0 1 114 0 9 9 132 5 1 3 10 1 6 7 3 6 104 11 1 7 0 0 7 87 11 1 7 7 0 95 8 1 0 7 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 4 2 4 133 0 2 3 2 133 0 1 0 9 0 1 9 128 0 9 9 132 5 1 3 10 1 6 7 3 6 104 11 1 7 0 0 7 87 11 1 7 7 0 95 8 1 0 7 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 25 values pushed */
91 89 81 78 73 72 68 67 60 58 56 54 49 45 42 40 36 35 29 27 38 33 12 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21CD;
unicode = 8653;
},
{
glyphname = uni21CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(396,-14,ls),
(396,-22,o),
(408,-33,o),
(416,-33,qs),
(429,-33,o),
(432,-25,q),
(436,-21,o),
(459,56,qs),
(483,133,l),
(614,133,ls),
(744,133,o),
(744,132,q),
(691,66,o),
(663,1,qs),
(658,-11,o),
(658,-15,qs),
(658,-25,o),
(680,-25,q),
(687,-24,o),
(693,-22,o),
(697,-16,o),
(701,-7,qs),
(763,137,o),
(902,213,qs),
(935,232,o),
(955,238,qs),
(966,242,o),
(966,258,o),
(955,262,qs),
(935,268,o),
(902,287,qs),
(769,357,o),
(701,507,qs),
(697,516,o),
(693,522,o),
(687,524,o),
(680,525,q),
(658,525,o),
(658,515,qs),
(658,511,o),
(663,499,qs),
(691,432,o),
(737,376,qs),
(741,372,o),
(744,368,q),
(744,367,o),
(558,367,o),
(558,368,q),
(602,510,l),
(602,511,o),
(603,514,o),
(603,515,qs),
(603,522,o),
(590,534,o),
(582,534,qs),
(569,534,o),
(565,523,qs),
(552,484,o),
(539,443,qs),
(516,367,l),
(385,367,ls),
(255,367,o),
(255,368,q),
(308,434,o),
(336,499,qs),
(341,511,o),
(341,515,qs),
(341,525,o),
(319,525,q),
(312,524,o),
(306,522,o),
(302,516,o),
(298,507,qs),
(236,363,o),
(97,287,qs),
(64,268,o),
(44,262,qs),
(34,258,o),
(34,242,o),
(44,238,qs),
(64,232,o),
(97,213,qs),
(230,143,o),
(298,-7,qs),
(302,-16,o),
(306,-22,o),
(312,-24,o),
(319,-25,q),
(341,-25,o),
(341,-15,qs),
(341,-11,o),
(336,1,qs),
(308,68,o),
(262,124,qs),
(258,128,o),
(255,132,q),
(255,133,o),
(441,133,o),
(441,132,q),
(397,-10,l),
(396,-12,l)
);
},
{
closed = 1;
nodes = (
(335,173,l),
(216,173,l),
(207,181,ls),
(173,212,o),
(120,244,qs),
(110,250,l),
(120,256,ls),
(181,292,o),
(216,327,q),
(503,327,l),
(494,302,o),
(477,244,qs),
(454,174,l)
);
},
{
closed = 1;
nodes = (
(826,288,o),
(879,256,qs),
(889,250,l),
(879,244,ls),
(826,212,o),
(792,181,qs),
(783,173,l),
(640,173,l),
(496,174,l),
(520,249,ls),
(533,290,o),
(544,325,qs),
(545,327,o),
(664,327,qs),
(783,327,l),
(792,319,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
33 1 3 2 126 107 2 11 10 100 84 2 1 0 3 76 0 4 2 4 133 6 1 2 3 2 133 7 1 1 0 9 0 1 9 128 0 9 9 132 5 1 3 12 1 10 11 3 10 104 13 1 11 0 0 11 87 13 1 11 11 0 97 8 1 0 11 0 81 122 120 116 114 113 111 104 103 96 95 91 88 83 82 63 62 54 52 45 44 40 37 32 31 24 33 14 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21CE;
unicode = 8654;
},
{
glyphname = uni21CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,333,o),
(70,328,q),
(241,327,l),
(412,327,l),
(368,225,o),
(347,174,q),
(208,173,l),
(70,173,l),
(56,164,o),
(56,153,qs),
(56,140,o),
(70,133,q),
(200,133,ls),
(330,133,o),
(330,132,q),
(329,131,o),
(270,-11,q),
(268,-27,o),
(285,-33,qs),
(300,-37,o),
(308,-21,q),
(310,-19,o),
(342,58,qs),
(373,133,l),
(681,133,l),
(671,123,ls),
(620,69,o),
(585,0,qs),
(580,-12,o),
(580,-16,qs),
(580,-24,o),
(600,-24,qs),
(612,-24,o),
(618,-21,o),
(622,-12,qs),
(668,79,o),
(825,211,o),
(927,237,qs),
(944,242,o),
(944,258,o),
(927,263,qs),
(880,275,o),
(840,296,qs),
(696,366,o),
(622,512,qs),
(617,521,o),
(611,525,o),
(600,525,qs),
(580,525,o),
(580,516,qs),
(580,512,o),
(585,500,qs),
(620,431,o),
(671,377,qs),
(681,367,l),
(472,367,l),
(472,368,o),
(503,440,o),
(532,511,o),
(532,514,qs),
(532,522,o),
(520,533,o),
(504,533,o),
(494,523,o),
(462,446,qs),
(429,367,l),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(455,327,o),
(590,327,qs),
(725,327,l),
(735,319,ls),
(787,279,o),
(842,255,qs),
(848,253,o),
(852,250,q),
(784,220,o),
(735,181,qs),
(725,173,l),
(558,173,ls),
(391,173,o),
(391,175,o),
(423,251,o),
(439,288,qs),
(455,326,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
77 1 7 8 1 76 0 1 3 1 133 0 3 0 3 133 0 4 5 4 134 2 1 0 10 1 8 7 0 8 104 9 1 7 5 5 7 87 9 1 7 7 5 95 6 1 5 7 5 79 84 82 74 71 34 36 72 22 46 38 37 19 17 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21CF;
unicode = 8655;
},
{
glyphname = uni21DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(944,66,o),
(928,76,q),
(344,76,l),
(336,86,ls),
(279,162,o),
(200,223,qs),
(191,230,l),
(560,230,ls),
(929,230,o),
(933,232,qs),
(944,237,o),
(944,249,qs),
(944,262,o),
(933,268,qs),
(929,270,o),
(560,270,qs),
(191,270,l),
(200,277,ls),
(277,335,o),
(336,414,qs),
(344,424,l),
(928,424,l),
(944,434,o),
(944,446,qs),
(943,457,o),
(929,464,q),
(372,464,l),
(372,465,l),
(373,466,o),
(375,469,o),
(377,472,o),
(380,478,o),
(381,480,qs),
(404,518,o),
(422,558,qs),
(442,609,o),
(442,611,o),
(408,611,qs),
(374,611,l),
(370,600,ls),
(283,374,o),
(76,250,q),
(87,243,ls),
(283,122,o),
(370,-100,qs),
(374,-111,l),
(408,-111,ls),
(442,-111,o),
(442,-109,o),
(422,-58,qs),
(404,-18,o),
(381,20,qs),
(379,24,o),
(374,32,o),
(373,34,qs),
(372,36,l),
(929,36,l),
(943,43,o),
(944,54,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
34 1 4 3 16 1 6 5 58 1 0 7 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 2 3 3 2 112 0 1 0 0 1 113 0 3 0 4 5 3 4 104 0 5 0 6 7 5 6 103 0 7 0 0 7 87 0 7 7 0 95 0 0 7 0 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 2 3 2 133 0 1 0 1 134 0 3 0 4 5 3 4 104 0 5 0 6 7 5 6 103 0 7 0 0 7 87 0 7 7 0 95 0 0 7 0 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
20 53 36 20 56 39 55 17 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21DA;
unicode = 8666;
},
{
glyphname = uni21DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,238,o),
(68,231,q),
(438,230,l),
(808,230,l),
(799,223,ls),
(722,165,o),
(663,86,qs),
(655,76,l),
(363,76,ls),
(71,76,o),
(68,74,qs),
(56,68,o),
(56,57,qs),
(56,44,o),
(68,38,qs),
(71,36,o),
(349,36,qs),
(627,36,l),
(626,35,l),
(626,34,o),
(624,31,o),
(622,28,o),
(619,22,o),
(618,20,qs),
(595,-18,o),
(577,-58,qs),
(557,-109,o),
(557,-111,o),
(591,-111,qs),
(626,-111,l),
(629,-100,l),
(716,126,o),
(923,250,q),
(912,257,ls),
(716,378,o),
(629,600,q),
(626,611,l),
(591,611,ls),
(557,611,o),
(557,609,o),
(577,558,qs),
(595,518,o),
(618,480,qs),
(620,476,o),
(625,468,o),
(626,466,qs),
(627,464,l),
(349,464,ls),
(71,464,o),
(68,462,qs),
(56,456,o),
(56,445,qs),
(56,432,o),
(68,426,qs),
(71,424,o),
(363,424,qs),
(655,424,l),
(663,414,ls),
(720,338,o),
(799,277,qs),
(808,270,l),
(68,270,l),
(56,260,o),
(56,250,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
30 1 7 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 2 2 3 112 0 4 5 5 4 113 0 2 0 1 0 2 1 104 0 0 0 7 6 0 7 103 0 6 5 5 6 87 0 6 6 5 95 0 5 6 5 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 42 values pushed */
0 3 2 3 133 0 4 5 4 134 0 2 0 1 0 2 1 104 0 0 0 7 6 0 7 103 0 6 5 5 6 87 0 6 6 5 95 0 5 6 5 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 53 72 39 55 53 36 17 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21DB;
unicode = 8667;
},
{
glyphname = uni21DD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(755,417,o),
(755,416,qs),
(755,414,o),
(771,379,qs),
(798,326,o),
(841,278,qs),
(848,270,l),
(638,270,l),
(594,310,ls),
(548,350,o),
(546,351,qs),
(538,356,o),
(529,351,q),
(488,316,l),
(408,239,o),
(353,195,q),
(303,239,ls),
(292,249,o),
(229,306,o),
(218,316,qs),
(177,351,l),
(168,356,o),
(159,351,q),
(108,306,ls),
(61,263,o),
(58,258,q),
(56,252,o),
(56,250,qs),
(56,242,o),
(69,230,o),
(77,230,qs),
(79,230,o),
(85,232,q),
(169,306,l),
(169,305,o),
(255,228,qs),
(339,151,o),
(345,149,qs),
(353,146,o),
(362,149,q),
(537,306,l),
(622,232,ls),
(625,230,o),
(737,230,qs),
(848,230,l),
(841,222,ls),
(798,174,o),
(771,121,qs),
(755,86,o),
(755,84,qs),
(755,83,o),
(778,83,qs),
(801,83,l),
(833,181,o),
(939,247,qs),
(941,248,o),
(943,250,q),
(836,314,o),
(801,417,q),
(778,417,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
18 1 2 3 2 1 1 2 43 1 0 1 3 76 28 1 1 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 29 values pushed */
4 1 3 2 2 3 112 0 0 1 1 0 113 0 2 1 1 2 87 0 2 2 1 96 0 1 2 1 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
4 1 3 2 3 133 0 0 1 0 134 0 2 1 1 2 87 0 2 2 1 96 0 1 2 1 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 13 values pushed */
0 0 0 59 0 59 52 51 38 38 5 6 24 
CALL[ ]	/* CallFunction */";
};
width = 1000;
}
);
note = uni21DD;
unicode = 8669;
},
{
glyphname = uni21E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(162,317,o),
(78,270,qs),
(64,262,o),
(64,238,o),
(78,230,qs),
(162,183,o),
(205,83,qs),
(210,70,o),
(218,66,qs),
(221,64,o),
(250,64,qs),
(278,64,o),
(281,65,q),
(292,71,o),
(292,82,qs),
(292,91,o),
(287,100,q),
(264,160,o),
(223,209,qs),
(216,218,o),
(213,223,q),
(211,225,l),
(306,225,ls),
(385,225,o),
(409,227,o),
(415,232,q),
(422,241,o),
(422,259,o),
(415,268,q),
(409,273,o),
(385,275,o),
(306,275,qs),
(211,275,l),
(213,277,l),
(216,282,o),
(223,291,qs),
(264,340,o),
(287,400,q),
(292,409,o),
(292,418,qs),
(292,429,o),
(281,435,q),
(275,437,o),
(252,437,qs),
(238,437,ls),
(221,437,o),
(212,431,o),
(205,417,qs)
);
},
{
closed = 1;
nodes = (
(834,238,o),
(834,262,o),
(819,270,q),
(515,270,l),
(501,263,o),
(501,237,o),
(515,230,q),
(819,230,l)
);
},
{
closed = 1;
nodes = (
(1251,238,o),
(1251,262,o),
(1236,270,q),
(932,270,l),
(918,263,o),
(918,237,o),
(932,230,q),
(1236,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
0 0 1 0 133 0 3 2 3 134 0 1 4 2 1 87 6 1 4 9 7 8 3 5 2 4 5 103 0 1 1 2 96 0 2 1 2 80 56 56 48 48 56 63 56 63 60 59 48 55 48 55 30 57 39 42 49 10 6 27 
CALL[ ]	/* CallFunction */";
};
width = 1334;
}
);
note = uni21E0;
unicode = 8672;
},
{
glyphname = uni21E2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,238,o),
(417,262,o),
(402,270,q),
(98,270,l),
(84,263,o),
(84,237,o),
(98,230,q),
(402,230,l)
);
},
{
closed = 1;
nodes = (
(834,238,o),
(834,262,o),
(819,270,q),
(515,270,l),
(501,263,o),
(501,237,o),
(515,230,q),
(819,230,l)
);
},
{
closed = 1;
nodes = (
(1022,433,o),
(1022,417,qs),
(1022,408,o),
(1039,374,qs),
(1064,322,o),
(1091,291,qs),
(1098,282,o),
(1101,277,q),
(1103,275,l),
(1008,275,ls),
(929,275,o),
(905,273,o),
(899,268,q),
(892,259,o),
(892,241,o),
(899,232,q),
(905,227,o),
(929,225,o),
(1008,225,qs),
(1103,225,l),
(1101,223,l),
(1098,218,o),
(1091,209,qs),
(1050,160,o),
(1027,100,q),
(1022,91,o),
(1022,82,qs),
(1022,71,o),
(1033,65,q),
(1036,64,o),
(1065,64,qs),
(1093,64,o),
(1097,66,qs),
(1104,70,o),
(1109,83,qs),
(1152,183,o),
(1236,230,qs),
(1251,239,o),
(1251,261,o),
(1236,270,qs),
(1152,317,o),
(1109,417,qs),
(1104,430,o),
(1097,434,qs),
(1091,437,o),
(1067,437,qs),
(1039,437,o),
(1038,436,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
10 1 4 7 4 133 0 5 6 5 134 0 7 0 6 7 87 2 1 0 9 3 8 3 1 6 0 1 103 0 7 7 6 96 0 6 7 6 80 18 16 8 8 0 0 54 52 45 43 33 30 16 63 18 63 8 15 8 15 12 11 0 7 0 7 19 11 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1334;
}
);
note = uni21E2;
unicode = 8674;
},
{
glyphname = uni2201;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,743,o),
(211,766,o),
(250,766,qs),
(327,766,o),
(355,733,qs),
(357,731,o),
(363,721,o),
(364,719,q),
(364,654,ls),
(364,591,o),
(367,583,qs),
(377,556,o),
(404,556,qs),
(428,556,o),
(444,586,q),
(444,653,ls),
(444,722,o),
(443,729,qs),
(423,824,o),
(290,845,qs),
(282,846,o),
(243,846,qs),
(229,846,ls),
(210,846,o),
(192,841,q),
(136,831,o),
(66,772,o),
(58,729,qs),
(56,722,o),
(56,413,qs),
(56,103,o),
(58,96,qs),
(68,42,o),
(172,-21,o),
(328,-21,o),
(432,43,o),
(443,96,qs),
(444,103,o),
(444,172,qs),
(444,240,l),
(425,269,o),
(404,269,qs),
(377,269,o),
(367,242,qs),
(364,235,o),
(364,172,qs),
(364,107,l),
(361,101,ls),
(351,82,o),
(289,58,o),
(251,58,qs),
(210,58,o),
(145,84,o),
(137,107,q),
(137,719,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
54 46 39 36 4 4 5 14 7 0 3 0 1 2 76 0 4 5 1 5 4 1 128 0 1 0 5 1 0 126 0 3 0 5 4 3 5 105 0 0 2 2 0 89 0 0 0 2 97 0 2 0 2 81 40 39 58 22 39 34 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni2201;
unicode = 8705;
},
{
glyphname = uni2204;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(326,654,o),
(326,652,q),
(322,634,ls),
(318,617,o),
(300,538,o),
(293,509,qs),
(262,367,l),
(84,367,l),
(70,360,o),
(70,334,o),
(84,327,q),
(168,327,ls),
(252,327,o),
(252,326,qs),
(252,323,o),
(223,196,o),
(189,45,o),
(188,40,q),
(70,40,l),
(56,33,o),
(56,7,o),
(70,0,q),
(125,0,ls),
(179,0,o),
(179,-2,q),
(177,-8,o),
(147,-145,o),
(147,-147,qs),
(147,-165,o),
(167,-165,qs),
(180,-165,o),
(184,-156,q),
(220,-2,l),
(220,0,o),
(353,0,qs),
(487,1,l),
(498,10,o),
(500,15,q),
(500,679,l),
(497,686,o),
(487,694,q),
(431,694,ls),
(376,694,o),
(376,696,q),
(378,702,o),
(408,839,o),
(408,841,qs),
(408,859,o),
(390,859,qs),
(374,859,o),
(370,847,q),
(369,846,o),
(352,771,qs),
(335,696,l),
(335,694,o),
(203,694,qs),
(70,694,l),
(56,687,o),
(56,661,o),
(70,654,q),
(198,654,ls)
);
},
{
closed = 1;
nodes = (
(460,367,l),
(382,367,ls),
(303,367,o),
(303,368,qs),
(303,371,o),
(332,498,o),
(366,649,o),
(367,654,q),
(460,654,l)
);
},
{
closed = 1;
nodes = (
(229,40,o),
(229,42,q),
(233,60,ls),
(237,77,o),
(255,156,o),
(262,185,qs),
(294,327,l),
(460,327,l),
(460,40,l),
(344,40,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 105 values pushed */
13 1 0 1 21 1 9 0 22 1 3 6 32 1 4 3 4 76 0 1 0 1 133 0 4 3 4 134 2 1 0 15 11 14 3 9 8 0 9 104 10 1 8 12 1 7 6 8 7 103 16 13 2 6 3 3 6 87 16 13 2 6 6 3 97 5 1 3 6 3 81 70 70 61 61 0 0 70 79 70 77 72 71 61 69 61 69 68 64 0 60 0 58 19 67 19 37 35 37 37 37 35 17 6 31 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uni2204;
unicode = 8708;
},
{
glyphname = emptyset;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(96,320,o),
(95,299,o),
(95,292,qs),
(95,203,o),
(154,113,q),
(62,33,o),
(58,27,q),
(56,21,o),
(56,18,qs),
(56,10,o),
(67,-3,o),
(75,-3,qs),
(77,-3,o),
(83,-1,qs),
(85,0,o),
(165,69,o),
(178,81,qs),
(181,83,l),
(189,75,ls),
(253,16,o),
(338,2,qs),
(363,-2,o),
(389,-2,qs),
(414,-2,o),
(419,-1,qs),
(476,5,o),
(583,64,o),
(616,106,qs),
(682,186,o),
(682,292,qs),
(682,380,o),
(623,470,q),
(719,556,l),
(721,562,o),
(721,565,qs),
(721,573,o),
(711,585,o),
(703,585,qs),
(698,585,o),
(696,584,q),
(690,583,o),
(646,544,qs),
(636,535,o),
(612,514,o),
(599,503,o),
(599,502,q),
(596,500,l),
(588,508,ls),
(504,585,o),
(387,585,qs),
(272,585,o),
(107,432,o),
(96,322,qs)
);
},
{
closed = 1;
nodes = (
(564,478,o),
(564,473,qs),
(564,455,o),
(184,141,q),
(174,141,o),
(151,195,o),
(140,238,o),
(137,254,qs),
(136,262,o),
(136,322,o),
(137,330,qs),
(152,414,o),
(212,474,qs),
(285,545,o),
(393,545,q),
(474,541,o),
(531,502,qs)
);
},
{
closed = 1;
nodes = (
(642,270,o),
(640,254,qs),
(626,171,o),
(509,53,o),
(427,40,qs),
(411,38,o),
(389,38,qs),
(319,38,o),
(266,69,qs),
(226,92,o),
(212,110,q),
(217,115,o),
(223,121,o),
(232,129,o),
(253,147,o),
(283,172,o),
(340,222,o),
(411,284,o),
(525,384,o),
(592,443,q),
(601,431,l),
(642,363,o),
(642,292,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
72 67 20 5 4 5 4 81 47 34 3 6 5 2 76 0 5 4 6 4 5 6 128 1 1 0 0 4 5 0 4 105 0 6 2 2 6 89 0 6 6 2 97 3 1 2 6 2 81 86 84 25 44 41 60 42 33 7 6 28 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = emptyset;
unicode = 8709;
},
{
glyphname = uni220D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(362,244,o),
(353,214,q),
(353,212,l),
(172,212,l),
(151,204,o),
(151,185,qs),
(151,172,o),
(165,167,q),
(253,166,l),
(341,166,l),
(337,154,ls),
(304,58,o),
(208,47,q),
(204,46,o),
(166,46,qs),
(131,46,o),
(129,45,q),
(111,40,o),
(109,22,qs),
(109,6,o),
(125,0,q),
(167,0,ls),
(219,1,o),
(242,7,qs),
(310,22,o),
(365,67,qs),
(408,105,o),
(451,192,o),
(451,257,qs),
(451,274,o),
(450,280,qs),
(441,344,o),
(360,429,o),
(296,440,qs),
(288,441,o),
(256,441,qs),
(218,441,o),
(180,423,qs),
(140,406,o),
(134,396,q),
(131,393,o),
(136,378,qs),
(140,363,o),
(148,363,qs),
(150,363,o),
(161,370,qs),
(200,396,o),
(232,402,qs),
(246,405,o),
(260,405,qs),
(310,405,o),
(362,342,o),
(362,288,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
21 1 6 1 33 1 3 4 2 76 0 1 0 6 0 1 6 128 0 2 0 0 1 2 0 105 0 6 0 5 4 6 5 103 0 4 3 3 4 89 0 4 4 3 97 0 3 4 3 81 20 36 52 44 38 36 33 7 6 29 
CALL[ ]	/* CallFunction */";
};
width = 429;
}
);
note = uni220D;
unicode = 8717;
},
{
glyphname = minus;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(417,238,o),
(417,262,o),
(402,270,q),
(98,270,l),
(84,263,o),
(84,237,o),
(98,230,q),
(402,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 7 0 7 19 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = minus;
unicode = 8722;
},
{
glyphname = uni2214;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(339,695,o),
(369,666,o),
(390,666,qs),
(409,666,o),
(439,696,o),
(439,736,o),
(408,766,o),
(368,766,o),
(339,737,o),
(339,717,qs)
);
},
{
closed = 1;
nodes = (
(369,-79,l),
(376,-93,o),
(402,-93,o),
(409,-79,q),
(409,230,l),
(707,230,l),
(722,238,o),
(722,262,o),
(707,270,q),
(409,270,l),
(409,579,l),
(402,594,o),
(389,594,qs),
(380,594,o),
(370,581,q),
(369,425,l),
(369,270,l),
(71,270,l),
(57,263,o),
(57,237,o),
(71,230,q),
(369,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
20 16 2 2 3 30 27 2 6 5 2 76 0 3 1 2 1 3 2 128 0 6 5 6 134 0 0 0 1 3 0 1 105 4 1 2 5 5 2 87 4 1 2 2 5 95 8 7 2 5 2 5 79 10 10 10 31 10 31 18 19 18 35 22 35 17 9 6 29 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2214;
unicode = 8724;
},
{
glyphname = uni2216;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(92,404,o),
(94,401,q),
(95,398,o),
(655,-19,o),
(658,-20,qs),
(662,-22,o),
(665,-22,qs),
(673,-22,o),
(687,-11,o),
(687,-3,qs),
(687,3,o),
(683,8,q),
(682,12,o),
(126,426,o),
(119,429,qs),
(116,431,o),
(110,431,qs),
(103,431,o),
(92,419,o),
(92,411,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 33 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2216;
unicode = 8726;
},
{
glyphname = proportional;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(722,66,o),
(693,68,qs),
(620,73,o),
(520,173,o),
(520,250,qs),
(520,323,o),
(571,377,qs),
(620,427,o),
(693,432,qs),
(722,434,o),
(722,453,qs),
(722,462,o),
(708,472,o),
(698,472,qs),
(649,472,o),
(559,427,o),
(531,393,qs),
(512,369,o),
(489,316,q),
(486,326,ls),
(474,362,o),
(448,393,qs),
(418,427,o),
(327,472,o),
(276,472,qs),
(208,472,o),
(105,401,o),
(78,348,qs),
(56,300,o),
(56,250,qs),
(56,146,o),
(136,79,qs),
(198,28,o),
(277,28,qs),
(325,28,o),
(421,73,o),
(448,107,qs),
(467,131,o),
(490,184,q),
(493,174,ls),
(505,138,o),
(531,107,qs),
(559,73,o),
(649,28,o),
(698,28,qs),
(722,28,o),
(722,50,qs)
);
},
{
closed = 1;
nodes = (
(260,68,o),
(248,70,qs),
(186,82,o),
(147,123,qs),
(96,177,o),
(96,250,qs),
(96,324,o),
(199,431,o),
(273,431,qs),
(302,431,o),
(308,430,qs),
(355,422,o),
(429,361,o),
(447,317,qs),
(459,286,o),
(459,250,qs),
(459,175,o),
(356,68,o),
(278,68,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 54 values pushed */
27 7 2 5 4 1 76 3 1 2 6 1 4 5 2 4 105 8 7 2 5 0 0 5 89 8 7 2 5 5 0 97 1 1 0 5 0 81 47 47 47 65 47 64 57 37 35 41 39 41 32 9 6 29 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = proportional;
unicode = 8733;
},
{
glyphname = angle;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,31,o),
(653,40,q),
(386,40,l),
(120,41,l),
(390,350,ls),
(455,424,o),
(592,582,o),
(662,662,o),
(663,663,qs),
(667,668,o),
(667,674,qs),
(667,682,o),
(654,693,o),
(645,693,qs),
(640,693,o),
(638,692,qs),
(632,689,o),
(64,38,o),
(57,28,q),
(55,22,o),
(55,20,qs),
(55,7,o),
(71,0,q),
(651,0,l),
(666,7,o),
(666,20,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
4 1 0 2 1 76 0 1 2 1 133 0 2 0 0 2 87 0 2 2 0 95 0 0 2 0 79 41 55 17 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = angle;
unicode = 8736;
},
{
glyphname = uni2221;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,8,o),
(666,32,o),
(651,40,q),
(434,40,l),
(433,54,ls),
(416,179,o),
(338,275,qs),
(328,288,o),
(329,289,qs),
(334,294,o),
(658,678,o),
(663,683,qs),
(667,688,o),
(667,694,qs),
(667,702,o),
(653,713,o),
(645,713,qs),
(640,713,o),
(638,712,qs),
(632,709,o),
(64,38,o),
(57,28,q),
(55,22,o),
(55,20,qs),
(55,7,o),
(71,0,q),
(396,0,l),
(396,-4,l),
(400,-20,o),
(416,-20,qs),
(431,-20,o),
(436,0,q),
(651,0,l)
);
},
{
closed = 1;
nodes = (
(394,50,o),
(394,40,q),
(256,40,l),
(119,41,l),
(149,77,o),
(271,220,o),
(302,256,q),
(363,184,o),
(387,83,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
34 23 2 3 2 8 1 1 3 2 76 0 2 3 2 133 0 0 1 0 134 5 1 3 1 1 3 87 5 1 3 3 1 95 6 4 2 1 3 1 79 0 0 39 37 0 32 0 32 28 55 33 33 7 6 26 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni2221;
unicode = 8737;
},
{
glyphname = uni2222;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(415,442,o),
(72,270,qs),
(60,265,o),
(58,259,q),
(55,254,o),
(55,246,o),
(58,241,q),
(60,235,o),
(75,228,qs),
(78,226,o),
(635,-48,o),
(644,-51,q),
(646,-51,ls),
(655,-51,o),
(666,-39,o),
(666,-31,qs),
(666,-21,o),
(657,-15,q),
(526,50,o),
(525,51,q),
(526,54,ls),
(527,56,o),
(530,64,o),
(531,68,q),
(566,156,o),
(566,344,o),
(531,432,q),
(530,436,o),
(527,444,o),
(526,446,qs),
(525,449,l),
(531,452,o),
(583,478,o),
(650,512,o),
(657,515,qs),
(665,520,o),
(665,531,qs),
(665,551,o),
(647,551,qs),
(642,551,o),
(611,536,qs)
);
},
{
closed = 1;
nodes = (
(526,177,o),
(504,111,qs),
(492,69,o),
(488,69,qs),
(487,69,o),
(121,249,o),
(121,251,o),
(487,431,o),
(489,431,o),
(495,416,qs),
(526,331,o),
(526,250,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
24 9 2 1 0 1 76 0 0 1 0 133 0 1 1 118 27 26 32 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni2222;
unicode = 8738;
},
{
glyphname = uni2223;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(124,430,o),
(113,431,qs),
(101,431,o),
(91,415,q),
(91,-7,l),
(98,-21,o),
(124,-21,o),
(131,-7,q),
(131,416,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
8 4 3 0 4 0 1 1 76 0 1 0 1 133 0 0 0 118 19 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uni2223;
unicode = 8739;
},
{
glyphname = uni2224;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(226,427,ls),
(292,487,o),
(295,492,q),
(297,498,o),
(297,500,qs),
(297,508,o),
(286,520,o),
(277,520,qs),
(270,520,o),
(212,468,qs),
(160,421,l),
(159,579,l),
(159,737,l),
(150,750,o),
(139,750,qs),
(129,750,o),
(120,737,q),
(119,561,l),
(119,384,l),
(52,324,ls),
(-15,263,o),
(-18,258,q),
(-20,252,o),
(-20,250,qs),
(-20,242,o),
(-7,230,o),
(1,230,qs),
(7,230,o),
(11,233,qs),
(12,234,o),
(27,247,o),
(55,272,o),
(67,283,qs),
(119,330,l),
(119,47,l),
(120,-237,l),
(129,-250,o),
(139,-250,qs),
(152,-250,o),
(159,-235,q),
(159,367,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
27 23 2 3 2 40 29 21 6 4 1 3 4 0 2 0 1 3 76 0 2 3 2 133 0 3 1 3 133 0 1 0 1 133 0 0 0 118 37 42 41 33 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = uni2224;
unicode = 8740;
},
{
glyphname = uni2225;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,420,o),
(55,371,o),
(55,205,qs),
(55,38,o),
(56,-11,o),
(61,-16,qs),
(67,-22,o),
(75,-22,qs),
(87,-22,o),
(93,-11,qs),
(95,-7,o),
(95,204,qs),
(95,416,o),
(93,420,qs),
(87,431,o),
(75,431,qs),
(67,431,o),
(61,425,qs)
);
},
{
closed = 1;
nodes = (
(293,416,o),
(293,205,qs),
(293,-7,o),
(295,-11,qs),
(301,-22,o),
(313,-22,qs),
(321,-22,o),
(327,-16,qs),
(332,-11,o),
(333,38,o),
(333,205,qs),
(333,371,o),
(332,420,o),
(322,430,o),
(313,430,qs),
(301,430,o),
(295,420,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
30 3 2 1 0 1 76 2 1 0 1 0 133 3 1 1 1 118 39 41 22 32 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = uni2225;
unicode = 8741;
},
{
glyphname = uni2226;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(133,739,o),
(132,675,o),
(132,446,qs),
(132,160,l),
(58,87,ls),
(0,29,o),
(-20,7,o),
(-20,0,qs),
(-20,-8,o),
(-8,-20,o),
(0,-20,qs),
(2,-20,o),
(8,-18,q),
(11,-16,o),
(72,43,qs),
(132,103,l),
(132,-64,ls),
(132,-198,o),
(133,-239,o),
(138,-244,qs),
(144,-250,o),
(152,-250,qs),
(164,-250,o),
(170,-239,qs),
(172,-235,o),
(172,-46,qs),
(172,144,l),
(276,248,o),
(327,300,q),
(327,32,ls),
(327,-235,o),
(329,-239,qs),
(335,-250,o),
(347,-250,qs),
(355,-250,o),
(361,-244,qs),
(366,-239,o),
(367,-175,o),
(367,54,qs),
(367,339,l),
(441,414,ls),
(514,485,o),
(517,492,qs),
(519,498,o),
(519,500,qs),
(519,508,o),
(507,520,o),
(499,520,qs),
(494,520,o),
(492,519,qs),
(488,517,o),
(427,457,qs),
(367,397,l),
(367,564,ls),
(367,698,o),
(366,739,o),
(361,744,qs),
(355,750,o),
(347,750,qs),
(335,750,o),
(329,739,qs),
(327,735,o),
(327,546,qs),
(327,357,l),
(223,253,o),
(172,201,q),
(172,468,ls),
(172,735,o),
(170,739,qs),
(164,750,o),
(152,750,qs),
(144,750,o),
(138,744,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
3 1 2 0 68 56 45 43 32 19 8 6 8 5 2 40 1 3 5 3 76 1 1 0 2 0 133 0 2 5 2 133 0 5 3 5 133 4 1 3 3 118 42 26 44 42 26 32 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni2226;
unicode = 8742;
},
{
glyphname = therefore;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(273,386,o),
(308,351,o),
(358,351,o),
(393,386,o),
(393,436,o),
(358,471,o),
(334,471,qs),
(308,471,o),
(273,437,o),
(273,411,qs)
);
},
{
closed = 1;
nodes = (
(111,-82,o),
(143,-46,o),
(143,-20,qs),
(143,5,o),
(108,38,o),
(84,38,qs),
(59,38,o),
(23,5,o),
(23,-20,qs),
(23,-47,o),
(58,-82,o),
(85,-82,qs)
);
},
{
closed = 1;
nodes = (
(523,-50,o),
(559,-82,o),
(611,-82,o),
(643,-47,o),
(643,-22,qs),
(643,4,o),
(609,38,o),
(584,38,qs),
(557,38,o),
(523,3,o),
(523,-24,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
0 0 0 1 2 0 1 105 4 1 2 3 3 2 89 4 1 2 2 3 97 5 6 2 3 2 3 81 10 10 30 29 25 23 10 21 10 20 39 19 33 7 6 25 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = therefore;
unicode = 8756;
},
{
glyphname = uni2235;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(23,386,o),
(58,351,o),
(108,351,o),
(143,386,o),
(143,436,o),
(108,471,o),
(84,471,qs),
(58,471,o),
(23,437,o),
(23,411,qs)
);
},
{
closed = 1;
nodes = (
(523,386,o),
(558,351,o),
(608,351,o),
(643,386,o),
(643,436,o),
(608,471,o),
(584,471,qs),
(558,471,o),
(523,437,o),
(523,411,qs)
);
},
{
closed = 1;
nodes = (
(361,-82,o),
(393,-46,o),
(393,-20,qs),
(393,5,o),
(358,38,o),
(334,38,qs),
(309,38,o),
(273,5,o),
(273,-20,qs),
(273,-47,o),
(308,-82,o),
(335,-82,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
2 1 0 3 1 1 4 0 1 105 0 4 5 5 4 89 0 4 4 5 97 6 1 5 4 5 81 20 20 20 31 20 30 39 19 36 19 33 7 6 27 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni2235;
unicode = 8757;
},
{
glyphname = similar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,144,o),
(66,136,qs),
(69,133,o),
(72,133,qs),
(79,133,o),
(87,160,o),
(87,170,qs),
(87,200,o),
(108,231,qs),
(149,292,o),
(223,292,qs),
(264,292,o),
(311,266,qs),
(339,249,o),
(384,214,qs),
(436,174,o),
(494,142,o),
(525,136,qs),
(533,134,o),
(555,134,qs),
(576,134,o),
(584,136,qs),
(648,150,o),
(722,254,o),
(722,328,qs),
(722,354,o),
(712,364,qs),
(709,367,o),
(706,367,qs),
(699,367,o),
(690,341,o),
(690,330,qs),
(690,300,o),
(669,269,qs),
(628,208,o),
(554,208,qs),
(513,208,o),
(466,234,qs),
(438,251,o),
(394,285,qs),
(343,325,o),
(286,357,o),
(255,364,q),
(225,367,o),
(217,367,qs),
(207,367,o),
(203,366,qs),
(139,358,o),
(55,249,o),
(55,171,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
4 1 1 74 0 1 3 1 133 0 3 0 3 133 0 0 2 2 0 89 0 0 0 2 97 4 1 2 0 2 81 37 39 39 37 44 5 6 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = similar;
unicode = 8764;
},
{
glyphname = uni223D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(517,366,o),
(482,349,qs),
(446,332,o),
(383,275,qs),
(334,232,o),
(306,214,qs),
(265,189,o),
(223,189,qs),
(173,189,o),
(102,252,o),
(90,298,q),
(88,303,o),
(82,358,o),
(77,364,q),
(72,367,o),
(70,367,qs),
(56,367,o),
(56,335,qs),
(56,272,o),
(113,172,o),
(157,149,qs),
(188,133,o),
(222,133,qs),
(258,133,o),
(297,151,qs),
(332,168,o),
(396,225,qs),
(459,281,o),
(491,296,qs),
(522,311,o),
(555,311,qs),
(627,311,o),
(668,248,qs),
(694,207,o),
(694,162,qs),
(694,150,o),
(703,133,o),
(713,133,o),
(716,139,q),
(722,146,o),
(722,171,qs),
(718,253,o),
(628,367,o),
(550,367,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
6 5 2 3 0 1 4 3 1 105 0 4 0 0 4 89 0 4 4 0 97 2 1 0 4 0 81 0 0 0 43 0 42 39 21 38 37 21 7 6 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni223D;
unicode = 8765;
},
{
glyphname = uni2241;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(543,464,o),
(467,375,qs),
(393,286,l),
(384,293,ls),
(307,353,o),
(252,364,qs),
(244,366,o),
(222,366,qs),
(201,366,o),
(193,364,qs),
(131,350,o),
(58,251,o),
(55,180,qs),
(55,145,o),
(66,136,qs),
(69,133,o),
(72,133,qs),
(79,133,o),
(87,160,o),
(87,170,qs),
(87,200,o),
(108,231,qs),
(149,292,o),
(223,292,qs),
(264,292,o),
(311,266,qs),
(314,264,o),
(333,252,o),
(349,241,o),
(352,238,q),
(280,152,ls),
(263,132,o),
(225,87,o),
(206,64,o),
(205,63,q),
(203,59,o),
(203,52,qs),
(203,32,o),
(221,32,qs),
(225,32,o),
(231,34,qs),
(234,35,o),
(310,125,qs),
(384,214,l),
(393,207,ls),
(470,147,o),
(525,136,qs),
(533,134,o),
(555,134,qs),
(576,134,o),
(584,136,qs),
(648,150,o),
(722,254,o),
(722,328,qs),
(722,354,o),
(712,364,qs),
(709,367,o),
(706,367,qs),
(699,367,o),
(690,341,o),
(690,330,qs),
(690,300,o),
(669,269,qs),
(628,208,o),
(554,208,qs),
(513,208,o),
(466,234,qs),
(463,236,o),
(444,248,o),
(428,259,o),
(425,262,q),
(497,348,ls),
(514,368,o),
(552,413,o),
(571,436,o),
(572,437,q),
(575,443,o),
(575,448,qs),
(575,456,o),
(564,468,o),
(556,468,qs),
(553,468,o),
(547,466,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
79 52 38 11 4 1 5 45 1 4 3 2 76 0 0 2 0 133 0 4 3 4 134 7 1 2 0 5 1 2 5 105 0 1 3 3 1 89 0 1 1 3 97 6 1 3 1 3 81 39 37 45 40 39 37 46 32 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2241;
unicode = 8769;
},
{
glyphname = uni2242;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(722,432,o),
(722,456,o),
(707,464,q),
(70,464,l),
(56,457,o),
(56,431,o),
(70,424,q),
(707,424,l)
);
},
{
closed = 1;
nodes = (
(81,36,o),
(83,66,qs),
(86,118,o),
(148,190,o),
(194,199,qs),
(208,202,o),
(221,202,qs),
(255,202,o),
(295,183,qs),
(324,168,o),
(382,122,qs),
(442,73,o),
(475,56,qs),
(515,36,o),
(556,36,qs),
(592,36,o),
(625,54,qs),
(702,92,o),
(719,194,qs),
(721,203,o),
(721,226,qs),
(721,242,o),
(720,246,qs),
(713,265,o),
(701,255,q),
(695,246,o),
(694,228,qs),
(691,176,o),
(628,104,o),
(583,95,qs),
(570,92,o),
(556,92,qs),
(522,92,o),
(482,111,qs),
(452,126,o),
(395,172,qs),
(334,222,o),
(302,237,qs),
(262,258,o),
(223,258,qs),
(185,258,o),
(152,240,qs),
(109,218,o),
(55,127,o),
(55,68,qs),
(55,36,o),
(69,36,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
31 1 5 2 1 76 0 0 7 1 1 2 0 1 103 0 2 0 5 3 2 5 105 0 3 4 4 3 89 0 3 3 4 97 8 6 2 4 3 4 81 8 8 0 0 8 54 8 53 48 46 40 38 23 21 15 13 0 7 0 7 19 9 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2242;
unicode = 8770;
},
{
glyphname = uni2246;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(89,470,o),
(135,499,qs),
(174,524,o),
(224,524,qs),
(243,524,o),
(250,523,qs),
(290,515,o),
(335,489,q),
(378,458,o),
(452,416,qs),
(458,412,o),
(458,411,q),
(409,326,l),
(361,241,l),
(70,241,l),
(56,234,o),
(55,223,qs),
(55,211,o),
(71,201,q),
(337,201,l),
(323,175,o),
(263,74,o),
(249,48,q),
(159,47,l),
(68,47,l),
(55,36,o),
(55,27,qs),
(55,14,o),
(70,8,q),
(148,7,l),
(226,7,l),
(187,-60,ls),
(146,-131,o),
(146,-136,qs),
(146,-144,o),
(159,-157,o),
(175,-157,o),
(181,-151,q),
(188,-140,ls),
(194,-129,o),
(216,-90,o),
(227,-71,qs),
(272,7,l),
(490,7,l),
(708,8,l),
(722,15,o),
(722,27,qs),
(722,36,o),
(709,47,q),
(502,47,l),
(295,48,l),
(325,99,o),
(383,201,q),
(706,201,l),
(722,211,o),
(722,223,qs),
(721,234,o),
(707,241,q),
(557,241,ls),
(407,241,o),
(407,242,q),
(451,320,ls),
(496,396,o),
(497,396,qs),
(501,396,o),
(508,393,q),
(530,388,o),
(555,388,qs),
(577,388,o),
(587,390,qs),
(647,402,o),
(722,487,o),
(722,551,qs),
(722,581,o),
(708,581,qs),
(696,581,o),
(694,552,qs),
(693,526,o),
(678,505,qs),
(642,448,o),
(562,443,q),
(526,443,o),
(526,446,qs),
(526,448,o),
(572,529,o),
(625,621,o),
(630,632,qs),
(631,634,o),
(631,637,qs),
(631,646,o),
(618,657,o),
(610,657,qs),
(608,657,o),
(602,655,q),
(599,653,o),
(591,643,o),
(578,623,o),
(567,603,o),
(547,567,o),
(539,553,qs),
(485,459,o),
(483,459,qs),
(473,459,o),
(443,479,qs),
(423,492,o),
(393,511,qs),
(321,556,o),
(292,567,qs),
(255,581,o),
(222,581,qs),
(158,581,o),
(71,507,o),
(59,451,qs),
(55,435,o),
(55,419,qs),
(55,387,o),
(83,387,o),
(83,416,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 109 values pushed */
28 1 1 3 117 105 2 0 4 100 61 2 8 7 3 76 0 3 1 3 133 0 2 16 4 16 2 4 128 0 11 10 11 134 5 1 1 0 16 2 1 16 105 0 4 6 1 0 7 4 0 105 15 1 7 14 1 8 9 7 8 103 13 1 9 10 10 9 87 13 1 9 9 10 95 12 1 10 9 10 79 114 111 103 102 98 97 94 92 88 86 81 80 74 72 68 66 20 54 37 36 26 41 22 37 16 17 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2246;
unicode = 8774;
},
{
glyphname = approxequal;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(700,484,o),
(693,463,o),
(688,434,o),
(686,430,qs),
(672,401,o),
(599,364,o),
(555,364,qs),
(542,364,o),
(535,365,qs),
(486,370,o),
(392,422,qs),
(306,471,o),
(253,481,qs),
(245,482,o),
(215,482,qs),
(201,482,l),
(134,474,o),
(55,394,o),
(55,327,qs),
(55,313,o),
(64,289,o),
(71,289,qs),
(84,289,o),
(87,323,qs),
(88,336,o),
(91,342,qs),
(105,371,o),
(178,408,o),
(222,408,qs),
(235,408,o),
(242,407,qs),
(291,402,o),
(385,350,qs),
(471,301,o),
(523,292,qs),
(538,289,o),
(555,289,qs),
(602,289,o),
(640,309,qs),
(722,348,o),
(722,444,qs),
(722,484,o),
(705,484,qs)
);
},
{
closed = 1;
nodes = (
(84,55,o),
(87,89,qs),
(88,102,o),
(91,108,qs),
(105,137,o),
(178,174,o),
(222,174,qs),
(235,174,o),
(242,173,qs),
(292,168,o),
(385,115,qs),
(472,67,o),
(523,58,qs),
(538,55,o),
(555,55,qs),
(602,55,o),
(640,75,qs),
(722,114,o),
(722,210,qs),
(722,238,o),
(711,246,qs),
(708,249,o),
(705,249,qs),
(700,249,o),
(693,229,o),
(688,200,o),
(686,196,qs),
(672,167,o),
(599,130,o),
(555,130,qs),
(542,130,o),
(535,131,qs),
(486,136,o),
(392,188,qs),
(306,237,o),
(253,247,qs),
(245,248,o),
(215,248,qs),
(201,248,l),
(134,240,o),
(55,160,o),
(55,93,qs),
(55,79,o),
(64,55,o),
(71,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 68 values pushed */
11 5 2 3 0 1 4 3 1 105 0 4 2 1 0 6 4 0 105 0 6 0 9 7 6 9 105 0 7 8 8 7 89 0 7 7 8 97 10 1 8 7 8 81 0 0 87 86 81 78 73 71 58 55 50 48 0 42 0 41 53 38 21 53 36 12 6 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = approxequal;
unicode = 8776;
},
{
glyphname = uni224A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(702,580,o),
(694,561,o),
(694,551,q),
(688,497,o),
(642,468,qs),
(603,443,o),
(553,443,qs),
(534,443,o),
(528,444,qs),
(487,453,o),
(443,478,qs),
(318,555,o),
(316,556,qs),
(266,580,o),
(223,580,qs),
(219,580,o),
(207,579,o),
(205,579,qs),
(188,579,o),
(168,571,q),
(125,558,o),
(68,494,o),
(59,450,qs),
(55,428,o),
(55,416,qs),
(55,386,o),
(69,386,qs),
(81,386,o),
(83,415,qs),
(86,467,o),
(135,498,qs),
(174,523,o),
(224,523,qs),
(243,523,o),
(250,522,qs),
(290,513,o),
(335,488,q),
(349,478,o),
(384,457,qs),
(454,411,o),
(485,400,qs),
(522,386,o),
(555,386,qs),
(582,386,o),
(609,395,qs),
(660,411,o),
(722,492,o),
(722,549,qs),
(722,580,o),
(708,580,qs)
);
},
{
closed = 1;
nodes = (
(688,263,o),
(642,234,qs),
(603,209,o),
(553,209,qs),
(534,209,o),
(528,210,qs),
(487,218,o),
(443,244,qs),
(318,321,o),
(316,322,qs),
(266,346,o),
(223,346,qs),
(219,346,o),
(207,345,o),
(205,345,qs),
(188,345,o),
(168,337,q),
(125,324,o),
(68,260,o),
(59,216,qs),
(55,194,o),
(55,182,qs),
(55,152,o),
(69,152,qs),
(81,152,o),
(83,181,qs),
(86,233,o),
(135,264,qs),
(174,289,o),
(224,289,qs),
(243,289,o),
(250,288,qs),
(290,279,o),
(335,254,q),
(349,244,o),
(384,223,qs),
(454,177,o),
(485,166,qs),
(522,152,o),
(555,152,qs),
(619,152,o),
(706,226,o),
(718,282,qs),
(722,298,o),
(722,314,qs),
(722,346,o),
(694,346,o),
(694,317,q)
);
},
{
closed = 1;
nodes = (
(727,-27,o),
(728,-16,qs),
(728,-4,o),
(712,6,q),
(65,6,l),
(49,-4,o),
(49,-16,qs),
(50,-27,o),
(64,-34,q),
(713,-34,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 108 values pushed */
46 1 1 3 97 1 9 7 105 100 2 15 14 3 76 16 6 4 3 3 0 1 5 3 1 105 0 5 2 1 0 7 5 0 105 12 11 2 7 0 9 13 7 9 105 0 13 10 1 8 14 13 8 105 0 14 15 15 14 87 0 14 14 15 95 17 1 15 14 15 79 98 98 0 0 98 107 98 107 103 102 94 91 86 84 82 81 74 72 68 65 58 56 51 50 0 49 0 48 53 34 23 36 55 37 18 6 28 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni224A;
unicode = 8778;
},
{
glyphname = uni224E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(268,327,l),
(281,334,o),
(283,351,qs),
(286,386,o),
(305,411,qs),
(334,451,o),
(389,451,qs),
(415,451,o),
(433,443,qs),
(488,415,o),
(494,351,qs),
(496,333,o),
(509,327,q),
(608,327,ls),
(706,327,o),
(712,330,qs),
(722,335,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(532,367,l),
(526,419,o),
(447,492,o),
(392,492,qs),
(331,492,o),
(252,423,o),
(245,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(245,133,l),
(250,99,o),
(267,73,qs),
(312,8,o),
(389,8,qs),
(422,8,o),
(451,22,qs),
(521,55,o),
(532,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,164,o),
(712,170,qs),
(706,173,o),
(608,173,qs),
(509,173,l),
(496,166,o),
(494,149,qs),
(491,114,o),
(472,89,qs),
(442,49,o),
(389,49,qs),
(362,49,o),
(344,57,qs),
(289,85,o),
(283,149,qs),
(281,167,o),
(268,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
0 1 0 4 0 1 4 105 2 1 0 5 1 3 6 0 3 103 8 1 6 11 1 9 7 6 9 103 0 7 10 10 7 89 0 7 7 10 97 0 10 7 10 81 63 62 59 57 54 53 37 37 20 21 37 37 18 34 17 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni224E;
unicode = 8782;
},
{
glyphname = uni224F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(268,327,l),
(281,334,o),
(283,351,qs),
(286,386,o),
(305,411,qs),
(334,451,o),
(389,451,qs),
(415,451,o),
(433,443,qs),
(488,415,o),
(494,351,qs),
(496,333,o),
(509,327,q),
(608,327,ls),
(706,327,o),
(712,330,qs),
(722,335,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(532,367,l),
(526,419,o),
(447,492,o),
(392,492,qs),
(331,492,o),
(252,423,o),
(245,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,157,o),
(719,164,o),
(716,167,o),
(709,172,o),
(708,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 1 0 4 0 1 4 105 2 1 0 5 1 3 6 0 3 103 0 6 7 7 6 87 0 6 6 7 95 0 7 6 7 79 23 20 21 37 37 18 34 17 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni224F;
unicode = 8783;
},
{
glyphname = uni2251;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(359,609,o),
(321,572,o),
(321,510,o),
(357,474,o),
(389,474,qs),
(420,474,o),
(456,510,o),
(456,541,qs),
(456,602,o),
(391,609,q)
);
},
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(390,327,l),
(708,328,l),
(722,336,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,157,o),
(719,164,o),
(716,167,o),
(709,172,o),
(708,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
},
{
closed = 1;
nodes = (
(359,27,o),
(321,-10,o),
(321,-72,o),
(357,-108,o),
(389,-108,qs),
(420,-108,o),
(456,-72,o),
(456,-41,qs),
(456,20,o),
(391,27,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
0 1 0 0 2 1 0 105 0 2 0 3 4 2 3 103 0 4 0 5 7 4 5 103 0 7 6 6 7 89 0 7 7 6 97 0 6 7 6 81 19 38 23 20 36 18 19 35 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2251;
unicode = 8785;
},
{
glyphname = uni2252;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(135,566,o),
(100,601,o),
(50,601,o),
(15,566,o),
(15,516,o),
(50,481,o),
(100,481,o),
(135,516,o)
);
},
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(390,327,l),
(708,328,l),
(722,336,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,157,o),
(719,164,o),
(716,167,o),
(709,172,o),
(708,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
},
{
closed = 1;
nodes = (
(642,-66,o),
(677,-101,o),
(727,-101,o),
(762,-66,o),
(762,-41,qs),
(762,-29,o),
(761,-25,qs),
(755,-7,o),
(724,19,o),
(703,19,qs),
(676,19,o),
(642,-14,o),
(642,-41,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
37 1 7 6 1 76 0 1 0 0 2 1 0 105 0 2 0 3 4 2 3 103 0 4 0 5 6 4 5 103 0 6 7 7 6 89 0 6 6 7 97 0 7 6 7 81 22 36 23 20 36 20 19 16 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2252;
unicode = 8786;
},
{
glyphname = uni2253;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(676,601,o),
(642,566,o),
(642,516,o),
(677,481,o),
(727,481,o),
(762,516,o),
(762,541,qs),
(762,565,o),
(727,601,o),
(702,601,qs)
);
},
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(390,327,l),
(708,328,l),
(722,336,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,157,o),
(719,164,o),
(716,167,o),
(709,172,o),
(708,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
},
{
closed = 1;
nodes = (
(135,-19,o),
(109,12,o),
(90,17,qs),
(74,21,o),
(59,17,qs),
(40,12,o),
(14,-19,o),
(14,-41,qs),
(14,-66,o),
(48,-102,o),
(73,-102,qs),
(99,-102,o),
(135,-67,o),
(135,-41,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
0 6 5 6 134 7 1 1 0 0 2 1 0 105 0 2 0 3 4 2 3 103 0 4 5 5 4 87 0 4 4 5 95 0 5 4 5 79 0 0 37 35 31 30 23 22 18 16 12 11 0 9 0 8 20 8 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2253;
unicode = 8787;
},
{
glyphname = uni2256;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(312,327,l),
(305,318,ls),
(281,289,o),
(281,211,o),
(305,182,qs),
(312,173,l),
(72,173,l),
(56,168,o),
(56,153,qs),
(56,140,o),
(70,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,164,o),
(712,170,qs),
(706,173,o),
(586,173,qs),
(465,173,l),
(472,182,ls),
(496,211,o),
(496,289,o),
(472,318,qs),
(465,327,l),
(586,327,ls),
(706,327,o),
(712,330,qs),
(722,335,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(304,202,o),
(304,298,o),
(349,327,q),
(428,327,l),
(473,298,o),
(473,202,o),
(428,173,q),
(349,173,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
0 0 6 5 2 1 2 0 1 103 8 7 4 3 2 3 3 2 87 8 7 4 3 2 2 3 95 0 3 2 3 79 36 36 36 43 36 43 22 21 20 21 37 37 17 9 6 29 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2256;
unicode = 8790;
},
{
glyphname = uni2257;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(498,657,o),
(433,721,o),
(343,721,o),
(279,659,o),
(279,612,qs),
(279,584,o),
(307,534,o),
(327,521,qs),
(354,503,o),
(389,503,qs),
(436,503,o),
(498,566,o),
(498,612,qs)
);
},
{
closed = 1;
nodes = (
(458,574,o),
(428,543,o),
(350,543,o),
(320,572,o),
(320,611,qs),
(320,633,o),
(321,639,qs),
(331,680,o),
(383,680,qs),
(409,680,o),
(415,679,qs),
(458,668,o),
(458,614,qs)
);
},
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(390,327,l),
(708,328,l),
(722,336,o),
(722,347,qs),
(722,360,o),
(707,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(707,133,l),
(722,140,o),
(722,153,qs),
(722,157,o),
(719,164,o),
(716,167,o),
(709,172,o),
(708,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
18 1 3 2 1 76 0 1 0 2 3 1 2 105 0 3 0 0 4 3 0 105 0 4 0 5 6 4 5 103 0 6 7 7 6 87 0 6 6 7 95 0 7 6 7 79 23 20 36 20 21 52 22 33 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2257;
unicode = 8791;
},
{
glyphname = uni225C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(603,489,o),
(603,501,qs),
(603,506,o),
(600,512,qs),
(594,523,o),
(405,851,o),
(403,853,qs),
(395,861,o),
(383,857,q),
(379,857,o),
(375,853,qs),
(373,851,o),
(184,523,o),
(178,512,qs),
(175,506,o),
(175,501,qs),
(175,487,o),
(192,482,q),
(587,482,l)
);
},
{
closed = 1;
nodes = (
(548,522,o),
(230,522,o),
(230,524,o),
(388,798,o),
(389,798,q),
(548,523,l)
);
},
{
closed = 1;
nodes = (
(56,332,o),
(72,327,q),
(390,327,l),
(709,328,l),
(723,336,o),
(723,347,qs),
(723,360,o),
(708,367,q),
(70,367,l),
(56,360,o),
(56,347,qs)
);
},
{
closed = 1;
nodes = (
(56,140,o),
(70,133,q),
(708,133,l),
(723,140,o),
(723,153,qs),
(723,157,o),
(720,164,o),
(717,167,o),
(710,172,o),
(709,173,q),
(72,173,l),
(56,168,o),
(56,153,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
2 1 0 1 1 76 0 1 6 1 0 2 1 0 103 0 2 0 3 4 2 3 103 0 4 5 5 4 87 0 4 4 5 95 0 5 4 5 79 0 0 46 45 38 37 33 31 27 26 23 21 0 18 0 18 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni225C;
unicode = 8796;
},
{
glyphname = uni2266;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,749,o),
(104,486,o),
(96,482,qs),
(84,476,o),
(83,465,qs),
(83,453,o),
(90,448,qs),
(92,446,o),
(382,309,qs),
(670,173,l),
(676,173,ls),
(694,175,o),
(694,193,qs),
(694,198,o),
(691,204,q),
(687,209,o),
(399,345,qs),
(263,410,o),
(151,463,q),
(315,541,o),
(604,678,o),
(686,717,o),
(687,718,qs),
(694,724,o),
(694,740,o),
(683,753,o),
(674,753,qs),
(671,753,o),
(665,751,qs)
);
},
{
closed = 1;
nodes = (
(84,26,o),
(98,19,q),
(679,19,l),
(694,26,o),
(694,52,o),
(678,59,q),
(99,59,l),
(84,50,o),
(84,39,qs)
);
},
{
closed = 1;
nodes = (
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(678,-135,q),
(99,-135,l),
(83,-145,o),
(83,-157,qs),
(84,-168,o),
(98,-175,q),
(679,-175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
23 9 2 1 0 40 1 4 3 2 76 0 0 1 0 133 0 1 0 2 3 1 2 103 0 3 4 4 3 87 0 3 3 4 95 5 1 4 3 4 79 38 38 38 47 38 47 43 42 35 34 31 30 32 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2266;
unicode = 8806;
},
{
glyphname = uni2267;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,725,o),
(90,718,q),
(626,463,l),
(378,345,ls),
(90,209,o),
(86,204,q),
(83,198,o),
(83,193,qs),
(83,175,o),
(101,173,qs),
(107,173,l),
(395,309,ls),
(685,446,o),
(687,448,qs),
(694,453,o),
(694,473,o),
(687,478,qs),
(686,479,o),
(400,616,o),
(107,753,o),
(99,753,qs),
(92,753,o),
(83,740,o),
(83,734,qs)
);
},
{
closed = 1;
nodes = (
(84,26,o),
(98,19,q),
(679,19,l),
(694,26,o),
(694,52,o),
(678,59,q),
(99,59,l),
(84,50,o),
(84,39,qs)
);
},
{
closed = 1;
nodes = (
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(678,-135,q),
(99,-135,l),
(83,-145,o),
(83,-157,qs),
(84,-168,o),
(98,-175,q),
(679,-175,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
23 20 15 3 1 0 35 1 4 3 2 76 0 0 1 0 133 0 1 0 2 3 1 2 103 0 3 4 4 3 87 0 3 3 4 95 5 1 4 3 4 79 33 33 33 42 33 42 38 37 30 29 26 25 33 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2267;
unicode = 8807;
},
{
glyphname = uni2268;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,749,o),
(104,486,o),
(96,482,qs),
(84,476,o),
(83,465,qs),
(83,453,o),
(90,448,qs),
(92,446,o),
(382,309,qs),
(670,173,l),
(676,173,ls),
(694,175,o),
(694,193,qs),
(694,198,o),
(691,204,q),
(687,209,o),
(399,345,qs),
(263,410,o),
(151,463,q),
(315,541,o),
(604,678,o),
(686,717,o),
(687,718,qs),
(694,724,o),
(694,740,o),
(683,753,o),
(674,753,qs),
(671,753,o),
(665,751,qs)
);
},
{
closed = 1;
nodes = (
(83,-161,o),
(96,-174,q),
(172,-175,l),
(249,-175,l),
(215,-210,l),
(180,-249,l),
(178,-255,o),
(178,-257,qs),
(178,-265,o),
(190,-277,o),
(198,-277,qs),
(203,-277,o),
(209,-274,q),
(259,-224,l),
(305,-175,l),
(679,-175,l),
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(680,-135,q),
(511,-135,l),
(343,-134,l),
(490,19,l),
(679,19,l),
(694,26,o),
(694,39,qs),
(694,43,o),
(691,50,o),
(688,53,o),
(681,58,o),
(680,59,q),
(604,59,l),
(528,60,l),
(562,94,l),
(597,133,l),
(599,139,o),
(599,141,qs),
(599,149,o),
(586,161,o),
(578,161,qs),
(574,161,l),
(568,158,ls),
(566,157,o),
(519,108,qs),
(473,59,l),
(99,59,l),
(83,49,o),
(83,29,o),
(96,20,q),
(265,19,l),
(434,19,l),
(410,-7,o),
(313,-110,o),
(288,-135,q),
(99,-135,l),
(83,-144,o),
(83,-155,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 7 values pushed */
23 9 2 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 4 0 133 0 4 3 3 4 112 0 9 8 8 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 8 8 1 87 7 1 1 1 8 95 10 1 8 1 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 4 0 133 0 4 3 4 133 0 9 8 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 8 8 1 87 7 1 1 1 8 95 10 1 8 1 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
83 81 75 73 70 69 65 63 62 61 54 52 46 44 40 39 36 34 31 30 32 11 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2268;
unicode = 8808;
},
{
glyphname = uni2269;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,725,o),
(90,718,q),
(626,463,l),
(378,345,ls),
(90,209,o),
(86,204,q),
(83,198,o),
(83,193,qs),
(83,175,o),
(101,173,qs),
(107,173,l),
(395,309,ls),
(685,446,o),
(687,448,qs),
(694,453,o),
(694,473,o),
(687,478,qs),
(686,479,o),
(400,616,o),
(107,753,o),
(99,753,qs),
(92,753,o),
(83,740,o),
(83,734,qs)
);
},
{
closed = 1;
nodes = (
(83,-161,o),
(96,-174,q),
(172,-175,l),
(249,-175,l),
(215,-210,l),
(180,-249,l),
(178,-255,o),
(178,-257,qs),
(178,-265,o),
(190,-277,o),
(198,-277,qs),
(203,-277,o),
(209,-274,q),
(259,-224,l),
(305,-175,l),
(679,-175,l),
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(680,-135,q),
(511,-135,l),
(343,-134,l),
(490,19,l),
(679,19,l),
(694,26,o),
(694,39,qs),
(694,43,o),
(691,50,o),
(688,53,o),
(681,58,o),
(680,59,q),
(604,59,l),
(528,60,l),
(562,94,l),
(597,133,l),
(599,139,o),
(599,141,qs),
(599,149,o),
(586,161,o),
(578,161,qs),
(574,161,l),
(568,158,ls),
(566,157,o),
(519,108,qs),
(473,59,l),
(99,59,l),
(83,49,o),
(83,29,o),
(96,20,q),
(265,19,l),
(434,19,l),
(410,-7,o),
(313,-110,o),
(288,-135,q),
(99,-135,l),
(83,-144,o),
(83,-155,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
23 20 15 3 4 0 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 0 4 0 133 0 4 3 3 4 112 0 9 8 8 9 113 5 1 3 6 1 2 1 3 2 104 7 1 1 8 8 1 87 7 1 1 1 8 95 10 1 8 1 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 0 4 0 133 0 4 3 4 133 0 9 8 9 134 5 1 3 6 1 2 1 3 2 104 7 1 1 8 8 1 87 7 1 1 1 8 95 10 1 8 1 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
78 76 70 68 65 64 60 58 57 56 49 47 41 39 35 34 31 29 26 25 33 11 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2269;
unicode = 8809;
},
{
glyphname = uni226C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(104,719,o),
(121,709,qs),
(157,684,o),
(177,668,qs),
(209,641,o),
(216,632,qs),
(219,628,o),
(217,625,o),
(206,612,qs),
(89,473,o),
(75,290,qs),
(75,286,o),
(74,258,o),
(74,242,o),
(75,215,o),
(75,211,qs),
(89,27,o),
(206,-112,qs),
(217,-125,o),
(219,-128,o),
(216,-132,qs),
(209,-141,o),
(177,-168,qs),
(157,-184,o),
(121,-209,qs),
(104,-219,o),
(104,-230,qs),
(104,-238,o),
(116,-250,o),
(124,-250,qs),
(129,-250,o),
(162,-230,qs),
(201,-204,o),
(238,-170,qs),
(250,-159,l),
(262,-171,ls),
(304,-208,o),
(337,-230,qs),
(368,-250,o),
(375,-250,qs),
(383,-250,o),
(395,-238,o),
(395,-230,qs),
(395,-219,o),
(379,-209,qs),
(347,-188,o),
(322,-168,qs),
(290,-141,o),
(283,-132,qs),
(280,-128,o),
(282,-125,o),
(293,-112,qs),
(410,27,o),
(424,211,qs),
(424,215,o),
(425,242,o),
(425,258,o),
(424,286,o),
(424,290,qs),
(410,473,o),
(293,612,qs),
(282,625,o),
(280,628,o),
(283,632,qs),
(290,641,o),
(322,668,qs),
(347,688,o),
(379,709,qs),
(395,719,o),
(395,730,qs),
(395,738,o),
(383,750,o),
(375,750,qs),
(370,750,o),
(337,730,qs),
(298,704,o),
(261,670,qs),
(250,659,l),
(237,671,ls),
(186,717,o),
(138,745,qs),
(131,749,o),
(123,749,qs),
(104,749,o),
(104,730,qs)
);
},
{
closed = 1;
nodes = (
(212,-44,o),
(192,-1,qs),
(134,113,o),
(134,250,qs),
(134,283,o),
(136,301,qs),
(151,462,o),
(242,583,q),
(249,594,l),
(250,592,o),
(260,580,o),
(265,574,q),
(364,427,o),
(364,250,qs),
(364,59,o),
(249,-94,q),
(242,-83,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
68 63 49 41 25 20 6 7 2 0 1 76 1 1 0 2 0 133 3 1 2 2 118 55 53 45 43 41 16 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni226C;
unicode = 8812;
},
{
glyphname = uni226E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(147,-197,o),
(155,-203,qs),
(162,-207,o),
(178,-204,o),
(182,-198,qs),
(184,-196,o),
(263,-40,o),
(342,114,o),
(344,114,o),
(668,-40,o),
(677,-40,qs),
(684,-40,o),
(694,-25,o),
(694,-19,qs),
(694,-11,o),
(687,-5,qs),
(685,-3,o),
(522,74,qs),
(360,150,l),
(383,195,ls),
(387,204,o),
(435,299,o),
(449,326,qs),
(493,413,l),
(588,457,ls),
(685,503,o),
(687,505,qs),
(693,511,o),
(693,523,qs),
(693,540,o),
(677,540,qs),
(671,540,o),
(598,506,qs),
(582,499,o),
(543,480,o),
(534,476,qs),
(524,471,l),
(630,683,o),
(630,686,qs),
(630,704,o),
(612,706,qs),
(599,706,o),
(595,699,q),
(593,697,o),
(466,445,o),
(464,443,qs),
(463,442,o),
(93,268,o),
(90,265,qs),
(83,260,o),
(83,240,o),
(90,235,qs),
(92,234,o),
(305,131,q),
(305,130,o),
(147,-180,o),
(147,-186,qs)
);
},
{
closed = 1;
nodes = (
(320,169,o),
(151,249,o),
(151,250,q),
(160,254,o),
(231,288,o),
(360,350,o),
(435,385,q),
(371,259,o),
(323,168,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 38 values pushed */
17 1 1 0 62 58 37 19 4 2 1 2 76 56 1 2 73 0 0 1 0 133 0 1 2 1 133 0 2 2 118 46 44 41 30 3 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni226E;
unicode = 8814;
},
{
glyphname = uni226F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(630,704,o),
(612,706,qs),
(602,706,o),
(594,698,q),
(585,680,o),
(435,386,o),
(434,386,q),
(414,396,ls),
(393,405,o),
(307,446,o),
(270,463,qs),
(107,540,l),
(101,540,ls),
(83,538,o),
(83,520,qs),
(83,515,o),
(86,509,q),
(90,504,o),
(274,417,qs),
(417,350,l),
(394,306,l),
(328,174,l),
(284,87,l),
(208,52,ls),
(90,-4,o),
(86,-9,q),
(83,-15,o),
(83,-20,qs),
(83,-38,o),
(101,-40,qs),
(107,-40,o),
(179,-6,qs),
(195,1,o),
(234,20,o),
(244,24,qs),
(253,29,l),
(147,-183,o),
(147,-186,qs),
(147,-197,o),
(155,-203,qs),
(161,-207,o),
(178,-204,o),
(182,-199,qs),
(184,-197,o),
(311,55,o),
(313,57,qs),
(314,58,o),
(684,232,o),
(687,235,qs),
(694,240,o),
(694,260,o),
(687,265,qs),
(685,266,o),
(472,369,q),
(472,370,o),
(630,680,o),
(630,686,qs)
);
},
{
closed = 1;
nodes = (
(485,182,o),
(344,116,o),
(344,118,o),
(359,148,qs),
(452,332,o),
(454,332,q),
(456,330,o),
(489,315,o),
(576,275,o),
(626,250,q),
(556,216,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 18 values pushed */
56 49 36 28 20 18 6 0 73 0 0 0 118 54 53 1 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni226F;
unicode = 8815;
},
{
glyphname = uni2270;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(669,57,o),
(674,57,qs),
(683,57,o),
(694,69,o),
(694,85,o),
(687,91,q),
(686,93,o),
(543,161,o),
(401,227,o),
(401,228,q),
(462,376,l),
(524,524,l),
(585,552,ls),
(684,599,o),
(688,602,qs),
(694,608,o),
(694,616,qs),
(694,631,o),
(679,636,q),
(671,636,ls),
(670,636,o),
(552,581,o),
(548,579,q),
(560,608,ls),
(571,637,o),
(607,723,o),
(624,764,o),
(629,777,qs),
(630,779,o),
(630,784,qs),
(630,792,o),
(618,802,o),
(610,802,qs),
(597,802,o),
(593,792,qs),
(592,790,o),
(493,554,o),
(493,553,q),
(492,553,o),
(91,362,o),
(90,361,qs),
(75,348,o),
(88,333,qs),
(92,329,o),
(222,268,o),
(348,209,o),
(348,208,q),
(349,208,o),
(312,119,o),
(286,55,qs),
(223,-97,l),
(162,-97,ls),
(112,-97,o),
(93,-99,o),
(89,-103,qs),
(83,-109,o),
(83,-117,qs),
(83,-129,o),
(94,-135,qs),
(98,-137,o),
(152,-137,qs),
(205,-137,o),
(205,-139,q),
(147,-280,l),
(145,-289,o),
(159,-303,o),
(167,-303,qs),
(174,-303,o),
(181,-296,qs),
(183,-294,o),
(222,-202,qs),
(249,-137,l),
(465,-137,ls),
(678,-137,o),
(684,-135,q),
(694,-128,o),
(694,-117,qs),
(694,-109,o),
(688,-103,qs),
(683,-98,o),
(636,-97,o),
(470,-97,qs),
(266,-97,o),
(266,-96,q),
(267,-95,o),
(320,33,o),
(379,176,o),
(386,191,q),
(527,124,ls)
);
},
{
closed = 1;
nodes = (
(151,347,o),
(310,422,qs),
(470,498,l),
(418,372,ls),
(365,247,o),
(365,245,q),
(150,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
92 78 71 65 4 7 6 31 1 1 0 2 76 0 5 6 5 133 0 6 7 6 133 0 7 0 7 133 0 2 1 2 134 4 1 0 1 1 0 89 4 1 0 0 1 97 3 1 1 0 1 81 86 85 69 67 55 54 39 51 36 53 83 8 6 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2270;
unicode = 8816;
},
{
glyphname = uni2271;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,637,o),
(83,624,o),
(83,617,qs),
(83,604,o),
(97,598,q),
(106,592,o),
(443,434,q),
(443,433,o),
(354,219,o),
(353,217,q),
(352,217,o),
(91,93,o),
(90,91,q),
(83,85,o),
(83,69,o),
(94,57,o),
(103,57,qs),
(108,57,o),
(330,162,q),
(330,160,o),
(276,32,qs),
(223,-97,l),
(162,-97,ls),
(112,-97,o),
(93,-99,o),
(89,-103,qs),
(83,-109,o),
(83,-117,qs),
(83,-129,o),
(94,-135,qs),
(98,-137,o),
(152,-137,qs),
(205,-137,o),
(205,-139,q),
(147,-280,l),
(145,-289,o),
(159,-303,o),
(167,-303,qs),
(174,-303,o),
(181,-296,qs),
(183,-294,o),
(222,-202,qs),
(249,-137,l),
(465,-137,ls),
(678,-137,o),
(684,-135,q),
(694,-128,o),
(694,-117,qs),
(694,-109,o),
(688,-103,qs),
(683,-98,o),
(636,-97,o),
(470,-97,qs),
(266,-97,o),
(266,-95,q),
(274,-77,ls),
(281,-59,o),
(312,15,o),
(326,47,qs),
(384,188,l),
(515,249,ls),
(681,328,o),
(688,332,q),
(694,338,o),
(694,356,o),
(687,361,q),
(687,362,o),
(648,381,o),
(592,408,o),
(536,434,o),
(516,444,qs),
(496,453,l),
(495,453,o),
(534,548,o),
(593,690,o),
(621,757,o),
(630,778,qs),
(631,780,o),
(631,783,qs),
(631,792,o),
(618,803,o),
(611,803,qs),
(602,803,o),
(596,797,qs),
(593,794,o),
(520,619,qs),
(459,470,l),
(448,478,o),
(109,637,o),
(102,637,qs)
);
},
{
closed = 1;
nodes = (
(626,345,o),
(408,243,q),
(407,244,o),
(479,416,o),
(480,416,q),
(627,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
10 1 7 0 86 2 2 6 7 61 1 2 1 3 76 0 0 7 0 133 8 1 7 6 7 133 0 6 1 6 133 0 3 2 3 134 5 1 1 2 2 1 89 5 1 1 1 2 97 4 1 2 1 2 81 0 0 0 89 0 88 73 71 67 65 58 55 52 50 46 43 38 34 22 9 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2271;
unicode = 8817;
},
{
glyphname = uni2272;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,728,o),
(104,465,o),
(96,461,qs),
(84,455,o),
(83,444,qs),
(83,432,o),
(90,427,qs),
(92,425,o),
(382,288,qs),
(670,152,l),
(676,152,ls),
(694,154,o),
(694,172,qs),
(694,177,o),
(691,183,q),
(687,188,o),
(399,324,qs),
(263,389,o),
(151,442,q),
(315,520,o),
(604,657,o),
(686,696,o),
(687,697,qs),
(694,703,o),
(694,719,o),
(683,732,o),
(674,732,qs),
(671,732,o),
(665,730,qs)
);
},
{
closed = 1;
nodes = (
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(223,-51,qs),
(265,-51,o),
(304,-75,qs),
(328,-89,o),
(382,-136,qs),
(432,-181,o),
(464,-200,qs),
(507,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs),
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(554,-171,qs),
(512,-171,o),
(473,-147,qs),
(449,-133,o),
(395,-86,qs),
(365,-59,o),
(333,-33,o),
(279,-3,o),
(253,3,qs),
(241,6,o),
(222,6,qs),
(211,6,o),
(201,4,qs),
(140,-6,o),
(56,-115,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
23 9 2 1 0 1 76 0 0 1 0 133 3 1 1 0 5 2 1 5 105 0 2 4 4 2 89 0 2 2 4 97 7 6 2 4 2 4 81 29 29 29 75 29 74 69 67 61 58 54 52 47 45 37 35 32 8 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2272;
unicode = 8818;
},
{
glyphname = uni2273;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,704,o),
(90,697,q),
(626,442,l),
(378,324,ls),
(90,188,o),
(86,183,q),
(83,177,o),
(83,172,qs),
(83,154,o),
(101,152,qs),
(107,152,l),
(395,288,ls),
(685,425,o),
(687,427,qs),
(694,432,o),
(694,452,o),
(687,457,qs),
(686,458,o),
(400,595,o),
(107,732,o),
(99,732,qs),
(92,732,o),
(83,719,o),
(83,713,qs)
);
},
{
closed = 1;
nodes = (
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(223,-51,qs),
(265,-51,o),
(304,-75,qs),
(328,-89,o),
(382,-136,qs),
(432,-181,o),
(464,-200,qs),
(507,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs),
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(554,-171,qs),
(512,-171,o),
(473,-147,qs),
(449,-133,o),
(395,-86,qs),
(365,-59,o),
(333,-33,o),
(279,-3,o),
(253,3,qs),
(241,6,o),
(222,6,qs),
(211,6,o),
(201,4,qs),
(140,-6,o),
(56,-115,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
23 20 15 3 1 0 1 76 0 0 1 0 133 3 1 1 0 5 2 1 5 105 0 2 4 4 2 89 0 2 2 4 97 7 6 2 4 2 4 81 24 24 24 70 24 69 64 62 56 53 49 47 42 40 32 30 33 8 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2273;
unicode = 8819;
},
{
glyphname = uni2276;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(734,192,o),
(723,198,q),
(722,199,o),
(592,247,o),
(279,362,o),
(122,421,q),
(243,466,o),
(463,547,o),
(557,582,o),
(621,605,qs),
(722,643,o),
(723,644,q),
(734,650,o),
(734,661,qs),
(734,668,o),
(722,681,o),
(714,681,qs),
(710,681,o),
(66,443,o),
(52,437,q),
(44,432,o),
(44,422,qs),
(44,408,o),
(54,404,qs),
(61,400,o),
(711,161,o),
(714,161,qs),
(722,161,o),
(734,174,o),
(734,181,qs)
);
},
{
closed = 1;
nodes = (
(44,236,o),
(54,230,q),
(55,229,o),
(185,181,o),
(498,66,o),
(655,7,q),
(390,-91,o),
(156,-177,qs),
(55,-215,o),
(54,-216,q),
(44,-222,o),
(44,-233,qs),
(44,-240,o),
(55,-253,o),
(63,-253,qs),
(66,-253,o),
(716,-14,o),
(723,-10,qs),
(734,-4,o),
(734,18,o),
(723,24,qs),
(716,28,o),
(66,267,o),
(63,267,qs),
(55,267,o),
(44,254,o),
(44,247,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
23 1 2 1 56 29 2 0 2 50 1 3 0 3 76 0 1 2 1 133 0 2 0 2 133 0 0 3 0 133 0 3 3 118 42 40 33 31 40 33 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2276;
unicode = 8822;
},
{
glyphname = uni2277;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,642,o),
(621,421,q),
(131,211,o),
(95,199,q),
(84,194,o),
(84,180,qs),
(84,162,o),
(101,161,qs),
(106,161,o),
(399,283,o),
(686,405,o),
(687,406,qs),
(694,411,o),
(694,431,o),
(687,436,qs),
(684,439,o),
(114,678,o),
(104,681,q),
(83,681,o),
(83,662,qs),
(83,653,o),
(90,646,qs)
);
},
{
closed = 1;
nodes = (
(659,263,o),
(97,25,o),
(94,24,qs),
(83,19,o),
(83,7,qs),
(83,-1,o),
(90,-8,qs),
(91,-9,o),
(378,-131,o),
(670,-253,o),
(676,-253,qs),
(694,-251,o),
(694,-233,qs),
(694,-222,o),
(683,-215,q),
(680,-215,o),
(420,-105,o),
(288,-49,qs),
(156,7,l),
(684,229,o),
(687,232,qs),
(692,236,o),
(695,252,o),
(691,258,qs),
(681,271,o),
(667,266,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
19 1 1 0 1 76 28 1 1 73 0 0 1 0 133 0 1 1 118 41 18 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2277;
unicode = 8823;
},
{
glyphname = uni227C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(688,70,o),
(669,112,qs),
(617,217,o),
(465,266,qs),
(426,279,o),
(387,287,qs),
(379,288,o),
(372,290,q),
(434,302,o),
(538,340,o),
(630,402,o),
(687,494,o),
(693,552,qs),
(693,558,ls),
(693,577,o),
(675,580,q),
(656,580,o),
(653,556,qs),
(647,503,o),
(620,464,qs),
(538,342,o),
(270,317,qs),
(196,310,o),
(118,310,qs),
(98,310,o),
(94,307,qs),
(83,300,o),
(83,290,qs),
(83,277,o),
(94,273,q),
(99,270,o),
(118,270,qs),
(249,270,o),
(352,252,qs),
(631,206,o),
(653,24,qs),
(657,0,o),
(672,0,qs),
(686,0,o),
(694,17,q),
(693,28,ls)
);
},
{
closed = 1;
nodes = (
(575,-65,o),
(542,-15,qs),
(458,109,o),
(247,144,qs),
(175,156,o),
(113,156,qs),
(83,156,o),
(83,136,qs),
(83,126,o),
(93,119,qs),
(98,116,o),
(123,116,qs),
(240,113,o),
(425,53,o),
(478,0,qs),
(531,-54,o),
(542,-127,qs),
(544,-143,o),
(552,-153,o),
(563,-153,qs),
(583,-153,o),
(583,-131,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 72 values pushed */
26 1 2 3 32 1 1 2 0 1 0 5 62 1 4 0 4 76 0 3 2 3 133 0 0 5 4 5 0 4 128 0 4 4 132 0 2 0 1 6 2 1 105 0 6 5 5 6 89 0 6 6 5 97 0 5 6 5 81 57 55 51 49 43 41 22 23 36 33 7 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni227C;
unicode = 8828;
},
{
glyphname = uni227D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,541,o),
(96,500,qs),
(138,371,o),
(312,314,qs),
(351,301,o),
(390,293,qs),
(398,292,o),
(405,290,q),
(293,267,o),
(229,231,qs),
(127,176,o),
(96,80,qs),
(83,39,o),
(83,18,qs),
(83,11,o),
(96,0,o),
(103,0,qs),
(107,0,o),
(112,3,qs),
(122,8,o),
(124,27,qs),
(146,183,o),
(358,238,qs),
(469,267,o),
(664,270,qs),
(681,271,o),
(694,278,o),
(694,290,qs),
(694,295,o),
(691,301,q),
(684,308,o),
(678,310,o),
(659,310,qs),
(613,310,o),
(553,314,qs),
(271,330,o),
(173,442,qs),
(133,490,o),
(124,553,qs),
(121,580,o),
(104,580,qs),
(96,580,o),
(83,570,o),
(83,562,qs)
);
},
{
closed = 1;
nodes = (
(224,-154,o),
(233,-142,o),
(235,-127,qs),
(246,-54,o),
(299,0,qs),
(405,106,o),
(656,116,qs),
(681,117,l),
(694,128,o),
(694,137,qs),
(694,142,o),
(690,147,qs),
(685,155,o),
(661,156,qs),
(656,156,o),
(632,155,o),
(628,155,qs),
(387,143,o),
(270,27,qs),
(202,-41,o),
(194,-131,q),
(194,-150,o),
(212,-154,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 60 values pushed */
43 1 1 0 35 1 2 1 45 1 5 4 3 76 0 0 1 0 133 0 5 4 5 134 0 1 0 2 3 1 2 105 0 3 4 4 3 89 0 3 3 4 97 0 4 3 4 81 66 65 60 58 53 48 38 68 33 6 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni227D;
unicode = 8829;
},
{
glyphname = uni227E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(692,199,o),
(685,223,qs),
(653,332,o),
(533,392,q),
(495,408,o),
(472,416,qs),
(466,418,o),
(373,442,q),
(564,481,o),
(639,573,qs),
(686,629,o),
(694,708,q),
(694,729,o),
(676,732,q),
(664,732,o),
(655,720,o),
(653,705,qs),
(645,644,o),
(606,597,qs),
(521,494,o),
(281,470,qs),
(204,463,o),
(137,462,qs),
(98,462,o),
(94,460,qs),
(84,453,o),
(84,431,o),
(94,424,qs),
(98,422,o),
(137,422,qs),
(204,421,o),
(281,414,qs),
(521,390,o),
(606,287,qs),
(645,240,o),
(653,179,qs),
(655,163,o),
(663,153,o),
(674,153,qs),
(694,153,o),
(694,176,qs)
);
},
{
closed = 1;
nodes = (
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(223,-51,qs),
(265,-51,o),
(304,-75,qs),
(328,-89,o),
(382,-136,qs),
(432,-181,o),
(464,-200,qs),
(507,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs),
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(554,-171,qs),
(512,-171,o),
(473,-147,qs),
(449,-133,o),
(395,-86,qs),
(365,-59,o),
(333,-33,o),
(279,-3,o),
(253,3,qs),
(241,6,o),
(222,6,qs),
(211,6,o),
(201,4,qs),
(140,-6,o),
(56,-115,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
28 1 2 3 32 1 1 2 40 1 0 1 3 76 0 3 2 3 133 0 0 1 4 1 0 4 128 0 2 0 1 0 2 1 105 6 1 4 0 8 5 4 8 105 0 5 7 7 5 89 0 5 5 7 97 10 9 2 7 5 7 81 41 41 41 87 41 86 81 79 73 70 66 64 59 57 49 47 23 52 39 32 11 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni227E;
unicode = 8830;
},
{
glyphname = uni227F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,463,o),
(650,462,o),
(640,462,qs),
(572,463,o),
(497,470,qs),
(256,494,o),
(171,597,qs),
(132,644,o),
(124,705,qs),
(122,724,o),
(112,729,qs),
(106,732,o),
(102,732,qs),
(84,732,o),
(84,710,qs),
(84,695,o),
(92,661,q),
(125,551,o),
(245,492,qs),
(279,477,o),
(305,468,qs),
(311,466,o),
(404,442,q),
(213,403,o),
(138,311,qs),
(91,255,o),
(83,176,q),
(83,153,o),
(103,153,qs),
(114,153,o),
(122,163,o),
(124,179,qs),
(139,283,o),
(235,341,qs),
(358,416,o),
(640,422,qs),
(679,422,o),
(683,424,qs),
(694,431,o),
(694,442,qs),
(694,452,o),
(682,463,o),
(674,463,qs)
);
},
{
closed = 1;
nodes = (
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(223,-51,qs),
(265,-51,o),
(304,-75,qs),
(328,-89,o),
(382,-136,qs),
(432,-181,o),
(464,-200,qs),
(507,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs),
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(554,-171,qs),
(512,-171,o),
(473,-147,qs),
(449,-133,o),
(395,-86,qs),
(365,-59,o),
(333,-33,o),
(279,-3,o),
(253,3,qs),
(241,6,o),
(222,6,qs),
(211,6,o),
(201,4,qs),
(140,-6,o),
(56,-115,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 87 values pushed */
19 1 0 3 15 1 1 0 2 76 0 2 3 2 133 0 1 0 4 0 1 4 128 10 1 3 0 0 1 3 0 105 6 1 4 0 8 5 4 8 105 0 5 7 7 5 89 0 5 5 7 97 11 9 2 7 5 7 81 43 43 0 0 43 89 43 88 83 81 75 72 68 66 61 59 51 49 0 42 0 38 30 37 52 12 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni227F;
unicode = 8831;
},
{
glyphname = uni2280;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(174,-206,o),
(181,-199,qs),
(185,-195,o),
(286,5,qs),
(388,206,l),
(401,203,ls),
(581,161,o),
(633,55,qs),
(647,23,o),
(653,-13,q),
(653,-16,o),
(655,-24,o),
(656,-29,o),
(656,-30,q),
(661,-40,o),
(675,-40,qs),
(694,-40,o),
(694,-20,qs),
(694,-15,o),
(688,18,q),
(665,110,o),
(585,169,qs),
(500,226,o),
(407,242,q),
(411,251,l),
(416,260,l),
(431,263,l),
(483,279,o),
(493,283,qs),
(589,320,o),
(639,382,qs),
(661,408,o),
(694,486,o),
(694,520,qs),
(694,528,o),
(683,540,o),
(675,540,qs),
(671,540,o),
(669,539,qs),
(660,535,o),
(655,527,o),
(652,510,qs),
(635,381,o),
(482,322,qs),
(447,308,o),
(441,308,q),
(441,309,o),
(534,491,o),
(628,677,o),
(630,682,qs),
(631,684,o),
(631,687,qs),
(631,695,o),
(617,706,o),
(610,706,qs),
(600,706,o),
(596,699,q),
(592,695,o),
(491,495,qs),
(389,294,l),
(256,272,o),
(137,270,qs),
(98,270,o),
(94,268,qs),
(84,261,o),
(84,239,o),
(94,232,qs),
(98,230,o),
(137,230,qs),
(251,227,o),
(341,214,qs),
(344,214,o),
(346,213,q),
(347,213,o),
(289,98,o),
(247,17,qs),
(225,-27,o),
(172,-132,o),
(147,-181,o),
(147,-182,qs),
(145,-191,o),
(158,-206,o),
(167,-206,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
58 1 0 1 77 1 3 0 2 76 0 2 1 2 133 0 3 0 4 0 3 4 128 5 1 4 4 132 0 1 0 0 1 89 0 1 1 0 97 0 0 1 0 81 0 0 0 82 0 81 67 65 21 52 44 6 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2280;
unicode = 8832;
},
{
glyphname = uni2281;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,271,o),
(650,270,o),
(640,270,qs),
(563,271,o),
(492,279,qs),
(431,286,o),
(431,287,qs),
(431,290,o),
(630,680,o),
(630,682,q),
(631,684,o),
(631,687,qs),
(631,695,o),
(617,706,o),
(610,706,qs),
(600,706,o),
(596,699,q),
(594,698,o),
(396,309,qs),
(388,294,l),
(363,300,ls),
(232,334,o),
(172,403,qs),
(132,450,o),
(125,510,qs),
(122,527,o),
(117,535,o),
(108,539,qs),
(106,540,o),
(102,540,qs),
(94,540,o),
(83,528,o),
(83,520,qs),
(83,486,o),
(116,408,o),
(138,382,qs),
(205,299,o),
(351,262,qs),
(370,258,l),
(366,249,l),
(361,241,l),
(346,237,ls),
(126,179,o),
(89,18,qs),
(83,-15,o),
(83,-20,qs),
(83,-29,o),
(95,-40,o),
(111,-40,o),
(119,-34,o),
(122,-24,o),
(124,-13,qs),
(130,23,o),
(144,55,qs),
(189,144,o),
(319,187,qs),
(334,192,o),
(336,192,q),
(336,191,o),
(147,-178,o),
(147,-194,o),
(160,-206,o),
(168,-206,qs),
(175,-206,o),
(181,-199,qs),
(185,-195,o),
(286,5,qs),
(388,206,l),
(405,209,ls),
(500,227,o),
(640,230,qs),
(679,230,o),
(683,232,qs),
(694,239,o),
(694,250,qs),
(694,260,o),
(682,271,o),
(674,271,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
57 44 2 5 3 38 1 0 5 31 1 2 0 3 76 0 4 3 4 133 0 3 5 3 133 0 2 0 1 0 2 1 128 0 1 1 132 6 1 5 0 0 5 89 6 1 5 5 0 97 0 0 5 0 81 0 0 0 77 0 73 62 61 48 46 29 38 52 7 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2281;
unicode = 8833;
},
{
glyphname = uni2288;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,-137,o),
(205,-139,q),
(147,-280,l),
(145,-289,o),
(159,-303,o),
(167,-303,qs),
(174,-303,o),
(181,-296,qs),
(183,-294,o),
(222,-202,qs),
(249,-137,l),
(465,-137,l),
(681,-136,l),
(694,-127,o),
(694,-117,qs),
(694,-104,o),
(679,-97,q),
(472,-97,ls),
(266,-97,o),
(266,-95,q),
(269,-92,o),
(299,-16,qs),
(332,62,l),
(335,61,l),
(349,59,ls),
(357,58,o),
(519,57,qs),
(679,57,l),
(694,64,o),
(694,77,qs),
(694,88,o),
(681,97,q),
(521,97,ls),
(351,98,o),
(348,100,q),
(348,101,o),
(451,349,qs),
(555,597,l),
(679,597,l),
(694,604,o),
(694,630,o),
(679,637,q),
(625,637,ls),
(572,637,o),
(572,639,q),
(630,780,l),
(632,788,o),
(617,804,o),
(608,804,qs),
(601,804,o),
(596,796,q),
(594,794,o),
(555,702,qs),
(528,638,l),
(444,637,ls),
(355,636,o),
(329,631,qs),
(241,616,o),
(106,490,o),
(89,406,qs),
(84,382,o),
(84,312,o),
(89,289,qs),
(105,213,o),
(218,93,o),
(293,72,q),
(281,44,o),
(235,-69,o),
(223,-97,q),
(118,-97,l),
(104,-104,o),
(104,-130,o),
(118,-137,q),
(162,-137,ls)
);
},
{
closed = 1;
nodes = (
(511,595,o),
(309,110,o),
(308,110,q),
(306,108,o),
(280,119,qs),
(224,142,o),
(144,232,o),
(131,287,qs),
(124,313,o),
(124,381,o),
(131,407,qs),
(150,485,o),
(278,588,o),
(369,596,qs),
(374,597,o),
(511,597,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 81 values pushed */
7 1 6 5 1 76 0 2 1 2 133 0 9 8 9 134 3 1 1 13 11 2 4 5 1 4 106 0 5 0 6 0 5 6 103 7 1 0 8 8 0 87 7 1 0 0 8 95 12 10 2 8 0 8 79 74 74 0 0 74 89 74 88 0 73 0 71 68 66 36 69 36 66 19 51 36 45 19 14 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2288;
unicode = 8840;
},
{
glyphname = uni2289;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(405,597,o),
(412,596,qs),
(456,591,o),
(491,578,qs),
(501,574,o),
(501,572,qs),
(501,571,o),
(475,510,o),
(425,390,o),
(402,334,qs),
(303,98,l),
(200,97,l),
(96,97,l),
(83,88,o),
(83,77,qs),
(83,64,o),
(98,57,q),
(192,57,ls),
(286,57,o),
(286,55,q),
(285,54,o),
(254,-22,qs),
(223,-97,l),
(98,-97,l),
(84,-104,o),
(84,-130,o),
(98,-137,q),
(152,-137,ls),
(205,-137,o),
(205,-139,q),
(147,-280,l),
(145,-289,o),
(159,-303,o),
(167,-303,qs),
(174,-303,o),
(181,-296,qs),
(183,-294,o),
(222,-202,qs),
(249,-137,l),
(455,-137,l),
(661,-136,l),
(674,-127,o),
(674,-117,qs),
(674,-104,o),
(659,-97,q),
(462,-97,ls),
(266,-97,o),
(266,-96,q),
(298,-19,l),
(330,57,l),
(373,57,ls),
(428,58,o),
(453,64,qs),
(539,81,o),
(671,205,o),
(688,289,qs),
(693,312,o),
(693,347,qs),
(693,393,o),
(682,427,qs),
(652,527,o),
(564,584,qs),
(558,588,o),
(553,592,q),
(553,594,o),
(591,683,qs),
(631,781,o),
(631,783,qs),
(631,791,o),
(619,803,o),
(611,803,qs),
(598,803,o),
(593,792,qs),
(592,789,o),
(518,612,o),
(517,610,q),
(487,624,o),
(439,633,qs),
(414,637,o),
(251,637,qs),
(98,637,l),
(84,630,o),
(84,604,o),
(98,597,q),
(249,597,ls)
);
},
{
closed = 1;
nodes = (
(538,554,o),
(544,550,qs),
(624,495,o),
(646,407,qs),
(653,381,o),
(653,313,o),
(646,287,qs),
(623,195,o),
(536,138,q),
(469,99,o),
(381,97,qs),
(347,97,o),
(347,99,q),
(348,100,o),
(441,323,o),
(535,550,o),
(537,554,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 83 values pushed */
8 1 10 0 1 76 0 1 0 1 133 0 5 4 5 134 0 0 12 1 10 9 0 10 103 11 1 9 8 1 2 3 9 2 105 7 1 3 4 4 3 87 7 1 3 3 4 95 6 1 4 3 4 79 0 0 91 90 0 84 0 82 73 71 67 63 61 60 57 54 51 49 45 43 39 36 34 32 23 35 13 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2289;
unicode = 8841;
},
{
glyphname = uni228A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,311,o),
(89,288,qs),
(108,195,o),
(261,67,o),
(362,57,qs),
(369,56,o),
(526,56,qs),
(679,56,l),
(694,63,o),
(694,76,qs),
(694,87,o),
(681,96,q),
(522,96,ls),
(384,97,o),
(348,98,o),
(328,103,qs),
(299,109,o),
(266,124,qs),
(211,152,o),
(135,249,o),
(125,312,qs),
(124,320,o),
(124,346,qs),
(124,373,o),
(125,381,qs),
(138,461,o),
(248,570,o),
(329,590,qs),
(336,591,o),
(337,592,q),
(354,595,o),
(522,596,qs),
(681,597,l),
(694,606,o),
(694,616,qs),
(694,629,o),
(679,636,q),
(524,636,ls),
(500,636,o),
(450,636,o),
(411,636,o),
(380,635,o),
(361,635,o),
(360,635,qs),
(245,623,o),
(84,465,o),
(84,346,qs)
);
},
{
closed = 1;
nodes = (
(103,-128,o),
(116,-137,q),
(226,-138,l),
(336,-138,l),
(301,-170,ls),
(282,-187,o),
(265,-204,q),
(262,-210,o),
(262,-215,qs),
(262,-223,o),
(274,-235,o),
(282,-235,qs),
(284,-235,o),
(290,-233,qs),
(294,-231,o),
(345,-185,qs),
(396,-138,l),
(679,-138,l),
(694,-131,o),
(694,-118,qs),
(694,-107,o),
(681,-98,q),
(561,-98,l),
(441,-97,l),
(476,-66,ls),
(510,-35,o),
(513,-30,qs),
(515,-27,o),
(515,-21,qs),
(515,-13,o),
(504,-1,o),
(496,-1,qs),
(494,-1,o),
(488,-3,qs),
(484,-4,o),
(432,-51,qs),
(381,-98,l),
(118,-98,l),
(103,-105,o),
(103,-118,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 4 5 114 0 8 7 7 8 113 0 0 0 1 2 0 1 103 0 2 0 3 5 2 3 103 6 1 4 7 7 4 87 6 1 4 4 7 96 9 1 7 4 7 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 3 4 3 5 4 128 0 8 7 8 134 0 0 0 1 2 0 1 103 0 2 0 3 5 2 3 103 6 1 4 7 7 4 87 6 1 4 4 7 96 9 1 7 4 7 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
84 82 75 73 69 68 64 62 55 53 49 48 40 38 34 31 36 114 10 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni228A;
unicode = 8842;
},
{
glyphname = uni228B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,606,o),
(96,597,q),
(255,596,ls),
(393,595,o),
(429,594,o),
(449,589,qs),
(477,583,o),
(512,568,q),
(567,540,o),
(642,443,o),
(652,381,qs),
(654,365,o),
(654,346,qs),
(654,328,o),
(652,312,qs),
(642,250,o),
(567,152,o),
(512,124,qs),
(480,110,o),
(448,102,qs),
(447,102,l),
(446,102,ls),
(425,97,o),
(318,96,qs),
(317,96,l),
(316,96,l),
(315,96,l),
(314,96,l),
(313,96,l),
(312,96,l),
(311,96,l),
(310,96,l),
(309,96,l),
(308,96,l),
(307,96,l),
(306,96,l),
(305,96,l),
(304,96,l),
(302,96,l),
(301,96,l),
(300,96,l),
(299,96,l),
(298,96,l),
(297,96,l),
(296,96,l),
(295,96,l),
(294,96,l),
(293,96,l),
(292,96,l),
(291,96,l),
(290,96,l),
(289,96,l),
(288,96,l),
(286,96,l),
(285,96,l),
(284,96,l),
(283,96,l),
(282,96,l),
(281,96,l),
(280,96,l),
(279,96,l),
(278,96,l),
(277,96,l),
(275,96,l),
(274,96,l),
(273,96,l),
(272,96,l),
(271,96,l),
(270,96,l),
(269,96,l),
(268,96,l),
(266,96,l),
(265,96,l),
(264,96,l),
(263,96,l),
(262,96,l),
(261,96,l),
(260,96,l),
(258,96,l),
(257,96,l),
(256,96,l),
(255,96,l),
(96,96,l),
(83,87,o),
(83,76,qs),
(83,63,o),
(98,56,q),
(251,56,ls),
(407,56,o),
(415,57,qs),
(515,65,o),
(669,195,o),
(688,288,qs),
(693,311,o),
(693,381,o),
(688,405,qs),
(669,498,o),
(516,625,o),
(415,635,qs),
(408,636,o),
(251,636,qs),
(98,636,l),
(83,629,o),
(83,616,qs)
);
},
{
closed = 1;
nodes = (
(83,-128,o),
(96,-137,q),
(220,-138,l),
(343,-138,l),
(315,-170,ls),
(281,-209,o),
(281,-215,qs),
(281,-224,o),
(294,-235,o),
(301,-235,qs),
(310,-235,o),
(324,-221,o),
(359,-181,qs),
(398,-138,l),
(659,-138,l),
(674,-131,o),
(674,-118,qs),
(674,-107,o),
(661,-98,q),
(547,-98,l),
(434,-97,l),
(464,-65,ls),
(493,-32,o),
(495,-26,q),
(495,-25,o),
(496,-22,o),
(496,-21,qs),
(496,-13,o),
(484,-1,o),
(476,-1,qs),
(473,-1,o),
(467,-3,qs),
(462,-5,o),
(415,-59,qs),
(380,-98,l),
(98,-98,l),
(83,-105,o),
(83,-118,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
134 1 8 7 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 5 1 4 4 5 114 0 8 7 7 8 113 0 0 0 3 2 0 3 103 0 2 0 1 5 2 1 103 6 1 4 7 7 4 87 6 1 4 4 7 96 9 1 7 4 7 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 5 1 4 1 5 4 128 0 8 7 8 134 0 0 0 3 2 0 3 103 0 2 0 1 5 2 1 103 6 1 4 7 7 4 87 6 1 4 4 7 96 9 1 7 4 7 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
139 137 131 130 127 126 122 120 112 110 106 105 101 98 80 20 43 33 10 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni228B;
unicode = 8843;
},
{
glyphname = uni228F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,-28,l),
(93,-39,o),
(98,-41,q),
(679,-41,l),
(694,-34,o),
(694,-8,o),
(678,-1,q),
(123,-1,l),
(123,499,l),
(679,499,l),
(694,506,o),
(694,532,o),
(679,539,q),
(99,539,l),
(87,535,o),
(83,523,q),
(83,247,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
0 1 1 0 15 1 3 2 2 76 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 19 17 19 18 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni228F;
unicode = 8847;
},
{
glyphname = uni2290;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(674,-1,l),
(80,-1,l),
(64,-6,o),
(64,-21,qs),
(64,-34,o),
(78,-41,q),
(699,-41,l),
(706,-38,o),
(714,-28,q),
(714,526,l),
(706,536,o),
(699,539,q),
(78,539,l),
(64,532,o),
(64,506,o),
(78,499,q),
(674,499,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
6 1 3 0 7 1 1 2 2 76 0 0 4 1 3 2 0 3 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 0 0 0 16 0 16 20 21 19 5 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2290;
unicode = 8848;
},
{
glyphname = uni229A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,538,o),
(148,480,qs),
(78,407,o),
(61,308,qs),
(57,286,o),
(57,214,o),
(61,192,qs),
(78,96,o),
(214,-50,o),
(308,-73,qs),
(344,-82,o),
(389,-82,qs),
(425,-82,o),
(447,-78,qs),
(554,-59,o),
(630,20,qs),
(700,93,o),
(717,192,qs),
(721,214,o),
(721,286,o),
(717,308,qs),
(696,425,o),
(610,500,qs),
(532,566,o),
(430,581,qs),
(422,582,o),
(382,582,qs),
(327,582,o),
(282,565,qs)
);
},
{
closed = 1;
nodes = (
(282,-43,o),
(205,22,qs),
(177,45,o),
(161,66,qs),
(96,148,o),
(96,250,qs),
(96,371,o),
(268,543,o),
(390,543,qs),
(492,543,o),
(573,478,qs),
(601,455,o),
(617,434,qs),
(682,352,o),
(682,250,qs),
(682,129,o),
(510,-43,o),
(389,-43,qs)
);
},
{
closed = 1;
nodes = (
(266,345,o),
(252,275,qs),
(250,263,o),
(250,237,o),
(252,225,qs),
(261,182,o),
(321,122,o),
(364,113,qs),
(370,112,o),
(408,112,o),
(414,113,qs),
(457,122,o),
(517,182,o),
(526,225,qs),
(528,237,o),
(528,263,o),
(526,275,qs),
(517,317,o),
(458,377,o),
(417,386,qs),
(403,388,o),
(384,388,qs),
(358,388,o),
(328,374,qs)
);
},
{
closed = 1;
nodes = (
(488,211,o),
(432,151,o),
(389,151,qs),
(350,151,o),
(290,207,o),
(290,250,qs),
(290,290,o),
(348,349,o),
(430,349,o),
(488,293,o),
(488,250,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
0 0 0 2 4 0 2 105 0 4 0 6 7 4 6 105 0 7 0 5 3 7 5 105 8 1 3 1 1 3 89 8 1 3 3 1 97 0 1 3 1 81 29 29 79 77 73 72 61 59 49 47 29 46 29 45 38 36 45 32 9 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni229A;
unicode = 8858;
},
{
glyphname = uni229B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,538,o),
(148,480,qs),
(78,407,o),
(61,308,qs),
(57,286,o),
(57,214,o),
(61,192,qs),
(78,96,o),
(214,-50,o),
(308,-73,qs),
(344,-82,o),
(389,-82,qs),
(425,-82,o),
(447,-78,qs),
(554,-59,o),
(630,20,qs),
(700,93,o),
(717,192,qs),
(721,214,o),
(721,286,o),
(717,308,qs),
(696,425,o),
(610,500,qs),
(532,566,o),
(430,581,qs),
(422,582,o),
(382,582,qs),
(327,582,o),
(282,565,qs)
);
},
{
closed = 1;
nodes = (
(282,-43,o),
(205,22,qs),
(177,45,o),
(161,66,qs),
(96,148,o),
(96,250,qs),
(96,371,o),
(268,543,o),
(390,543,qs),
(492,543,o),
(573,478,qs),
(601,455,o),
(617,434,qs),
(682,352,o),
(682,250,qs),
(682,129,o),
(510,-43,o),
(389,-43,qs)
);
},
{
closed = 1;
nodes = (
(204,325,o),
(213,316,qs),
(215,314,o),
(278,283,o),
(313,266,qs),
(348,250,l),
(326,240,ls),
(305,230,o),
(258,208,o),
(215,186,o),
(213,184,qs),
(204,175,o),
(204,161,qs),
(204,145,o),
(223,126,o),
(238,126,qs),
(246,126,o),
(250,128,qs),
(257,131,o),
(368,214,q),
(366,192,ls),
(365,170,o),
(359,104,o),
(356,73,o),
(355,63,q),
(356,52,o),
(375,36,o),
(403,36,o),
(422,52,o),
(423,63,q),
(420,100,ls),
(416,138,o),
(413,176,qs),
(410,214,l),
(438,193,ls),
(466,172,o),
(526,129,o),
(529,128,q),
(532,126,o),
(541,126,qs),
(555,126,o),
(575,146,o),
(575,161,qs),
(575,174,o),
(565,184,qs),
(563,186,o),
(500,217,o),
(465,234,qs),
(430,250,l),
(452,260,ls),
(473,270,o),
(520,292,o),
(563,314,o),
(565,316,qs),
(575,326,o),
(575,339,qs),
(575,353,o),
(554,375,o),
(541,375,qs),
(534,375,o),
(529,372,q),
(526,371,o),
(467,328,o),
(438,307,qs),
(410,286,l),
(412,308,ls),
(413,330,o),
(419,396,o),
(422,427,o),
(423,437,q),
(422,448,o),
(403,465,o),
(391,466,qs),
(388,466,o),
(380,465,o),
(379,465,q),
(357,456,o),
(355,437,q),
(358,400,ls),
(362,362,o),
(365,324,qs),
(368,286,l),
(250,372,l),
(244,375,o),
(238,375,qs),
(224,375,o),
(204,355,o),
(204,339,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
64 56 2 4 5 128 114 113 100 85 69 68 52 8 7 4 109 104 2 8 7 3 76 0 5 2 4 2 5 4 128 0 8 7 3 7 8 3 128 0 0 0 2 5 0 2 105 6 1 4 9 1 7 8 4 7 105 10 1 3 1 1 3 89 10 1 3 3 1 97 0 1 3 1 81 29 29 119 118 107 106 95 93 76 74 62 60 49 48 29 46 29 45 38 36 45 32 11 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni229B;
unicode = 8859;
},
{
glyphname = uni229D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(203,538,o),
(148,480,qs),
(78,407,o),
(61,308,qs),
(57,286,o),
(57,214,o),
(61,192,qs),
(78,96,o),
(214,-50,o),
(308,-73,qs),
(344,-82,o),
(389,-82,qs),
(425,-82,o),
(447,-78,qs),
(554,-59,o),
(630,20,qs),
(700,93,o),
(717,192,qs),
(721,214,o),
(721,286,o),
(717,308,qs),
(696,425,o),
(610,500,qs),
(532,566,o),
(430,581,qs),
(422,582,o),
(382,582,qs),
(327,582,o),
(282,565,qs)
);
},
{
closed = 1;
nodes = (
(282,-43,o),
(205,22,qs),
(177,45,o),
(161,66,qs),
(96,148,o),
(96,250,qs),
(96,371,o),
(268,543,o),
(390,543,qs),
(492,543,o),
(573,478,qs),
(601,455,o),
(617,434,qs),
(682,352,o),
(682,250,qs),
(682,129,o),
(510,-43,o),
(389,-43,qs)
);
},
{
closed = 1;
nodes = (
(223,262,o),
(223,250,qs),
(223,236,o),
(235,232,qs),
(239,230,o),
(389,230,qs),
(509,230,o),
(544,231,o),
(549,235,qs),
(555,241,o),
(555,259,o),
(549,265,qs),
(544,269,o),
(509,270,o),
(389,270,qs),
(238,270,o),
(235,268,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 0 0 2 4 0 2 105 7 1 4 0 5 3 4 5 105 6 1 3 1 1 3 89 6 1 3 3 1 97 0 1 3 1 81 50 47 29 29 58 55 47 63 50 63 29 46 29 45 38 36 45 32 8 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni229D;
unicode = 8861;
},
{
glyphname = uni229E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(709,1,l),
(720,10,o),
(722,15,q),
(722,674,l),
(719,681,o),
(709,689,q),
(70,689,l),
(63,685,o),
(56,676,q),
(55,346,l),
(55,16,l),
(59,4,o),
(71,0,q),
(390,0,l)
);
},
{
closed = 1;
nodes = (
(95,649,l),
(369,649,l),
(369,365,l),
(95,365,l)
);
},
{
closed = 1;
nodes = (
(409,649,l),
(682,649,l),
(682,365,l),
(409,365,l)
);
},
{
closed = 1;
nodes = (
(95,325,l),
(369,325,l),
(369,40,l),
(95,40,l)
);
},
{
closed = 1;
nodes = (
(409,325,l),
(682,325,l),
(682,40,l),
(409,40,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
9 4 2 2 0 10 2 2 1 7 2 76 0 0 4 1 2 3 0 2 103 12 5 11 3 3 8 1 6 7 3 6 103 14 9 13 3 7 1 1 7 87 14 9 13 3 7 7 1 95 10 1 1 7 1 79 26 26 22 22 18 18 14 14 0 0 26 29 26 29 28 27 22 25 22 25 24 23 18 21 18 21 20 19 14 17 14 17 16 15 0 13 0 12 22 15 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni229E;
unicode = 8862;
},
{
glyphname = uni229F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(709,1,l),
(720,10,o),
(722,15,q),
(722,674,l),
(719,681,o),
(709,689,q),
(70,689,l),
(63,685,o),
(56,676,q),
(55,346,l),
(55,16,l),
(59,4,o),
(71,0,q),
(390,0,l)
);
},
{
closed = 1;
nodes = (
(95,649,l),
(682,649,l),
(682,365,l),
(95,365,l)
);
},
{
closed = 1;
nodes = (
(95,325,l),
(682,325,l),
(682,40,l),
(95,40,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 74 values pushed */
9 4 2 2 0 10 2 2 1 5 2 76 0 0 0 2 3 0 2 103 7 1 3 0 4 5 3 4 103 8 1 5 1 1 5 87 8 1 5 5 1 95 6 1 1 5 1 79 18 18 14 14 0 0 18 21 18 21 20 19 14 17 14 17 16 15 0 13 0 12 22 9 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni229F;
unicode = 8863;
},
{
glyphname = uni22A0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(714,3,o),
(722,13,q),
(722,676,l),
(714,686,o),
(707,689,q),
(70,689,l),
(63,685,o),
(56,676,q),
(55,346,l),
(55,16,l),
(59,4,o),
(71,0,q),
(707,0,l)
);
},
{
closed = 1;
nodes = (
(543,535,o),
(389,374,q),
(128,644,l),
(123,649,l),
(654,649,l)
);
},
{
closed = 1;
nodes = (
(360,344,o),
(98,73,qs),
(95,70,l),
(95,619,l),
(119,595,o),
(360,345,q)
);
},
{
closed = 1;
nodes = (
(417,344,o),
(418,346,q),
(425,354,ls),
(432,361,o),
(457,387,o),
(488,419,o),
(531,462,o),
(551,483,qs),
(682,619,l),
(682,70,l),
(549,207,ls)
);
},
{
closed = 1;
nodes = (
(522,40,l),
(256,40,l),
(123,41,l),
(256,176,o),
(388,315,q),
(400,304,ls),
(422,282,o),
(532,167,qs),
(654,41,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
9 4 2 2 0 38 32 25 24 20 19 15 7 3 2 10 2 2 1 3 3 76 0 0 5 1 2 3 0 2 103 0 3 1 1 3 87 0 3 3 1 95 4 1 1 3 1 79 13 13 0 0 43 40 13 17 13 17 0 12 0 12 22 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22A0;
unicode = 8864;
},
{
glyphname = uni22A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(709,1,l),
(720,10,o),
(722,15,q),
(722,674,l),
(719,681,o),
(709,689,q),
(70,689,l),
(63,685,o),
(56,676,q),
(55,346,l),
(55,16,l),
(59,4,o),
(71,0,q),
(390,0,l)
);
},
{
closed = 1;
nodes = (
(95,649,l),
(682,649,l),
(682,40,l),
(95,40,l)
);
},
{
closed = 1;
nodes = (
(329,320,o),
(363,285,o),
(415,285,o),
(449,320,o),
(449,347,qs),
(449,372,o),
(414,405,o),
(390,405,qs),
(365,405,o),
(329,372,o),
(329,347,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
9 4 2 2 0 10 2 2 1 3 2 76 0 0 0 2 4 0 2 103 0 4 0 5 3 4 5 105 7 1 3 1 1 3 87 7 1 3 3 1 95 6 1 1 3 1 79 14 14 0 0 26 25 21 19 14 17 14 17 16 15 0 13 0 12 22 8 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22A1;
unicode = 8865;
},
{
glyphname = uni22A8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(540,230,l),
(554,237,o),
(555,248,qs),
(555,260,o),
(539,270,q),
(95,270,l),
(95,424,l),
(539,424,l),
(555,434,o),
(555,446,qs),
(554,457,o),
(540,464,q),
(95,464,l),
(95,679,l),
(88,693,o),
(77,694,qs),
(65,694,o),
(55,678,q),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
9 5 2 2 1 13 1 3 2 20 1 5 4 4 0 2 0 5 4 76 0 1 2 1 133 0 0 5 0 134 0 2 0 3 4 2 3 103 0 4 5 5 4 87 0 4 4 5 95 0 5 4 5 79 20 17 20 19 19 18 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni22A8;
unicode = 8872;
},
{
glyphname = uni22A9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,693,o),
(77,694,qs),
(65,694,o),
(55,678,q),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,679,l)
);
},
{
closed = 1;
nodes = (
(651,327,l),
(666,334,o),
(666,360,o),
(651,367,q),
(289,367,l),
(289,679,l),
(282,693,o),
(271,694,qs),
(259,694,o),
(249,678,q),
(249,16,l),
(259,0,o),
(271,0,qs),
(282,1,o),
(289,15,q),
(289,327,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
19 15 9 5 4 4 1 14 10 4 0 4 0 5 2 76 3 1 1 4 1 133 2 1 0 5 0 134 0 4 5 5 4 87 0 4 4 5 95 0 5 4 5 79 19 19 19 21 19 18 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni22A9;
unicode = 8873;
},
{
glyphname = uni22AA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(88,693,o),
(77,694,qs),
(65,694,o),
(55,678,q),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,679,l)
);
},
{
closed = 1;
nodes = (
(270,693,o),
(259,694,qs),
(247,694,o),
(237,678,q),
(237,16,l),
(247,0,o),
(259,0,qs),
(270,1,o),
(277,15,q),
(277,679,l)
);
},
{
closed = 1;
nodes = (
(818,327,l),
(833,334,o),
(833,360,o),
(818,367,q),
(459,367,l),
(459,679,l),
(452,693,o),
(441,694,qs),
(429,694,o),
(419,678,q),
(419,16,l),
(429,0,o),
(441,0,qs),
(452,1,o),
(459,15,q),
(459,327,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
29 25 19 15 9 5 6 6 1 24 20 14 10 4 0 6 0 7 2 76 5 3 2 1 6 1 133 4 2 2 0 7 0 134 0 6 7 7 6 87 0 6 6 7 95 0 7 6 7 79 19 19 19 21 19 21 19 18 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 889;
}
);
note = uni22AA;
unicode = 8874;
},
{
glyphname = uni22AC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(123,171,o),
(232,296,o),
(259,327,q),
(540,327,l),
(555,334,o),
(555,347,qs),
(555,358,o),
(542,367,q),
(418,367,l),
(294,368,l),
(423,515,ls),
(551,661,o),
(554,669,qs),
(555,671,o),
(555,674,qs),
(555,683,o),
(542,694,o),
(534,694,qs),
(530,694,o),
(516,684,q),
(510,675,o),
(376,522,qs),
(241,367,l),
(95,367,l),
(95,679,l),
(88,693,o),
(77,694,qs),
(65,694,o),
(55,678,q),
(55,154,l),
(2,94,ls),
(-52,30,o),
(-53,29,qs),
(-55,26,o),
(-55,20,qs),
(-55,12,o),
(-44,0,o),
(-35,0,qs),
(-29,0,o),
(-22,5,q),
(-13,14,o),
(17,50,qs),
(55,93,l),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,139,l)
);
},
{
closed = 1;
nodes = (
(95,202,o),
(95,264,qs),
(95,327,l),
(205,327,l),
(96,202,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 58 values pushed */
33 23 19 3 3 2 48 18 5 4 0 5 0 6 2 76 4 1 2 3 2 133 1 1 0 6 0 134 5 1 3 6 6 3 87 5 1 3 3 6 95 7 1 6 3 6 79 20 20 39 36 19 25 38 18 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni22AC;
unicode = 8876;
},
{
glyphname = uni22AD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(555,455,o),
(542,464,q),
(460,464,l),
(379,465,l),
(465,564,ls),
(551,662,o),
(554,669,qs),
(557,679,o),
(543,694,o),
(535,694,qs),
(526,694,o),
(517,685,qs),
(516,684,o),
(491,655,o),
(440,596,o),
(419,572,qs),
(325,464,l),
(95,464,l),
(95,679,l),
(88,693,o),
(77,694,qs),
(65,694,o),
(55,678,q),
(55,154,l),
(2,94,ls),
(-52,30,o),
(-53,29,qs),
(-55,26,o),
(-55,20,qs),
(-55,12,o),
(-44,0,o),
(-35,0,qs),
(-29,0,o),
(-22,5,q),
(-13,14,o),
(17,50,qs),
(55,93,l),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,139,l),
(134,183,o),
(174,230,q),
(540,230,l),
(554,237,o),
(555,248,qs),
(555,260,o),
(541,270,q),
(375,270,l),
(210,271,l),
(269,337,o),
(343,424,q),
(539,424,l),
(555,432,o),
(555,445,qs)
);
},
{
closed = 1;
nodes = (
(156,270,l),
(95,270,l),
(95,424,l),
(192,424,ls),
(289,424,o),
(289,423,q),
(222,346,l)
);
},
{
closed = 1;
nodes = (
(120,226,o),
(97,203,qs),
(96,202,l),
(95,215,l),
(95,230,l),
(120,230,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
37 33 2 6 5 8 1 2 1 66 65 32 19 18 14 13 7 3 2 3 76 64 1 2 1 75 7 1 5 6 5 133 4 1 3 2 3 134 8 1 6 9 1 0 1 6 0 103 10 1 1 2 2 1 87 10 1 1 1 2 95 0 2 1 2 79 62 61 60 57 38 22 19 25 38 21 20 34 17 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni22AD;
unicode = 8877;
},
{
glyphname = uni22AE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(2,84,ls),
(-52,31,o),
(-53,29,qs),
(-55,26,o),
(-55,20,qs),
(-55,12,o),
(-44,0,o),
(-26,0,o),
(14,39,qs),
(54,78,l),
(55,78,o),
(55,47,qs),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,118,l),
(147,167,o),
(249,265,q),
(249,140,l),
(250,15,l),
(257,0,o),
(271,0,qs),
(282,1,o),
(289,15,q),
(289,304,l),
(297,311,o),
(313,327,q),
(651,327,l),
(666,334,o),
(666,347,qs),
(666,358,o),
(653,367,q),
(504,367,l),
(355,368,l),
(501,508,ls),
(650,649,o),
(655,656,q),
(666,666,o),
(666,674,qs),
(666,683,o),
(653,694,o),
(645,694,qs),
(643,694,o),
(637,692,qs),
(632,690,o),
(297,367,o),
(293,367,qs),
(289,367,l),
(289,679,l),
(282,693,o),
(271,694,qs),
(259,694,o),
(249,678,q),
(249,321,l),
(96,174,l),
(95,427,l),
(95,681,l),
(86,694,o),
(76,694,qs),
(63,694,o),
(55,678,q),
(55,135,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 69 values pushed */
22 12 8 4 0 5 3 0 63 50 46 45 43 41 37 36 7 6 10 5 4 2 76 13 1 3 1 75 2 1 2 0 3 0 133 7 6 2 5 4 5 134 0 3 4 4 3 87 0 3 3 4 95 0 4 3 4 79 22 24 21 20 39 40 22 33 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni22AE;
unicode = 8878;
},
{
glyphname = uni22AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(666,455,o),
(653,464,q),
(555,464,l),
(456,465,l),
(551,556,ls),
(578,582,o),
(614,616,qs),
(664,664,o),
(665,668,qs),
(665,669,l),
(666,671,o),
(666,674,qs),
(666,683,o),
(653,694,o),
(645,694,qs),
(643,694,o),
(637,692,qs),
(631,689,o),
(516,577,qs),
(398,464,l),
(289,464,l),
(289,679,l),
(282,693,o),
(271,694,qs),
(259,694,o),
(249,678,q),
(249,321,l),
(96,174,l),
(95,427,l),
(95,681,l),
(86,694,o),
(76,694,qs),
(63,694,o),
(55,678,q),
(55,135,l),
(2,84,ls),
(-52,31,o),
(-53,29,qs),
(-55,26,o),
(-55,20,qs),
(-55,12,o),
(-44,0,o),
(-26,0,o),
(14,39,qs),
(54,78,l),
(55,78,o),
(55,47,qs),
(55,16,l),
(65,0,o),
(77,0,qs),
(88,1,o),
(95,15,q),
(95,118,l),
(147,167,o),
(249,265,q),
(249,140,l),
(250,15,l),
(257,0,o),
(271,0,qs),
(282,1,o),
(289,15,q),
(289,230,l),
(651,230,l),
(665,237,o),
(666,248,qs),
(666,260,o),
(650,270,q),
(289,270,l),
(289,304,l),
(373,384,o),
(414,424,q),
(650,424,l),
(666,432,o),
(666,445,qs)
);
},
{
closed = 1;
nodes = (
(323,424,ls),
(355,424,o),
(355,422,o),
(326,394,o),
(292,363,o),
(289,360,q),
(289,424,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 86 values pushed */
61 51 47 43 39 5 8 6 74 46 4 3 1 0 18 8 2 2 1 45 38 25 21 20 16 12 7 3 2 4 76 7 1 6 8 6 133 5 4 2 3 2 3 134 9 1 8 10 1 0 1 8 0 105 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 80 77 71 69 19 22 41 22 24 19 20 19 17 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni22AF;
unicode = 8879;
},
{
glyphname = uni22B2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,539,o),
(674,539,qs),
(671,539,o),
(665,537,qs),
(657,533,o),
(101,270,o),
(96,267,q),
(83,262,o),
(83,249,qs),
(83,239,o),
(90,234,qs),
(92,232,o),
(382,95,qs),
(670,-41,l),
(676,-41,ls),
(687,-40,o),
(694,-26,q),
(694,524,l)
);
},
{
closed = 1;
nodes = (
(650,12,o),
(399,131,o),
(275,190,qs),
(151,249,l),
(151,250,o),
(652,487,o),
(654,487,o),
(654,11,o),
(652,11,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
17 0 2 0 73 0 0 0 118 31 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22B2;
unicode = 8882;
},
{
glyphname = uni22B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,95,ls),
(685,232,o),
(687,234,qs),
(694,239,o),
(694,249,qs),
(694,262,o),
(680,268,qs),
(671,273,o),
(107,539,o),
(103,539,qs),
(92,539,o),
(83,523,q),
(83,-26,l),
(90,-40,o),
(101,-41,qs),
(107,-41,l)
);
},
{
closed = 1;
nodes = (
(378,131,o),
(127,12,o),
(125,11,q),
(123,11,o),
(123,487,o),
(125,487,q),
(125,486,o),
(166,467,qs),
(348,383,o),
(626,249,q),
(502,190,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 2 2 0 1 1 76 0 1 0 1 133 2 1 0 0 118 1 0 5 4 0 15 1 15 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22B3;
unicode = 8883;
},
{
glyphname = uni22B4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,636,o),
(674,636,qs),
(671,636,o),
(665,634,qs),
(657,630,o),
(101,367,o),
(96,364,q),
(83,359,o),
(83,346,qs),
(83,336,o),
(90,331,qs),
(92,329,o),
(382,192,qs),
(670,56,l),
(676,56,ls),
(687,57,o),
(694,71,q),
(694,621,l)
);
},
{
closed = 1;
nodes = (
(650,109,o),
(399,228,o),
(275,287,qs),
(151,346,l),
(151,347,o),
(652,584,o),
(654,584,o),
(654,108,o),
(652,108,q)
);
},
{
closed = 1;
nodes = (
(693,-131,o),
(694,-120,qs),
(694,-108,o),
(678,-98,q),
(99,-98,l),
(83,-108,o),
(83,-120,qs),
(84,-131,o),
(98,-138,q),
(679,-138,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
17 0 2 1 0 34 29 2 2 1 2 76 0 0 1 0 133 0 1 2 2 1 87 0 1 1 2 95 3 1 2 1 2 79 27 27 27 36 27 36 31 31 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22B4;
unicode = 8884;
},
{
glyphname = uni22B5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,192,ls),
(685,329,o),
(687,331,qs),
(694,336,o),
(694,346,qs),
(694,359,o),
(680,365,qs),
(671,370,o),
(107,636,o),
(103,636,qs),
(92,636,o),
(83,620,q),
(83,71,l),
(90,57,o),
(101,56,qs),
(107,56,l)
);
},
{
closed = 1;
nodes = (
(378,228,o),
(127,109,o),
(125,108,q),
(123,108,o),
(123,584,o),
(125,584,q),
(125,583,o),
(166,564,qs),
(348,480,o),
(626,346,q),
(502,287,ls)
);
},
{
closed = 1;
nodes = (
(693,-131,o),
(694,-120,qs),
(694,-108,o),
(678,-98,q),
(99,-98,l),
(83,-108,o),
(83,-120,qs),
(84,-131,o),
(98,-138,q),
(679,-138,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 59 values pushed */
3 2 2 0 1 34 29 2 3 2 2 76 0 1 0 1 133 4 1 0 2 0 133 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 27 27 1 0 27 36 27 36 32 31 5 4 0 15 1 15 6 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22B5;
unicode = 8885;
},
{
glyphname = uni22B8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(739,273,o),
(738,272,q),
(738,270,l),
(405,270,ls),
(71,270,o),
(68,268,qs),
(56,262,o),
(56,251,qs),
(56,238,o),
(68,232,qs),
(71,230,o),
(405,230,qs),
(738,230,l),
(738,228,l),
(739,227,o),
(741,217,qs),
(751,164,o),
(835,92,o),
(896,92,qs),
(917,92,o),
(924,93,qs),
(968,101,o),
(1033,159,o),
(1047,202,qs),
(1055,225,o),
(1055,250,qs),
(1055,311,o),
(981,394,o),
(926,406,qs),
(912,408,o),
(891,408,qs),
(833,408,o),
(750,334,o),
(741,283,qs)
);
},
{
closed = 1;
nodes = (
(914,368,o),
(920,367,qs),
(961,358,o),
(1014,296,o),
(1014,250,qs),
(1014,229,o),
(1008,211,qs),
(997,176,o),
(938,132,o),
(896,132,qs),
(875,132,o),
(857,138,qs),
(822,149,o),
(778,208,o),
(778,250,qs),
(778,301,o),
(843,368,o),
(891,368,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
0 0 6 1 5 3 0 5 105 0 3 0 2 4 3 2 103 0 4 1 1 4 89 0 4 4 1 97 0 1 4 1 81 34 34 34 51 34 49 42 53 67 57 33 7 6 27 
CALL[ ]	/* CallFunction */";
};
width = 1111;
}
);
note = uni22B8;
unicode = 8888;
},
{
glyphname = uni22BA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(394,351,l),
(470,352,l),
(500,364,o),
(500,391,qs),
(500,402,o),
(489,419,o),
(480,425,o),
(470,431,q),
(280,431,ls),
(89,431,o),
(84,429,qs),
(57,421,o),
(57,361,o),
(87,352,q),
(162,351,l),
(238,351,l),
(238,84,l),
(239,-182,l),
(250,-212,o),
(278,-212,qs),
(287,-212,o),
(300,-208,o),
(310,-197,o),
(314,-190,o),
(318,-182,q),
(318,351,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
7 0 2 0 1 1 76 0 0 1 0 134 0 2 1 1 2 87 0 2 2 1 95 3 1 1 2 1 79 38 51 35 36 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 556;
}
);
note = uni22BA;
unicode = 8890;
},
{
glyphname = uni22BB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(527,716,o),
(520,709,qs),
(519,708,o),
(499,666,qs),
(423,506,o),
(305,261,q),
(268,337,o),
(157,570,o),
(91,708,o),
(90,709,qs),
(84,716,o),
(68,716,o),
(56,705,o),
(56,697,qs),
(56,690,o),
(166,459,o),
(282,219,o),
(285,210,qs),
(290,199,o),
(296,197,qs),
(302,194,o),
(306,194,qs),
(318,194,o),
(325,210,qs),
(329,219,o),
(446,461,o),
(555,693,o),
(555,707,o),
(542,716,o),
(536,716,qs)
);
},
{
closed = 1;
nodes = (
(555,8,o),
(555,32,o),
(540,40,q),
(71,40,l),
(55,29,o),
(55,20,qs),
(55,9,o),
(71,0,q),
(540,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 47 values pushed */
23 1 0 1 1 76 2 1 1 0 1 133 0 0 3 0 133 0 3 4 4 3 87 0 3 3 4 95 5 1 4 3 4 79 30 30 30 38 30 38 21 26 26 22 6 6 26 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni22BB;
unicode = 8891;
},
{
glyphname = uni22BC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,686,o),
(71,676,q),
(539,676,l),
(555,686,o),
(555,698,qs),
(554,709,o),
(540,716,q),
(70,716,l),
(56,709,o),
(55,698,qs)
);
},
{
closed = 1;
nodes = (
(290,517,o),
(285,507,qs),
(283,501,o),
(58,31,o),
(55,21,q),
(55,13,o),
(67,0,o),
(75,0,qs),
(85,0,o),
(90,7,qs),
(91,8,o),
(111,50,qs),
(187,210,o),
(305,455,q),
(517,12,o),
(518,11,q),
(524,0,o),
(536,0,qs),
(550,0,o),
(555,18,q),
(555,24,l),
(439,268,ls),
(322,513,o),
(320,515,qs),
(315,522,o),
(305,522,qs),
(300,522,o),
(296,519,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 48 values pushed */
9 4 2 1 0 23 1 3 2 2 76 0 2 1 3 1 2 3 128 4 1 3 3 132 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 24 38 35 20 17 5 6 27 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni22BC;
unicode = 8892;
},
{
glyphname = dotmath;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(209,1,l),
(220,10,o),
(222,15,q),
(222,174,l),
(219,181,o),
(209,189,q),
(70,189,l),
(66,187,l),
(59,180,o),
(56,176,q),
(55,96,l),
(55,16,l),
(59,4,o),
(71,0,q),
(140,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
11 10 4 2 4 1 0 1 76 0 0 1 1 0 87 0 0 0 1 95 2 1 1 0 1 79 0 0 0 14 0 13 38 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 278;
}
);
note = dotmath;
unicode = 8901;
},
{
glyphname = uni22C7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(320,435,o),
(340,417,q),
(358,397,o),
(389,397,qs),
(419,397,o),
(437,417,q),
(457,435,o),
(457,466,qs),
(457,495,o),
(419,533,o),
(391,535,qs),
(387,535,o),
(376,534,o),
(375,534,qs),
(320,522,o),
(320,466,qs)
);
},
{
closed = 1;
nodes = (
(245,136,ls),
(168,58,o),
(147,36,o),
(147,29,qs),
(147,21,o),
(159,9,o),
(167,9,qs),
(169,9,o),
(175,11,q),
(178,13,o),
(284,117,qs),
(389,222,l),
(493,118,ls),
(570,41,o),
(604,9,o),
(609,9,qs),
(618,9,o),
(630,21,o),
(630,29,qs),
(630,33,o),
(628,37,qs),
(625,44,o),
(532,135,qs),
(438,230,l),
(707,230,l),
(722,238,o),
(722,262,o),
(707,270,q),
(438,270,l),
(532,365,ls),
(625,456,o),
(628,463,qs),
(630,467,o),
(630,471,qs),
(630,479,o),
(618,491,o),
(609,491,qs),
(604,491,o),
(570,459,o),
(493,382,qs),
(389,278,l),
(284,383,ls),
(178,487,o),
(175,489,q),
(169,491,o),
(167,491,qs),
(159,491,o),
(147,479,o),
(147,471,qs),
(147,464,o),
(168,442,o),
(245,364,qs),
(339,270,l),
(70,270,l),
(56,263,o),
(56,237,o),
(70,230,q),
(339,230,l)
);
},
{
closed = 1;
nodes = (
(320,4,o),
(340,-14,q),
(358,-34,o),
(389,-34,qs),
(419,-34,o),
(437,-14,q),
(457,4,o),
(457,35,qs),
(457,64,o),
(419,102,o),
(391,104,qs),
(387,104,o),
(376,103,o),
(375,103,qs),
(320,91,o),
(320,35,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
32 1 2 1 61 1 10 6 2 76 4 1 3 0 1 0 3 1 128 8 1 7 10 11 10 7 11 128 0 0 0 1 2 0 1 105 5 1 2 12 9 2 6 10 2 6 103 0 10 7 11 10 89 0 10 10 11 97 0 11 10 11 81 16 16 86 84 79 77 16 73 16 73 40 23 19 23 39 38 23 37 35 13 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22C7;
unicode = 8903;
},
{
glyphname = uni22C9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(630,33,o),
(626,41,o),
(522,145,qs),
(418,250,l),
(522,355,ls),
(626,459,o),
(630,467,o),
(630,471,qs),
(630,479,o),
(618,491,o),
(609,491,qs),
(604,491,o),
(570,459,o),
(493,382,qs),
(389,278,l),
(284,383,ls),
(178,487,o),
(175,489,qs),
(168,493,o),
(158,488,qs),
(152,486,o),
(147,475,q),
(147,25,l),
(158,9,o),
(167,9,qs),
(169,9,o),
(175,11,q),
(178,13,o),
(284,117,qs),
(389,222,l),
(493,118,ls),
(570,41,o),
(604,9,o),
(609,9,qs),
(618,9,o),
(630,21,o),
(630,29,qs)
);
},
{
closed = 1;
nodes = (
(359,250,l),
(187,78,l),
(187,422,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
39 38 37 32 21 14 13 6 8 0 2 1 76 0 2 0 2 133 1 1 0 0 118 44 40 17 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22C9;
unicode = 8905;
},
{
glyphname = uni22CA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(622,491,o),
(609,491,qs),
(604,491,o),
(570,459,o),
(493,382,qs),
(389,278,l),
(284,383,ls),
(178,487,o),
(175,489,q),
(169,491,o),
(167,491,qs),
(159,491,o),
(147,478,o),
(147,470,qs),
(147,467,o),
(149,463,qs),
(152,457,o),
(255,354,qs),
(359,250,l),
(255,146,ls),
(152,43,o),
(149,37,qs),
(147,31,o),
(147,29,qs),
(147,21,o),
(160,9,o),
(168,9,qs),
(171,9,o),
(175,11,qs),
(178,13,o),
(284,117,qs),
(389,222,l),
(493,118,ls),
(570,41,o),
(604,9,o),
(609,9,qs),
(622,9,o),
(630,24,q),
(630,476,l)
);
},
{
closed = 1;
nodes = (
(503,336,ls),
(551,383,o),
(590,422,q),
(590,78,l),
(418,250,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 31 values pushed */
43 40 39 38 32 19 6 0 8 0 2 1 76 3 1 2 0 2 133 1 1 0 0 118 39 46 40 17 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22CA;
unicode = 8906;
},
{
glyphname = uni22CB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(58,662,o),
(209,500,qs),
(361,336,l),
(209,172,ls),
(58,10,o),
(56,3,qs),
(55,1,o),
(55,-2,qs),
(55,-11,o),
(68,-22,o),
(75,-22,qs),
(83,-22,o),
(89,-16,q),
(92,-14,o),
(240,146,qs),
(388,306,l),
(394,301,l),
(396,298,o),
(687,-15,o),
(688,-17,q),
(693,-22,o),
(701,-22,qs),
(708,-22,o),
(722,-10,o),
(722,-2,qs),
(722,-1,o),
(721,2,o),
(721,3,q),
(719,9,o),
(410,342,qs),
(96,682,o),
(95,683,qs),
(85,693,o),
(74,693,qs),
(66,693,o),
(53,679,o),
(56,669,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
33 28 20 3 1 0 1 76 0 0 1 0 133 2 1 1 1 118 41 42 33 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22CB;
unicode = 8907;
},
{
glyphname = uni22CC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(681,682,o),
(367,342,qs),
(58,9,o),
(56,3,q),
(56,2,o),
(55,-1,o),
(55,-2,qs),
(55,-10,o),
(69,-22,o),
(76,-22,qs),
(84,-22,o),
(89,-17,q),
(89,-16,o),
(126,23,o),
(202,105,o),
(235,141,qs),
(379,297,o),
(389,306,q),
(537,146,ls),
(685,-14,o),
(688,-16,q),
(694,-22,o),
(702,-22,qs),
(709,-22,o),
(722,-11,o),
(722,-2,qs),
(722,1,o),
(721,3,qs),
(719,10,o),
(568,172,qs),
(416,336,l),
(568,500,ls),
(719,662,o),
(721,669,qs),
(722,671,o),
(722,674,qs),
(722,683,o),
(709,694,o),
(702,694,qs),
(693,694,o),
(682,683,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
22 9 4 3 1 0 1 76 0 0 1 0 133 2 1 1 1 118 43 47 16 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22CC;
unicode = 8908;
},
{
glyphname = uni22CD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(722,352,o),
(645,449,o),
(586,461,qs),
(578,463,o),
(556,463,qs),
(513,463,o),
(473,443,qs),
(442,428,o),
(368,371,qs),
(298,318,o),
(251,309,qs),
(243,307,o),
(222,307,qs),
(202,307,o),
(194,309,qs),
(149,319,o),
(86,385,o),
(84,434,qs),
(82,464,o),
(70,464,qs),
(56,464,o),
(56,433,qs),
(56,364,o),
(133,266,o),
(192,253,qs),
(200,251,o),
(222,251,qs),
(265,251,o),
(306,271,qs),
(335,286,o),
(411,343,qs),
(479,395,o),
(527,405,qs),
(535,407,o),
(556,407,qs),
(576,407,o),
(584,405,qs),
(629,395,o),
(692,329,o),
(694,281,qs),
(697,250,o),
(707,250,qs),
(722,250,o),
(722,283,qs)
);
},
{
closed = 1;
nodes = (
(57,43,o),
(71,36,q),
(707,36,l),
(722,44,o),
(722,56,qs),
(722,69,o),
(706,76,q),
(73,76,l),
(57,71,o),
(57,56,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
3 1 0 4 1 76 5 1 3 0 1 4 3 1 105 0 4 2 1 0 6 4 0 105 0 6 7 7 6 87 0 6 6 7 95 0 7 6 7 79 20 22 38 37 37 38 37 32 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22CD;
unicode = 8909;
},
{
glyphname = uni22CE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,540,o),
(111,537,qs),
(198,524,o),
(256,453,qs),
(342,344,o),
(357,101,qs),
(360,64,o),
(360,12,qs),
(360,-7,o),
(362,-11,qs),
(369,-21,o),
(391,-21,o),
(398,-11,qs),
(400,-8,o),
(400,29,qs),
(404,262,o),
(465,391,qs),
(529,520,o),
(648,537,qs),
(676,540,o),
(676,558,qs),
(676,577,o),
(650,577,qs),
(629,577,o),
(596,565,qs),
(450,517,o),
(395,312,qs),
(381,262,o),
(381,253,qs),
(381,251,o),
(380,251,q),
(378,269,o),
(366,311,qs),
(301,548,o),
(117,576,qs),
(113,577,o),
(106,577,qs),
(83,577,o),
(83,558,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 24 values pushed */
32 30 7 3 2 0 1 76 1 1 0 2 0 133 0 2 2 118 26 45 16 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 760;
}
);
note = uni22CE;
unicode = 8910;
},
{
glyphname = uni22CF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(360,505,o),
(357,454,qs),
(342,212,o),
(256,103,qs),
(198,32,o),
(111,19,qs),
(83,16,o),
(83,-2,qs),
(83,-21,o),
(106,-21,qs),
(113,-21,o),
(117,-20,qs),
(301,8,o),
(366,245,qs),
(367,248,o),
(374,279,o),
(377,292,qs),
(380,305,l),
(381,305,o),
(381,303,qs),
(381,294,o),
(395,244,qs),
(450,39,o),
(596,-9,qs),
(629,-21,o),
(650,-21,qs),
(676,-21,o),
(676,-2,qs),
(676,16,o),
(648,19,qs),
(528,36,o),
(465,166,qs),
(404,293,o),
(400,527,qs),
(400,564,o),
(398,567,qs),
(392,578,o),
(380,578,qs),
(377,578,o),
(371,576,q),
(369,574,o),
(364,570,o),
(362,568,o),
(360,563,o),
(360,556,o),
(360,549,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
25 9 2 1 0 1 76 0 0 1 0 133 2 1 1 1 118 31 42 38 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 760;
}
);
note = uni22CF;
unicode = 8911;
},
{
glyphname = uni22D0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,215,o),
(89,192,qs),
(108,99,o),
(261,-29,o),
(362,-39,qs),
(369,-40,o),
(526,-40,qs),
(679,-40,l),
(694,-33,o),
(694,-20,qs),
(694,-9,o),
(681,0,q),
(522,0,ls),
(384,1,o),
(348,2,o),
(328,7,qs),
(299,13,o),
(266,28,qs),
(211,56,o),
(135,153,o),
(125,216,qs),
(124,224,o),
(124,250,qs),
(124,277,o),
(125,285,qs),
(138,365,o),
(248,474,o),
(329,494,qs),
(336,495,o),
(337,496,q),
(354,499,o),
(522,500,qs),
(681,501,l),
(694,510,o),
(694,520,qs),
(694,533,o),
(679,540,q),
(524,540,ls),
(500,540,o),
(450,540,o),
(411,540,o),
(380,539,o),
(361,539,o),
(360,539,qs),
(245,527,o),
(84,369,o),
(84,250,qs)
);
},
{
closed = 1;
nodes = (
(694,145,o),
(679,154,q),
(519,154,ls),
(358,154,o),
(351,156,qs),
(319,164,o),
(278,213,o),
(278,250,qs),
(278,267,o),
(279,271,qs),
(295,330,o),
(351,344,qs),
(358,346,o),
(519,346,qs),
(679,346,l),
(694,355,o),
(694,366,qs),
(694,378,o),
(679,386,q),
(520,386,ls),
(360,386,o),
(353,385,qs),
(323,382,o),
(295,361,q),
(238,324,o),
(238,251,qs),
(238,204,o),
(291,134,o),
(331,120,qs),
(350,114,o),
(425,114,qs),
(679,114,l),
(694,122,o),
(694,134,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
70 1 7 6 1 76 0 0 0 1 5 0 1 103 0 5 0 6 7 5 6 103 0 7 0 4 2 7 4 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 78 76 67 65 61 58 50 48 40 38 34 31 36 114 8 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22D0;
unicode = 8912;
},
{
glyphname = uni22D1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,510,o),
(96,501,q),
(255,500,ls),
(393,499,o),
(429,498,o),
(449,493,qs),
(477,487,o),
(512,472,q),
(567,444,o),
(642,347,o),
(652,285,qs),
(654,269,o),
(654,250,qs),
(654,232,o),
(652,216,qs),
(642,154,o),
(567,56,o),
(512,28,qs),
(480,14,o),
(448,6,qs),
(441,5,o),
(440,4,q),
(423,1,o),
(255,0,qs),
(96,0,l),
(83,-9,o),
(83,-20,qs),
(83,-33,o),
(98,-40,q),
(251,-40,ls),
(407,-40,o),
(415,-39,qs),
(515,-31,o),
(669,99,o),
(688,192,qs),
(693,215,o),
(693,285,o),
(688,309,qs),
(669,402,o),
(516,529,o),
(415,539,qs),
(408,540,o),
(251,540,qs),
(98,540,l),
(83,533,o),
(83,520,qs)
);
},
{
closed = 1;
nodes = (
(83,353,o),
(98,346,q),
(258,346,ls),
(419,346,o),
(426,344,qs),
(458,336,o),
(500,287,o),
(500,250,qs),
(500,237,o),
(498,229,qs),
(482,170,o),
(426,156,qs),
(419,154,o),
(258,154,qs),
(98,154,l),
(84,147,o),
(84,121,o),
(99,114,q),
(353,114,ls),
(427,114,o),
(446,120,qs),
(485,133,o),
(540,203,o),
(540,250,qs),
(540,281,o),
(526,311,qs),
(509,343,o),
(442,387,o),
(402,387,qs),
(378,386,ls),
(355,386,o),
(280,386,o),
(244,386,qs),
(96,386,l),
(83,377,o),
(83,366,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 56 values pushed */
0 0 0 3 4 0 3 103 0 4 0 7 6 4 7 103 0 6 0 5 2 6 5 103 0 2 1 1 2 87 0 2 2 1 95 0 1 2 1 79 79 77 68 66 63 61 53 47 43 40 36 43 33 8 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22D1;
unicode = 8913;
},
{
glyphname = uni22D2;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,396,o),
(96,401,qs),
(102,447,o),
(136,484,qs),
(207,558,o),
(334,558,qs),
(392,558,o),
(498,519,o),
(529,485,qs),
(560,452,o),
(570,405,q),
(570,336,o),
(572,60,o),
(572,-9,q),
(581,-22,o),
(591,-22,qs),
(604,-22,o),
(611,-7,q),
(611,194,ls),
(611,399,o),
(610,405,qs),
(606,446,o),
(579,487,qs),
(546,538,o),
(414,598,o),
(332,598,qs),
(260,598,o),
(139,548,o),
(101,506,qs),
(70,470,o),
(61,431,qs),
(61,430,o),
(60,428,qs),
(56,414,o),
(55,280,qs),
(55,231,o),
(55,200,qs),
(55,-7,l),
(62,-21,o),
(88,-21,o),
(95,-7,q),
(95,193,ls)
);
},
{
closed = 1;
nodes = (
(249,303,o),
(250,347,o),
(255,358,qs),
(279,403,o),
(387,403,o),
(411,358,qs),
(416,347,o),
(417,303,o),
(417,164,qs),
(417,-7,l),
(424,-21,o),
(450,-21,o),
(457,-7,q),
(457,166,ls),
(457,339,o),
(455,347,qs),
(449,387,o),
(381,444,o),
(333,444,qs),
(290,444,o),
(226,398,o),
(215,363,qs),
(210,350,o),
(209,304,o),
(209,166,qs),
(209,-7,l),
(216,-21,o),
(242,-21,o),
(249,-7,q),
(249,164,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
30 20 2 7 5 61 58 45 42 39 27 23 3 0 9 0 7 2 76 6 4 2 3 0 7 0 134 0 1 0 3 5 1 3 105 0 5 7 7 5 89 0 5 5 7 97 0 7 5 7 81 22 22 39 23 40 40 44 17 8 6 30 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni22D2;
unicode = 8914;
},
{
glyphname = uni22D3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(578,598,o),
(571,583,q),
(571,383,ls),
(571,180,o),
(570,175,qs),
(564,129,o),
(530,92,qs),
(459,18,o),
(332,18,qs),
(247,18,o),
(112,95,o),
(98,162,qs),
(96,172,l),
(95,378,l),
(95,585,l),
(86,598,o),
(75,598,qs),
(65,598,o),
(56,585,q),
(55,384,ls),
(55,180,o),
(56,173,qs),
(61,127,o),
(87,89,qs),
(121,39,o),
(255,-22,o),
(333,-22,qs),
(403,-22,o),
(528,27,o),
(565,70,qs),
(596,106,o),
(605,145,qs),
(605,146,o),
(606,148,qs),
(610,162,o),
(611,296,qs),
(611,345,o),
(611,376,qs),
(611,583,l),
(602,598,o),
(591,598,qs)
);
},
{
closed = 1;
nodes = (
(417,273,o),
(416,229,o),
(411,218,qs),
(387,173,o),
(279,173,o),
(255,218,qs),
(250,229,o),
(249,273,o),
(249,412,qs),
(249,583,l),
(242,598,o),
(229,598,qs),
(220,598,o),
(210,585,q),
(209,412,ls),
(209,237,o),
(211,230,q),
(218,189,o),
(287,132,o),
(379,132,o),
(448,188,o),
(455,229,qs),
(457,237,o),
(457,410,qs),
(457,583,l),
(450,598,o),
(424,598,o),
(417,583,q),
(417,412,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
59 55 44 41 38 35 25 21 1 9 7 1 27 1 5 7 2 76 18 1 7 1 75 6 4 8 3 4 1 7 1 133 0 7 0 5 2 7 5 105 0 2 0 0 2 89 0 2 2 0 97 0 0 2 0 81 0 0 65 64 58 56 50 49 43 42 0 40 0 39 38 40 44 9 6 25 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni22D3;
unicode = 8915;
},
{
glyphname = uni22D4;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,-22,o),
(96,-9,q),
(96,174,l),
(97,357,l),
(99,367,ls),
(106,390,o),
(118,407,qs),
(143,440,o),
(245,483,o),
(303,487,qs),
(314,487,l),
(314,-7,l),
(321,-21,o),
(347,-21,o),
(354,-7,q),
(354,487,l),
(365,487,ls),
(439,482,o),
(551,420,o),
(565,375,qs),
(570,361,o),
(571,313,o),
(571,170,qs),
(571,-7,l),
(578,-21,o),
(604,-21,o),
(611,-7,q),
(611,171,ls),
(611,359,o),
(606,379,qs),
(595,418,o),
(569,445,qs),
(540,478,o),
(434,521,o),
(373,526,qs),
(371,526,o),
(366,527,o),
(362,527,o),
(358,527,o),
(357,528,q),
(356,528,l),
(354,528,l),
(354,721,l),
(346,736,o),
(334,736,qs),
(325,736,o),
(315,723,q),
(314,625,l),
(314,528,l),
(311,528,ls),
(310,528,o),
(305,527,o),
(297,526,o),
(294,526,qs),
(184,518,o),
(114,460,qs),
(71,425,o),
(59,370,qs),
(57,360,l),
(56,176,l),
(56,-7,l),
(63,-22,o),
(76,-22,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
20 19 15 13 4 2 0 60 58 50 47 38 35 3 1 8 1 2 2 76 0 0 2 0 133 4 1 2 1 2 133 6 5 3 3 1 1 118 0 0 0 62 0 61 53 51 49 48 46 44 37 36 18 16 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni22D4;
unicode = 8916;
},
{
glyphname = uni22D6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,-11,o),
(687,-5,q),
(151,250,l),
(315,328,o),
(604,465,o),
(686,504,o),
(687,505,qs),
(694,511,o),
(694,519,qs),
(694,525,o),
(685,540,o),
(678,540,qs),
(664,540,o),
(91,266,q),
(83,261,o),
(83,250,qs),
(83,240,o),
(90,235,q),
(234,166,ls),
(377,98,o),
(671,-40,o),
(685,-40,o),
(694,-25,o),
(694,-19,qs)
);
},
{
closed = 1;
nodes = (
(560,179,o),
(602,220,o),
(602,280,o),
(562,321,o),
(532,321,qs),
(510,321,o),
(485,304,qs),
(461,285,o),
(461,250,qs),
(461,220,o),
(503,179,o),
(532,179,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 46 values pushed */
20 1 3 2 1 76 0 1 2 1 133 0 0 3 0 134 0 2 3 3 2 89 0 2 2 3 97 4 1 3 2 3 81 24 24 24 35 24 34 31 29 24 17 5 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22D6;
unicode = 8918;
},
{
glyphname = uni22D7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(90,504,o),
(378,368,qs),
(514,303,o),
(626,250,q),
(378,132,ls),
(90,-4,o),
(86,-9,q),
(83,-15,o),
(83,-20,qs),
(83,-38,o),
(101,-40,qs),
(107,-40,l),
(395,96,ls),
(685,233,o),
(687,235,qs),
(694,240,o),
(694,260,o),
(687,265,q),
(544,334,ls),
(400,402,o),
(106,540,o),
(99,540,qs),
(93,540,o),
(84,527,o),
(84,513,o),
(86,509,q)
);
},
{
closed = 1;
nodes = (
(215,321,o),
(175,280,o),
(175,220,o),
(216,179,o),
(246,179,qs),
(277,179,o),
(316,219,o),
(316,281,o),
(274,321,o),
(244,321,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
21 1 1 2 1 76 16 1 1 73 0 0 2 0 133 3 1 2 1 1 2 89 3 1 2 2 1 97 0 1 2 1 81 26 26 26 35 26 34 31 29 34 4 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22D7;
unicode = 8919;
},
{
glyphname = uni22D8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(632,-33,o),
(117,250,q),
(630,531,o),
(633,534,qs),
(639,540,o),
(639,548,qs),
(639,562,o),
(625,567,q),
(622,567,o),
(619,568,q),
(615,567,ls),
(610,565,o),
(62,266,o),
(59,261,qs),
(56,257,o),
(56,243,o),
(59,239,qs),
(61,235,o),
(319,93,o),
(596,-58,o),
(605,-63,qs),
(614,-67,o),
(619,-67,qs),
(627,-67,o),
(639,-56,o),
(639,-40,o),
(633,-34,qs)
);
},
{
closed = 1;
nodes = (
(951,-33,o),
(436,250,q),
(949,531,o),
(952,534,qs),
(958,540,o),
(958,548,qs),
(958,562,o),
(944,567,q),
(941,567,o),
(938,568,q),
(934,567,ls),
(929,565,o),
(381,266,o),
(378,261,qs),
(375,257,o),
(375,243,o),
(378,239,qs),
(380,235,o),
(638,93,o),
(915,-58,o),
(924,-63,qs),
(933,-67,o),
(938,-67,qs),
(946,-67,o),
(958,-56,o),
(958,-40,o),
(952,-34,qs)
);
},
{
closed = 1;
nodes = (
(1270,-33,o),
(755,250,q),
(1268,531,o),
(1271,534,qs),
(1277,540,o),
(1277,548,qs),
(1277,562,o),
(1263,567,q),
(1260,567,o),
(1257,568,q),
(1253,567,ls),
(1248,565,o),
(700,266,o),
(697,261,qs),
(694,257,o),
(694,243,o),
(697,239,qs),
(699,235,o),
(957,93,o),
(1234,-58,o),
(1243,-63,qs),
(1252,-67,o),
(1257,-67,qs),
(1265,-67,o),
(1277,-56,o),
(1277,-40,o),
(1271,-34,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
78 74 51 47 24 20 6 0 74 2 1 2 0 0 118 58 56 31 29 34 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 1333;
}
);
note = uni22D8;
unicode = 8920;
},
{
glyphname = uni22D9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(81,-67,o),
(359,80,o),
(649,234,o),
(653,236,q),
(658,241,o),
(658,259,o),
(653,264,q),
(650,265,o),
(363,418,o),
(81,567,o),
(77,567,qs),
(69,567,l),
(55,562,o),
(55,548,qs),
(55,540,o),
(61,534,qs),
(62,533,o),
(90,517,o),
(172,474,o),
(279,418,o),
(482,310,o),
(595,250,q),
(388,141,o),
(61,-34,q),
(55,-40,o),
(55,-56,o),
(67,-67,o),
(75,-67,qs),
(77,-67,ls)
);
},
{
closed = 1;
nodes = (
(364,563,o),
(364,547,qs),
(364,540,o),
(370,534,qs),
(373,531,o),
(475,478,o),
(751,332,o),
(904,250,q),
(370,-34,l),
(364,-40,o),
(364,-47,qs),
(364,-55,o),
(376,-67,o),
(383,-67,qs),
(391,-67,o),
(649,68,o),
(936,222,o),
(955,231,q),
(967,239,o),
(967,261,o),
(955,269,qs),
(941,276,o),
(650,430,o),
(387,568,o),
(384,568,q),
(381,567,ls)
);
},
{
closed = 1;
nodes = (
(674,564,o),
(674,548,qs),
(674,537,o),
(680,533,qs),
(682,531,o),
(766,487,o),
(1045,340,o),
(1213,250,q),
(947,109,ls),
(681,-32,o),
(680,-33,qs),
(674,-38,o),
(674,-47,qs),
(674,-67,o),
(692,-67,qs),
(700,-67,o),
(1270,233,o),
(1273,239,q),
(1277,244,o),
(1277,256,o),
(1273,261,q),
(1271,265,o),
(989,415,o),
(709,562,o),
(708,562,q),
(695,568,o),
(690,567,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 35 values pushed */
73 46 6 3 0 1 1 76 0 1 0 1 133 3 2 4 3 0 0 118 1 0 67 65 41 39 18 16 0 28 1 27 5 6 22 
CALL[ ]	/* CallFunction */";
};
width = 1333;
}
);
note = uni22D9;
unicode = 8921;
},
{
glyphname = uni22DA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(628,878,o),
(107,678,o),
(95,673,qs),
(88,670,o),
(86,666,qs),
(82,660,o),
(85,644,o),
(90,640,qs),
(92,638,o),
(646,425,o),
(655,425,qs),
(673,425,o),
(673,443,qs),
(673,458,o),
(661,462,qs),
(657,464,o),
(631,474,qs),
(478,532,o),
(160,655,q),
(663,848,o),
(665,850,q),
(674,856,o),
(674,866,qs),
(674,874,o),
(662,886,o),
(654,886,qs),
(652,886,o),
(646,884,qs)
);
},
{
closed = 1;
nodes = (
(84,237,o),
(98,230,q),
(659,230,l),
(674,238,o),
(674,250,qs),
(674,263,o),
(658,270,q),
(99,270,l),
(84,261,o),
(84,250,qs)
);
},
{
closed = 1;
nodes = (
(83,45,o),
(92,40,q),
(93,39,o),
(299,-41,o),
(563,-142,o),
(597,-155,q),
(345,-252,o),
(157,-324,qs),
(95,-348,o),
(92,-349,q),
(83,-354,o),
(83,-368,qs),
(85,-386,o),
(104,-386,qs),
(106,-386,o),
(664,-173,o),
(667,-170,qs),
(674,-165,o),
(674,-155,qs),
(674,-144,o),
(664,-138,qs),
(659,-135,o),
(108,75,o),
(104,76,q),
(96,76,o),
(83,64,o),
(83,55,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
58 52 2 3 2 1 76 8 1 2 0 74 0 0 1 0 133 0 3 2 3 134 0 1 2 2 1 87 0 1 1 2 95 0 2 1 2 79 46 20 28 47 4 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22DA;
unicode = 8922;
},
{
glyphname = uni22DB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,856,o),
(92,850,qs),
(93,849,o),
(299,769,o),
(563,668,o),
(597,655,q),
(96,462,ls),
(83,456,o),
(83,445,qs),
(83,437,o),
(94,425,o),
(102,425,qs),
(111,425,o),
(665,638,o),
(667,640,qs),
(674,645,o),
(674,665,o),
(667,670,qs),
(663,673,o),
(109,885,o),
(104,886,q),
(95,886,o),
(83,874,o),
(83,866,qs)
);
},
{
closed = 1;
nodes = (
(84,237,o),
(98,230,q),
(659,230,l),
(674,238,o),
(674,250,qs),
(674,263,o),
(658,270,q),
(99,270,l),
(84,261,o),
(84,250,qs)
);
},
{
closed = 1;
nodes = (
(640,72,o),
(363,-34,o),
(94,-137,o),
(93,-138,q),
(83,-144,o),
(83,-155,qs),
(83,-165,o),
(90,-170,qs),
(92,-172,o),
(650,-386,o),
(654,-386,qs),
(672,-386,o),
(674,-368,qs),
(674,-354,o),
(665,-349,qs),
(660,-347,o),
(547,-304,o),
(291,-206,o),
(160,-155,q),
(663,38,o),
(665,40,q),
(674,46,o),
(674,56,qs),
(674,63,o),
(662,76,o),
(654,76,qs),
(650,76,o),
(648,75,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 52 values pushed */
23 17 2 1 0 48 42 2 4 3 2 76 0 0 1 0 133 0 1 2 1 133 0 4 3 4 134 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 50 49 20 30 24 17 5 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22DB;
unicode = 8923;
},
{
glyphname = uni22DE;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,440,o),
(86,435,q),
(90,424,o),
(113,424,qs),
(259,424,o),
(490,517,o),
(542,595,qs),
(575,648,o),
(583,711,q),
(583,731,o),
(564,734,q),
(552,734,o),
(544,722,o),
(542,707,qs),
(531,634,o),
(478,580,qs),
(372,474,o),
(121,464,qs),
(96,464,l),
(83,453,o),
(83,444,qs)
);
},
{
closed = 1;
nodes = (
(688,70,o),
(669,112,qs),
(617,217,o),
(465,266,qs),
(426,279,o),
(387,287,qs),
(379,288,o),
(372,290,q),
(434,302,o),
(538,340,o),
(630,402,o),
(687,494,o),
(693,552,qs),
(693,558,ls),
(693,577,o),
(675,580,q),
(656,580,o),
(653,556,qs),
(647,503,o),
(620,464,qs),
(538,342,o),
(270,317,qs),
(196,310,o),
(118,310,qs),
(98,310,o),
(94,307,qs),
(83,300,o),
(83,290,qs),
(83,277,o),
(94,273,q),
(99,270,o),
(118,270,qs),
(249,270,o),
(352,252,qs),
(631,206,o),
(653,24,qs),
(657,0,o),
(672,0,qs),
(686,0,o),
(694,17,q),
(693,28,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 71 values pushed */
11 1 6 1 47 1 0 6 20 1 2 0 53 1 4 5 21 1 3 4 5 76 0 1 6 1 133 0 6 0 6 133 0 3 4 3 134 0 0 0 2 5 0 2 105 0 5 4 4 5 89 0 5 5 4 97 0 4 5 4 81 22 23 36 37 38 21 33 7 6 29 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22DE;
unicode = 8926;
},
{
glyphname = uni22DF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(694,455,o),
(681,464,q),
(656,464,ls),
(405,474,o),
(299,580,qs),
(246,634,o),
(235,707,qs),
(232,734,o),
(215,734,qs),
(207,734,o),
(195,722,o),
(195,713,qs),
(195,657,o),
(235,595,qs),
(319,471,o),
(531,436,qs),
(601,424,o),
(664,424,qs),
(694,424,o),
(694,443,qs)
);
},
{
closed = 1;
nodes = (
(83,541,o),
(96,500,qs),
(138,371,o),
(312,314,qs),
(351,301,o),
(390,293,qs),
(398,292,o),
(405,290,q),
(293,267,o),
(229,231,qs),
(127,176,o),
(96,80,qs),
(83,39,o),
(83,18,qs),
(83,11,o),
(96,0,o),
(103,0,qs),
(107,0,o),
(112,3,qs),
(122,8,o),
(124,27,qs),
(146,183,o),
(358,238,qs),
(469,267,o),
(664,270,qs),
(681,271,o),
(694,278,o),
(694,290,qs),
(694,295,o),
(691,301,q),
(684,308,o),
(678,310,o),
(659,310,qs),
(613,310,o),
(553,314,qs),
(271,330,o),
(173,442,qs),
(133,490,o),
(124,553,qs),
(121,580,o),
(104,580,qs),
(96,580,o),
(83,570,o),
(83,562,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 53 values pushed */
63 1 2 3 55 1 5 4 2 76 0 1 3 1 133 0 3 2 3 133 0 2 0 0 4 2 0 105 0 4 5 5 4 87 0 4 4 5 97 0 5 4 5 81 38 68 36 36 39 32 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22DF;
unicode = 8927;
},
{
glyphname = uni22E0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,-137,o),
(205,-139,q),
(147,-280,l),
(145,-289,o),
(159,-303,o),
(167,-303,qs),
(174,-303,o),
(181,-296,qs),
(183,-294,o),
(222,-202,qs),
(249,-137,l),
(465,-137,l),
(681,-136,l),
(694,-127,o),
(694,-117,qs),
(694,-104,o),
(679,-97,q),
(472,-97,ls),
(266,-97,o),
(266,-95,q),
(267,-93,o),
(348,101,o),
(388,196,qs),
(428,292,l),
(429,292,ls),
(440,292,o),
(490,272,qs),
(593,230,o),
(633,152,q),
(647,120,o),
(653,84,q),
(653,81,o),
(655,73,o),
(656,68,o),
(656,67,q),
(661,57,o),
(675,57,qs),
(694,57,o),
(694,77,qs),
(694,82,o),
(688,115,qs),
(654,263,o),
(466,323,qs),
(444,330,o),
(444,331,q),
(452,350,l),
(460,369,l),
(470,372,ls),
(583,409,o),
(639,479,qs),
(671,517,o),
(686,571,qs),
(694,606,o),
(694,616,qs),
(694,624,o),
(683,637,o),
(674,637,qs),
(656,637,o),
(653,609,qs),
(651,592,o),
(641,560,q),
(607,473,o),
(501,426,qs),
(496,424,o),
(484,419,o),
(480,418,q),
(481,420,o),
(500,466,o),
(539,557,o),
(556,599,qs),
(631,778,o),
(631,783,qs),
(631,791,o),
(619,803,o),
(611,803,qs),
(598,803,o),
(593,791,q),
(591,789,o),
(510,594,qs),
(430,401,l),
(411,397,ls),
(303,370,o),
(137,367,qs),
(98,367,o),
(94,365,qs),
(84,358,o),
(84,336,o),
(94,329,qs),
(98,327,o),
(137,327,qs),
(282,324,o),
(381,304,qs),
(389,303,l),
(361,236,o),
(250,-30,o),
(223,-97,q),
(98,-97,l),
(84,-104,o),
(84,-130,o),
(98,-137,q),
(152,-137,ls)
);
},
{
closed = 1;
nodes = (
(410,353,o),
(404,340,o),
(402,340,o),
(374,346,o),
(373,347,q),
(409,355,l),
(410,354,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 94 values pushed */
102 55 2 1 2 7 1 6 1 2 76 0 3 4 3 133 0 4 2 4 133 0 6 1 5 1 6 5 128 0 5 0 1 5 0 126 0 9 8 9 134 0 2 0 1 6 2 1 105 7 1 0 8 8 0 87 7 1 0 0 8 95 11 10 2 8 0 8 79 0 0 0 100 0 98 95 93 89 87 83 79 75 74 64 62 44 42 22 52 37 19 12 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22E0;
unicode = 8928;
},
{
glyphname = uni22E1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(205,-137,o),
(205,-139,q),
(147,-280,l),
(145,-289,o),
(159,-303,o),
(167,-303,qs),
(174,-303,o),
(181,-296,qs),
(183,-294,o),
(222,-202,qs),
(249,-137,l),
(465,-137,l),
(681,-136,l),
(694,-127,o),
(694,-117,qs),
(694,-104,o),
(679,-97,q),
(472,-97,ls),
(266,-97,o),
(266,-95,q),
(308,6,ls),
(350,108,o),
(436,311,o),
(438,312,qs),
(445,314,o),
(497,319,qs),
(572,326,o),
(640,327,qs),
(679,327,o),
(683,329,qs),
(694,336,o),
(694,347,qs),
(694,352,o),
(691,358,q),
(684,365,o),
(678,367,o),
(659,367,qs),
(582,367,o),
(525,373,qs),
(465,376,o),
(465,382,o),
(630,776,o),
(630,779,q),
(632,789,o),
(618,802,o),
(609,802,qs),
(597,802,o),
(593,792,qs),
(591,787,o),
(426,391,o),
(423,386,q),
(421,386,ls),
(411,386,o),
(363,398,qs),
(198,438,o),
(145,540,qs),
(130,572,o),
(124,609,qs),
(121,637,o),
(103,637,qs),
(94,637,o),
(83,624,o),
(83,616,qs),
(83,606,o),
(91,571,qs),
(106,517,o),
(138,479,qs),
(215,384,o),
(392,350,qs),
(398,349,o),
(404,347,q),
(219,313,o),
(138,216,qs),
(102,172,o),
(89,115,qs),
(83,82,o),
(83,77,qs),
(83,68,o),
(95,57,o),
(111,57,o),
(119,63,o),
(122,73,o),
(124,84,qs),
(130,120,o),
(144,152,qs),
(196,258,o),
(376,300,qs),
(389,303,l),
(386,296,o),
(365,246,o),
(321,140,o),
(302,95,qs),
(223,-97,l),
(98,-97,l),
(84,-104,o),
(84,-130,o),
(98,-137,q),
(152,-137,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 98 values pushed */
34 1 3 2 26 1 6 5 20 9 2 1 6 3 76 0 4 2 4 133 0 2 3 2 133 0 3 5 3 133 0 1 6 0 6 1 0 128 0 9 8 9 134 0 5 0 6 1 5 6 105 7 1 0 8 8 0 87 7 1 0 0 8 95 11 10 2 8 0 8 79 0 0 0 97 0 95 92 90 86 84 80 77 70 67 61 59 52 50 45 44 38 36 29 19 12 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22E1;
unicode = 8929;
},
{
glyphname = uni22E6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,728,o),
(104,465,o),
(96,461,qs),
(84,455,o),
(83,444,qs),
(83,432,o),
(90,427,qs),
(92,425,o),
(382,288,qs),
(670,152,l),
(676,152,ls),
(694,154,o),
(694,172,qs),
(694,177,o),
(691,183,q),
(687,188,o),
(399,324,qs),
(263,389,o),
(151,442,q),
(315,520,o),
(604,657,o),
(686,696,o),
(687,697,qs),
(694,703,o),
(694,719,o),
(683,732,o),
(674,732,qs),
(671,732,o),
(665,730,qs)
);
},
{
closed = 1;
nodes = (
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(530,-171,o),
(509,-164,qs),
(473,-152,o),
(426,-113,qs),
(415,-104,l),
(444,-54,ls),
(472,-3,o),
(528,103,o),
(528,107,qs),
(528,115,o),
(516,127,o),
(508,127,qs),
(499,127,o),
(493,121,q),
(493,120,o),
(478,94,o),
(450,44,o),
(438,21,qs),
(385,-77,l),
(370,-64,ls),
(306,-8,o),
(252,3,qs),
(244,5,o),
(220,5,qs),
(202,5,o),
(196,4,qs),
(136,-8,o),
(56,-117,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs),
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(247,-51,o),
(268,-58,qs),
(304,-70,o),
(351,-109,qs),
(362,-118,l),
(334,-168,ls),
(306,-218,o),
(250,-323,o),
(249,-328,q),
(249,-349,o),
(270,-349,qs),
(279,-348,o),
(293,-327,o),
(338,-244,qs),
(392,-145,l),
(407,-158,ls),
(471,-214,o),
(525,-225,qs),
(533,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
23 9 2 6 0 88 74 50 40 4 7 3 46 1 2 1 3 76 0 0 6 0 133 0 6 5 6 133 0 2 1 2 134 9 8 2 5 0 3 7 5 3 105 0 7 1 1 7 89 0 7 7 1 97 4 1 1 7 1 81 29 29 29 99 29 98 93 92 81 80 70 67 62 60 55 54 45 44 36 33 32 10 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22E6;
unicode = 8934;
},
{
glyphname = uni22E7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,704,o),
(90,697,q),
(626,442,l),
(378,324,ls),
(90,188,o),
(86,183,q),
(83,177,o),
(83,172,qs),
(83,154,o),
(101,152,qs),
(107,152,l),
(395,288,ls),
(685,425,o),
(687,427,qs),
(694,432,o),
(694,452,o),
(687,457,qs),
(686,458,o),
(400,595,o),
(107,732,o),
(99,732,qs),
(92,732,o),
(83,719,o),
(83,713,qs)
);
},
{
closed = 1;
nodes = (
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(530,-171,o),
(509,-164,qs),
(473,-152,o),
(426,-113,qs),
(415,-104,l),
(444,-54,ls),
(472,-3,o),
(528,103,o),
(528,107,qs),
(528,115,o),
(516,127,o),
(508,127,qs),
(499,127,o),
(493,121,q),
(493,120,o),
(478,94,o),
(450,44,o),
(438,21,qs),
(385,-77,l),
(370,-64,ls),
(306,-8,o),
(252,3,qs),
(244,5,o),
(220,5,qs),
(202,5,o),
(196,4,qs),
(136,-8,o),
(56,-117,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs),
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(247,-51,o),
(268,-58,qs),
(304,-70,o),
(351,-109,qs),
(362,-118,l),
(334,-168,ls),
(306,-218,o),
(250,-323,o),
(249,-328,q),
(249,-349,o),
(270,-349,qs),
(279,-348,o),
(293,-327,o),
(338,-244,qs),
(392,-145,l),
(407,-158,ls),
(471,-214,o),
(525,-225,qs),
(533,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
23 20 15 3 6 0 83 69 45 35 4 7 3 41 1 2 1 3 76 0 0 6 0 133 0 6 5 6 133 0 2 1 2 134 9 8 2 5 0 3 7 5 3 105 0 7 1 1 7 89 0 7 7 1 97 4 1 1 7 1 81 24 24 24 94 24 93 88 87 76 75 65 62 57 55 50 49 40 39 31 28 33 10 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22E7;
unicode = 8935;
},
{
glyphname = uni22E8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(692,199,o),
(685,223,qs),
(653,332,o),
(533,392,q),
(495,408,o),
(472,416,qs),
(466,418,o),
(373,442,q),
(564,481,o),
(639,573,qs),
(686,629,o),
(694,708,q),
(694,729,o),
(676,732,q),
(664,732,o),
(655,720,o),
(653,705,qs),
(645,644,o),
(606,597,qs),
(521,494,o),
(281,470,qs),
(204,463,o),
(137,462,qs),
(98,462,o),
(94,460,qs),
(84,453,o),
(84,431,o),
(94,424,qs),
(98,422,o),
(137,422,qs),
(204,421,o),
(281,414,qs),
(521,390,o),
(606,287,qs),
(645,240,o),
(653,179,qs),
(655,163,o),
(663,153,o),
(674,153,qs),
(694,153,o),
(694,176,qs)
);
},
{
closed = 1;
nodes = (
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(530,-171,o),
(509,-164,qs),
(473,-152,o),
(426,-113,qs),
(415,-104,l),
(444,-54,ls),
(472,-3,o),
(528,103,o),
(528,107,qs),
(528,115,o),
(516,127,o),
(508,127,qs),
(499,127,o),
(493,121,q),
(493,120,o),
(478,94,o),
(450,44,o),
(438,21,qs),
(385,-77,l),
(370,-64,ls),
(306,-8,o),
(252,3,qs),
(244,5,o),
(220,5,qs),
(202,5,o),
(196,4,qs),
(136,-8,o),
(56,-117,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs),
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(247,-51,o),
(268,-58,qs),
(304,-70,o),
(351,-109,qs),
(362,-118,l),
(334,-168,ls),
(306,-218,o),
(250,-323,o),
(249,-328,q),
(249,-349,o),
(270,-349,qs),
(279,-348,o),
(293,-327,o),
(338,-244,qs),
(392,-145,l),
(407,-158,ls),
(471,-214,o),
(525,-225,qs),
(533,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 112 values pushed */
28 1 2 3 32 1 1 2 40 1 0 1 100 86 62 52 4 10 6 58 1 5 4 5 76 0 3 2 3 133 0 0 1 9 1 0 9 128 0 9 8 1 9 8 126 0 5 4 5 134 0 2 0 1 0 2 1 105 12 11 2 8 0 6 10 8 6 105 0 10 4 4 10 89 0 10 10 4 97 7 1 4 10 4 81 41 41 41 111 41 110 105 104 93 92 82 79 74 72 67 66 57 56 48 45 23 52 39 32 13 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22E8;
unicode = 8936;
},
{
glyphname = uni22E9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(672,463,o),
(650,462,o),
(640,462,qs),
(572,463,o),
(497,470,qs),
(256,494,o),
(171,597,qs),
(132,644,o),
(124,705,qs),
(122,724,o),
(112,729,qs),
(106,732,o),
(102,732,qs),
(84,732,o),
(84,710,qs),
(84,695,o),
(92,661,q),
(125,551,o),
(245,492,qs),
(279,477,o),
(305,468,qs),
(311,466,o),
(404,442,q),
(213,403,o),
(138,311,qs),
(91,255,o),
(83,176,q),
(83,153,o),
(103,153,qs),
(114,153,o),
(122,163,o),
(124,179,qs),
(139,283,o),
(235,341,qs),
(358,416,o),
(640,422,qs),
(679,422,o),
(683,424,qs),
(694,431,o),
(694,442,qs),
(694,452,o),
(682,463,o),
(674,463,qs)
);
},
{
closed = 1;
nodes = (
(696,6,o),
(694,-29,qs),
(692,-76,o),
(636,-152,o),
(595,-165,qs),
(578,-171,o),
(530,-171,o),
(509,-164,qs),
(473,-152,o),
(426,-113,qs),
(415,-104,l),
(444,-54,ls),
(472,-3,o),
(528,103,o),
(528,107,qs),
(528,115,o),
(516,127,o),
(508,127,qs),
(499,127,o),
(493,121,q),
(493,120,o),
(478,94,o),
(450,44,o),
(438,21,qs),
(385,-77,l),
(370,-64,ls),
(306,-8,o),
(252,3,qs),
(244,5,o),
(220,5,qs),
(202,5,o),
(196,4,qs),
(136,-8,o),
(56,-117,o),
(56,-194,qs),
(56,-202,ls),
(56,-229,o),
(70,-229,qs),
(81,-229,o),
(83,-196,qs),
(86,-145,o),
(141,-70,o),
(182,-57,qs),
(199,-51,o),
(247,-51,o),
(268,-58,qs),
(304,-70,o),
(351,-109,qs),
(362,-118,l),
(334,-168,ls),
(306,-218,o),
(250,-323,o),
(249,-328,q),
(249,-349,o),
(270,-349,qs),
(279,-348,o),
(293,-327,o),
(338,-244,qs),
(392,-145,l),
(407,-158,ls),
(471,-214,o),
(525,-225,qs),
(533,-227,o),
(557,-227,qs),
(575,-227,o),
(581,-226,qs),
(641,-214,o),
(722,-103,o),
(722,-26,qs),
(722,6,o),
(707,6,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 114 values pushed */
19 1 0 3 15 1 1 0 102 88 64 54 4 10 6 60 1 5 4 4 76 0 2 3 2 133 0 1 0 9 0 1 9 128 0 9 8 0 9 8 126 0 5 4 5 134 12 1 3 0 0 1 3 0 105 13 11 2 8 0 6 10 8 6 105 0 10 4 4 10 89 0 10 10 4 97 7 1 4 10 4 81 43 43 0 0 43 113 43 112 107 106 95 94 84 81 76 74 69 68 59 58 50 47 0 42 0 38 30 37 52 14 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22E9;
unicode = 8937;
},
{
glyphname = uni22EA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,-40,o),
(692,-28,qs),
(694,-24,o),
(694,524,o),
(692,528,qs),
(685,543,o),
(669,539,q),
(505,462,l),
(602,679,o),
(602,695,o),
(590,706,o),
(574,706,o),
(568,700,q),
(567,698,o),
(508,566,o),
(449,436,o),
(449,435,q),
(448,435,o),
(91,267,o),
(90,264,q),
(75,251,o),
(88,236,qs),
(91,233,o),
(204,180,o),
(312,129,o),
(312,127,q),
(278,52,ls),
(244,-24,o),
(175,-181,o),
(175,-187,qs),
(175,-195,o),
(186,-206,o),
(194,-206,qs),
(203,-206,o),
(209,-200,q),
(226,-166,o),
(296,-9,o),
(348,111,o),
(350,111,o),
(668,-40,o),
(674,-40,qs)
);
},
{
closed = 1;
nodes = (
(431,116,o),
(366,147,q),
(366,149,l),
(367,151,o),
(371,160,o),
(375,170,o),
(382,186,o),
(389,201,o),
(398,223,o),
(406,241,o),
(418,267,o),
(422,277,qs),
(480,406,l),
(509,420,o),
(625,474,o),
(654,488,q),
(654,11,l),
(510,79,ls)
);
},
{
closed = 1;
nodes = (
(425,379,o),
(423,377,qs),
(421,374,o),
(329,166,o),
(329,165,q),
(239,207,l),
(150,249,l),
(345,340,o),
(423,379,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 34 values pushed */
62 60 42 41 35 32 14 7 2 1 1 76 0 1 2 1 133 0 2 0 2 133 0 0 0 118 40 39 29 28 22 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22EA;
unicode = 8938;
},
{
glyphname = uni22EB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(97,542,o),
(89,534,qs),
(88,533,ls),
(86,532,o),
(86,531,o),
(85,526,o),
(84,520,o),
(83,507,o),
(83,490,o),
(83,463,o),
(83,429,o),
(83,406,qs),
(83,249,ls),
(83,-24,o),
(85,-28,qs),
(90,-40,o),
(103,-40,qs),
(109,-40,o),
(271,37,q),
(272,37,o),
(248,-17,o),
(223,-72,qs),
(175,-179,o),
(175,-195,o),
(186,-206,o),
(194,-206,qs),
(206,-206,o),
(209,-199,q),
(214,-194,o),
(269,-66,qs),
(327,64,l),
(487,139,ls),
(684,233,o),
(688,235,q),
(694,241,o),
(694,250,qs),
(694,258,o),
(688,264,q),
(631,293,o),
(515,348,o),
(465,371,o),
(465,372,q),
(602,678,o),
(602,687,qs),
(602,695,o),
(590,706,o),
(574,706,o),
(568,700,q),
(551,666,o),
(481,509,o),
(429,389,o),
(428,389,q),
(428,388,o),
(334,432,o),
(194,498,o),
(127,529,o),
(107,539,q)
);
},
{
closed = 1;
nodes = (
(373,265,o),
(297,93,q),
(213,53,ls),
(130,16,o),
(126,12,q),
(123,11,l),
(123,488,l),
(135,482,o),
(405,355,o),
(412,351,q)
);
},
{
closed = 1;
nodes = (
(626,248,o),
(354,120,o),
(353,120,q),
(353,121,o),
(444,325,o),
(447,331,q),
(447,334,o),
(449,334,q),
(627,249,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 32 values pushed */
66 60 59 41 14 5 2 0 1 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 40 38 30 29 25 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22EB;
unicode = 8939;
},
{
glyphname = uni22EC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,57,o),
(692,69,qs),
(694,73,o),
(694,621,o),
(692,625,qs),
(686,641,o),
(668,635,q),
(526,569,l),
(602,776,o),
(602,786,qs),
(602,802,o),
(583,802,qs),
(573,802,o),
(568,797,qs),
(566,795,o),
(516,659,qs),
(475,544,l),
(284,454,ls),
(91,363,o),
(90,361,q),
(75,348,o),
(88,333,qs),
(92,329,o),
(223,267,o),
(350,208,o),
(350,207,q),
(351,206,o),
(297,56,qs),
(284,21,o),
(255,-58,o),
(248,-77,qs),
(241,-96,l),
(241,-97,o),
(172,-97,qs),
(114,-97,o),
(94,-99,o),
(89,-103,qs),
(83,-109,o),
(83,-117,qs),
(83,-129,o),
(94,-135,qs),
(98,-137,o),
(226,-137,o),
(226,-138,q),
(222,-147,ls),
(219,-156,o),
(205,-194,o),
(200,-209,qs),
(175,-277,o),
(175,-291,o),
(187,-303,o),
(195,-303,qs),
(204,-303,o),
(211,-295,o),
(216,-281,qs),
(217,-279,o),
(225,-256,o),
(238,-219,o),
(244,-203,qs),
(269,-137,l),
(475,-137,ls),
(678,-137,o),
(684,-135,q),
(693,-129,o),
(693,-118,qs),
(693,-109,o),
(687,-103,qs),
(685,-101,o),
(685,-101,q),
(681,-98,o),
(481,-97,qs),
(283,-96,l),
(335,46,ls),
(364,125,o),
(388,189,q),
(389,189,o),
(668,57,o),
(674,57,qs)
);
},
{
closed = 1;
nodes = (
(459,200,o),
(402,228,q),
(408,246,ls),
(415,265,o),
(442,340,o),
(454,372,qs),
(507,515,l),
(556,539,o),
(654,585,q),
(654,108,l),
(528,168,ls)
);
},
{
closed = 1;
nodes = (
(319,266,o),
(256,296,o),
(194,326,o),
(172,336,qs),
(150,347,l),
(302,419,ls),
(454,491,o),
(455,491,q),
(455,490,o),
(364,245,q),
(342,256,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 61 values pushed */
94 86 79 78 72 69 6 6 5 38 1 1 0 2 76 0 5 6 5 133 0 6 0 6 133 0 2 1 2 134 4 1 0 1 1 0 89 4 1 0 0 1 97 3 1 1 0 1 81 77 76 66 64 39 40 23 55 37 7 6 27 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22EC;
unicode = 8940;
},
{
glyphname = uni22ED;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(570,803,o),
(565,792,q),
(565,791,o),
(507,633,o),
(478,554,qs),
(449,476,l),
(449,475,o),
(349,522,o),
(199,592,o),
(129,626,o),
(107,636,q),
(97,639,o),
(89,631,qs),
(88,630,ls),
(86,629,o),
(86,628,o),
(85,623,o),
(84,617,o),
(83,604,o),
(83,587,o),
(83,560,o),
(83,526,o),
(83,503,qs),
(83,346,ls),
(83,73,o),
(85,69,qs),
(90,57,o),
(103,57,qs),
(107,57,o),
(335,164,q),
(322,128,ls),
(310,91,o),
(267,-27,o),
(245,-86,qs),
(241,-97,l),
(172,-97,ls),
(114,-97,o),
(94,-99,o),
(89,-103,qs),
(83,-109,o),
(83,-117,qs),
(83,-129,o),
(94,-135,qs),
(98,-137,o),
(226,-137,o),
(226,-138,q),
(222,-147,ls),
(219,-156,o),
(205,-194,o),
(200,-209,qs),
(175,-277,o),
(175,-291,o),
(187,-303,o),
(195,-303,qs),
(204,-303,o),
(211,-295,o),
(216,-281,qs),
(217,-279,o),
(225,-256,o),
(238,-219,o),
(244,-203,qs),
(269,-137,l),
(475,-137,ls),
(678,-137,o),
(684,-135,q),
(693,-129,o),
(693,-118,qs),
(693,-109,o),
(687,-103,qs),
(685,-101,o),
(685,-101,q),
(681,-98,o),
(481,-97,qs),
(283,-96,l),
(335,46,ls),
(346,76,o),
(375,154,o),
(382,172,qs),
(388,189,l),
(532,257,ls),
(686,330,o),
(689,333,qs),
(702,348,o),
(687,361,q),
(686,363,o),
(585,411,qs),
(531,436,o),
(486,458,q),
(486,460,o),
(602,778,o),
(602,787,qs),
(602,794,o),
(589,803,o),
(583,803,qs)
);
},
{
closed = 1;
nodes = (
(435,436,o),
(395,327,qs),
(356,218,l),
(246,166,ls),
(218,153,o),
(159,125,o),
(128,111,o),
(123,108,q),
(123,585,l),
(128,583,l),
(130,581,o),
(184,556,o),
(343,482,o),
(435,437,q)
);
},
{
closed = 1;
nodes = (
(473,419,o),
(625,347,q),
(625,346,o),
(518,295,qs),
(457,266,o),
(408,243,q),
(423,287,ls),
(438,331,o),
(470,419,o),
(471,419,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 65 values pushed */
111 99 98 67 63 5 5 6 52 1 1 0 2 76 0 6 5 6 133 0 5 0 5 133 0 2 1 2 134 4 1 0 1 1 0 89 4 1 0 0 1 97 3 1 1 0 1 81 93 92 66 64 58 56 49 47 39 38 31 28 21 19 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni22ED;
unicode = 8941;
},
{
glyphname = uni2322;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(87,123,o),
(97,141,qs),
(134,214,o),
(251,312,o),
(320,329,qs),
(354,338,o),
(390,338,qs),
(511,338,o),
(606,243,qs),
(647,202,o),
(679,144,qs),
(687,127,o),
(693,125,q),
(698,122,o),
(704,122,qs),
(722,124,o),
(722,142,qs),
(722,147,o),
(715,161,qs),
(637,312,o),
(493,361,qs),
(442,378,o),
(388,378,qs),
(370,378,o),
(361,377,qs),
(257,368,o),
(171,297,qs),
(113,251,o),
(72,179,qs),
(55,149,o),
(55,142,qs),
(55,133,o),
(68,122,o),
(77,122,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 39 values pushed */
2 1 2 1 1 76 3 1 2 1 2 134 0 0 1 1 0 89 0 0 0 1 97 0 1 0 1 81 0 0 0 33 0 33 46 41 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2322;
unicode = 8994;
},
{
glyphname = uni2323;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(95,274,o),
(241,164,o),
(323,148,qs),
(353,143,o),
(389,143,qs),
(424,143,o),
(454,148,qs),
(531,163,o),
(665,258,o),
(708,328,qs),
(722,352,o),
(722,358,qs),
(722,376,o),
(704,378,qs),
(696,378,o),
(684,369,o),
(680,361,o),
(675,351,qs),
(636,286,o),
(573,241,qs),
(490,182,o),
(389,182,qs),
(256,182,o),
(158,280,qs),
(124,314,o),
(97,359,qs),
(88,377,o),
(77,378,qs),
(56,378,o),
(56,359,qs),
(56,354,o),
(59,346,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
19 1 1 0 1 76 0 0 1 0 133 0 1 2 2 1 89 0 1 1 2 97 0 2 1 2 81 47 37 18 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2323;
unicode = 8995;
},
{
glyphname = uni24C8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(376,709,o),
(316,689,qs),
(242,665,o),
(186,622,qs),
(8,489,o),
(8,267,qs),
(8,181,o),
(40,102,qs),
(75,17,o),
(204,-111,o),
(290,-145,qs),
(366,-175,o),
(451,-175,qs),
(535,-175,o),
(613,-145,qs),
(698,-111,o),
(827,17,o),
(862,102,qs),
(894,181,o),
(894,267,qs),
(894,340,o),
(870,409,qs),
(838,509,o),
(688,656,o),
(587,689,qs),
(522,709,o),
(440,709,qs),
(424,709,ls)
);
},
{
closed = 1;
nodes = (
(854,218,o),
(842,170,qs),
(811,43,o),
(598,-136,o),
(453,-136,qs),
(288,-136,o),
(49,97,o),
(49,267,qs),
(49,282,o),
(51,310,qs),
(65,455,o),
(279,658,o),
(420,669,qs),
(424,669,o),
(444,670,o),
(450,670,qs),
(558,670,o),
(743,566,o),
(854,380,o),
(854,268,qs)
);
},
{
closed = 1;
nodes = (
(273,330,o),
(334,251,o),
(378,237,q),
(386,233,o),
(441,222,qs),
(500,209,o),
(513,202,qs),
(535,190,o),
(562,145,o),
(562,119,qs),
(562,78,o),
(510,26,o),
(471,26,qs),
(400,26,o),
(313,95,o),
(313,158,qs),
(313,164,o),
(307,170,q),
(294,170,ls),
(280,170,o),
(278,169,qs),
(274,167,o),
(273,145,o),
(273,77,qs),
(273,-8,l),
(279,-14,o),
(285,-14,qs),
(292,-14,o),
(293,-13,qs),
(312,6,o),
(330,30,q),
(338,24,ls),
(386,-14,o),
(471,-14,qs),
(540,-14,o),
(629,83,o),
(629,148,qs),
(629,201,o),
(567,284,o),
(522,298,q),
(514,302,o),
(459,313,qs),
(401,327,o),
(389,332,qs),
(340,356,o),
(340,407,qs),
(340,445,o),
(392,491,o),
(432,491,qs),
(542,491,o),
(566,357,q),
(566,350,o),
(572,344,o),
(586,344,qs),
(600,344,l),
(606,350,l),
(606,522,l),
(600,528,o),
(594,528,qs),
(587,528,o),
(586,527,qs),
(576,517,o),
(567,505,qs),
(549,484,l),
(543,489,ls),
(498,528,o),
(428,528,qs),
(424,528,o),
(411,527,o),
(409,527,qs),
(352,519,o),
(273,436,o),
(273,378,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 111 values pushed */
61 1 4 2 63 1 6 4 64 56 2 5 6 89 1 9 8 95 1 7 9 5 76 93 1 7 1 75 0 5 6 8 6 5 8 128 0 8 9 6 8 9 126 10 1 0 0 2 4 0 2 105 0 4 0 6 5 4 6 105 0 9 0 7 3 9 7 105 0 3 1 1 3 89 0 3 3 1 97 0 1 3 1 81 1 0 108 106 102 100 87 85 72 70 67 65 54 50 43 41 33 30 15 13 0 27 1 26 11 6 22 
CALL[ ]	/* CallFunction */";
};
width = 902;
}
);
note = uni24C8;
unicode = 9416;
},
{
glyphname = uni250C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(64,690,o),
(61,688,qs),
(56,683,o),
(55,641,o),
(55,359,o),
(56,317,o),
(61,312,qs),
(67,306,o),
(76,306,qs),
(84,306,o),
(90,312,qs),
(94,316,o),
(95,355,o),
(95,487,qs),
(95,654,l),
(261,654,ls),
(428,654,o),
(432,656,qs),
(443,662,o),
(443,686,o),
(432,692,qs),
(428,694,o),
(250,694,qs),
(71,694,o),
(68,692,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 36 values pushed */
0 2 1 2 134 3 1 0 1 1 0 87 3 1 0 0 1 95 0 1 0 1 79 2 0 16 14 9 6 0 24 2 24 4 6 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni250C;
unicode = 9484;
},
{
glyphname = uni2510;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,686,o),
(56,675,qs),
(56,662,o),
(68,656,qs),
(71,654,o),
(238,654,qs),
(404,654,l),
(404,321,l),
(410,306,o),
(425,306,qs),
(432,306,o),
(438,312,qs),
(443,317,o),
(444,359,o),
(444,641,o),
(443,683,o),
(438,688,qs),
(436,690,o),
(428,694,o),
(250,694,qs),
(71,694,o),
(68,692,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 42 values pushed */
13 1 1 2 1 76 0 1 2 1 134 3 1 0 2 2 0 87 3 1 0 0 2 95 0 2 0 2 79 2 0 16 14 12 10 0 21 2 21 4 6 22 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni2510;
unicode = 9488;
},
{
glyphname = uni2514;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,355,o),
(55,313,o),
(55,31,o),
(56,-11,o),
(61,-16,qs),
(64,-18,o),
(68,-20,qs),
(71,-22,o),
(250,-22,qs),
(428,-22,o),
(432,-20,qs),
(443,-14,o),
(443,10,o),
(432,16,qs),
(428,18,o),
(261,18,qs),
(95,18,l),
(95,351,l),
(91,360,o),
(84,364,q),
(70,369,o),
(61,360,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
3 1 0 74 0 0 1 1 0 87 0 0 0 1 95 0 1 0 1 79 52 36 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni2514;
unicode = 9492;
},
{
glyphname = uni2518;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(238,18,ls),
(71,18,o),
(68,16,qs),
(56,10,o),
(56,-1,qs),
(56,-14,o),
(68,-20,qs),
(71,-22,o),
(250,-22,qs),
(428,-22,o),
(436,-18,o),
(438,-16,qs),
(443,-11,o),
(444,31,o),
(444,313,o),
(443,355,o),
(438,360,qs),
(432,366,o),
(425,366,qs),
(413,366,o),
(404,351,q),
(404,18,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 33 values pushed */
0 1 2 0 1 76 0 0 2 0 133 0 2 1 1 2 87 0 2 2 1 97 0 1 2 1 81 53 41 17 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni2518;
unicode = 9496;
},
{
glyphname = uni2571;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(826,690,o),
(4,-161,o),
(2,-166,qs),
(0,-172,o),
(0,-175,qs),
(0,-183,o),
(12,-194,o),
(20,-194,qs),
(24,-194,o),
(28,-192,qs),
(32,-191,o),
(855,660,o),
(857,664,qs),
(860,668,o),
(860,674,qs),
(860,682,o),
(847,694,o),
(839,694,qs),
(837,694,o),
(831,692,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 32 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 889;
}
);
note = uni2571;
unicode = 9585;
},
{
glyphname = uni2572;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(4,661,o),
(826,-190,o),
(831,-192,qs),
(837,-194,o),
(839,-194,qs),
(847,-194,o),
(860,-182,o),
(860,-174,qs),
(860,-169,o),
(857,-164,qs),
(855,-160,o),
(31,691,o),
(28,692,qs),
(22,694,o),
(20,694,qs),
(12,694,o),
(0,683,o),
(0,675,qs),
(0,669,o),
(2,666,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 0 1 0 133 0 1 1 118 40 35 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 889;
}
);
note = uni2572;
unicode = 9586;
},
{
glyphname = filledbox;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(709,1,l),
(720,10,o),
(722,15,q),
(722,674,l),
(719,681,o),
(709,689,q),
(70,689,l),
(63,685,o),
(56,676,q),
(55,346,l),
(55,16,l),
(59,4,o),
(71,0,q),
(390,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 29 values pushed */
10 9 4 2 4 1 0 1 76 0 0 1 0 133 2 1 1 1 118 0 0 0 13 0 12 22 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = filledbox;
unicode = 9632;
},
{
glyphname = uni25A1;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(709,1,l),
(720,10,o),
(722,15,q),
(722,674,l),
(719,681,o),
(709,689,q),
(70,689,l),
(63,685,o),
(56,676,q),
(55,346,l),
(55,16,l),
(59,4,o),
(71,0,q),
(390,0,l)
);
},
{
closed = 1;
nodes = (
(95,649,l),
(682,649,l),
(682,40,l),
(95,40,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 57 values pushed */
9 4 2 2 0 10 2 2 1 3 2 76 0 0 0 2 3 0 2 103 5 1 3 1 1 3 87 5 1 3 3 1 95 4 1 1 3 1 79 14 14 0 0 14 17 14 17 16 15 0 13 0 12 22 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni25A1;
unicode = 9633;
},
{
glyphname = triagup;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,-11,o),
(637,0,qs),
(637,5,o),
(506,290,o),
(376,569,o),
(375,570,qs),
(370,575,o),
(361,575,qs),
(348,575,o),
(342,563,qs),
(278,424,ls),
(213,286,o),
(84,5,o),
(84,0,qs),
(84,-11,o),
(99,-20,q),
(622,-20,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
2 1 1 0 1 76 0 0 1 0 133 2 1 1 1 118 0 0 0 16 0 16 39 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = triagup;
unicode = 9650;
},
{
glyphname = uni25B3;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(637,-11,o),
(637,0,qs),
(637,5,o),
(506,290,o),
(376,569,o),
(375,570,qs),
(370,575,o),
(361,575,qs),
(348,575,o),
(342,563,qs),
(278,424,ls),
(213,286,o),
(84,5,o),
(84,0,qs),
(84,-11,o),
(99,-20,q),
(622,-20,l)
);
},
{
closed = 1;
nodes = (
(586,20,o),
(360,20,qs),
(135,20,o),
(135,22,q),
(137,24,o),
(248,266,qs),
(360,509,l),
(472,266,ls),
(584,24,o),
(586,21,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 44 values pushed */
19 1 2 0 2 1 1 2 2 76 0 0 2 0 133 0 2 1 1 2 87 0 2 2 1 95 3 1 1 2 1 79 0 0 25 21 0 16 0 16 39 4 6 23 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni25B3;
unicode = 9651;
},
{
glyphname = uni25B6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(395,95,ls),
(685,232,o),
(687,234,qs),
(694,239,o),
(694,249,qs),
(694,262,o),
(680,268,qs),
(671,273,o),
(107,539,o),
(103,539,qs),
(92,539,o),
(83,523,q),
(83,-26,l),
(90,-40,o),
(101,-41,qs),
(107,-41,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
3 2 2 0 1 1 76 0 1 0 1 133 2 1 0 0 118 1 0 5 4 0 15 1 15 3 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni25B6;
unicode = 9654;
},
{
glyphname = triagdn;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,-19,o),
(361,-19,qs),
(370,-19,o),
(375,-14,qs),
(376,-13,o),
(506,266,o),
(637,551,o),
(637,556,qs),
(637,567,o),
(622,576,q),
(99,576,l),
(84,567,o),
(84,545,o),
(342,-7,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
5 1 1 0 1 76 0 0 1 0 133 0 1 1 118 39 18 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = triagdn;
unicode = 9660;
},
{
glyphname = uni25BD;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(348,-19,o),
(361,-19,qs),
(370,-19,o),
(375,-14,qs),
(376,-13,o),
(506,266,o),
(637,551,o),
(637,556,qs),
(637,567,o),
(622,576,q),
(99,576,l),
(84,567,o),
(84,545,o),
(342,-7,qs)
);
},
{
closed = 1;
nodes = (
(584,532,o),
(473,290,qs),
(361,47,l),
(289,201,o),
(135,535,q),
(135,536,o),
(361,536,qs),
(586,536,o),
(586,534,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 2 0 19 1 1 2 2 76 0 1 2 1 134 0 0 2 2 0 87 0 0 0 2 95 3 1 2 0 2 79 16 14 14 22 16 21 39 18 4 6 24 
CALL[ ]	/* CallFunction */";
};
width = 722;
}
);
note = uni25BD;
unicode = 9661;
},
{
glyphname = uni25C0;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(687,539,o),
(674,539,qs),
(671,539,o),
(665,537,qs),
(657,533,o),
(101,270,o),
(96,267,q),
(83,262,o),
(83,249,qs),
(83,239,o),
(90,234,qs),
(92,232,o),
(382,95,qs),
(670,-41,l),
(676,-41,ls),
(687,-40,o),
(694,-26,q),
(694,524,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 13 values pushed */
17 0 2 0 73 0 0 0 118 31 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni25C0;
unicode = 9664;
},
{
glyphname = lozenge;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,707,o),
(73,326,o),
(60,305,qs),
(56,298,o),
(56,292,qs),
(56,285,o),
(60,278,q),
(66,271,o),
(195,67,o),
(319,-128,o),
(322,-130,qs),
(326,-132,o),
(340,-132,o),
(344,-130,qs),
(347,-128,o),
(471,67,o),
(600,271,o),
(606,278,q),
(611,287,o),
(611,292,qs),
(611,296,o),
(606,305,qs),
(600,313,o),
(471,516,o),
(347,711,o),
(344,713,qs),
(329,720,o),
(318,709,qs)
);
},
{
closed = 1;
nodes = (
(100,316,o),
(333,658,q),
(334,658,o),
(567,292,o),
(567,290,o),
(334,-74,o),
(333,-74,q),
(332,-73,o),
(214,110,o),
(100,289,o),
(100,293,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
38 1 0 74 0 0 0 118 30 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = lozenge;
unicode = 9674;
},
{
glyphname = uni2605;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(86,395,o),
(68,394,qs),
(53,393,o),
(51,389,qs),
(48,385,o),
(51,378,q),
(55,374,o),
(180,283,o),
(301,195,o),
(301,194,q),
(207,-92,o),
(207,-103,qs),
(207,-109,o),
(220,-112,o),
(224,-109,q),
(229,-107,o),
(350,-18,qs),
(472,71,l),
(594,-18,ls),
(715,-107,o),
(720,-109,q),
(724,-112,o),
(737,-109,o),
(737,-103,qs),
(737,-99,o),
(734,-87,o),
(721,-48,o),
(703,6,o),
(665,123,o),
(643,194,q),
(643,195,o),
(763,282,o),
(889,374,o),
(893,378,q),
(896,385,o),
(893,389,q),
(893,390,ls),
(892,394,o),
(851,395,o),
(731,395,qs),
(577,395,l),
(576,400,l),
(482,688,o),
(479,691,qs),
(473,697,o),
(467,692,q),
(463,692,o),
(463,688,q),
(462,687,o),
(367,396,o),
(367,395,q),
(213,395,ls)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 5 values pushed */
41 33 2 0 73 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 5 values pushed */
41 33 2 1 73 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 5 values pushed */
41 33 2 0 73 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 6 values pushed */
2 1 2 0 0 118 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 10 values pushed */
0 0 1 0 133 2 1 1 1 118 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 6 values pushed */
2 1 2 0 0 118 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
0 0 0 51 0 48 73 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 944;
}
);
note = uni2605;
unicode = 9733;
},
{
glyphname = uni2713;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(693,699,o),
(662,673,qs),
(389,461,o),
(274,147,qs),
(273,143,o),
(270,134,o),
(269,132,qs),
(268,129,l),
(267,129,o),
(224,205,qs),
(190,263,o),
(176,285,o),
(170,285,qs),
(142,285,o),
(114,265,qs),
(92,250,o),
(87,238,q),
(84,234,o),
(84,231,qs),
(84,223,o),
(154,101,qs),
(225,-23,o),
(228,-26,q),
(233,-34,o),
(245,-34,qs),
(260,-34,o),
(302,-14,o),
(315,0,qs),
(326,12,o),
(328,29,q),
(344,100,o),
(366,164,qs),
(418,313,o),
(598,566,o),
(716,654,qs),
(740,674,o),
(746,685,qs),
(748,689,o),
(748,695,qs),
(748,706,o),
(732,706,qs),
(724,706,o),
(716,704,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
3 1 2 0 1 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 26 46 32 3 6 25 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uni2713;
unicode = 10003;
},
{
glyphname = uni2720;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(195,703,o),
(198,698,o),
(201,696,o),
(210,691,o),
(212,690,qs),
(356,606,o),
(393,464,qs),
(402,428,o),
(406,374,qs),
(406,357,l),
(403,357,ls),
(381,357,o),
(351,361,qs),
(253,374,o),
(120,473,o),
(71,555,qs),
(60,575,o),
(48,563,q),
(48,131,l),
(54,125,o),
(58,125,qs),
(61,125,o),
(71,139,q),
(114,216,o),
(234,310,o),
(320,328,qs),
(370,337,o),
(403,337,qs),
(406,337,l),
(406,320,ls),
(397,113,o),
(212,4,qs),
(210,3,o),
(202,-1,o),
(200,-3,o),
(196,-6,o),
(195,-9,o),
(195,-12,qs),
(195,-16,o),
(201,-22,q),
(632,-22,l),
(638,-16,o),
(638,-12,qs),
(638,-9,o),
(635,-4,o),
(632,-2,o),
(623,3,o),
(621,4,qs),
(477,89,o),
(440,231,qs),
(431,266,o),
(427,320,qs),
(427,337,l),
(430,337,ls),
(452,337,o),
(482,333,qs),
(580,320,o),
(713,221,o),
(762,139,qs),
(769,128,o),
(770,127,qs),
(775,122,o),
(786,131,q),
(786,563,l),
(782,566,ls),
(773,575,o),
(762,555,qs),
(674,400,o),
(514,366,qs),
(462,357,o),
(430,357,qs),
(427,357,l),
(427,374,ls),
(436,581,o),
(621,690,qs),
(623,691,o),
(631,695,o),
(633,697,o),
(637,700,o),
(638,703,o),
(638,706,qs),
(638,710,o),
(632,716,q),
(201,716,l),
(195,710,o),
(195,706,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 50 values pushed */
67 20 2 1 0 66 22 2 3 2 2 76 0 0 1 0 133 0 3 2 3 134 5 1 1 2 2 1 89 5 1 1 1 2 97 4 1 2 1 2 81 31 43 29 31 43 17 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 833;
}
);
note = uni2720;
unicode = 10016;
},
{
glyphname = uni29EB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(316,707,o),
(73,326,o),
(60,305,qs),
(56,298,o),
(56,292,qs),
(56,285,o),
(60,278,q),
(66,271,o),
(195,67,o),
(319,-128,o),
(322,-130,qs),
(326,-132,o),
(340,-132,o),
(344,-130,qs),
(347,-128,o),
(471,67,o),
(600,271,o),
(606,278,q),
(611,287,o),
(611,292,qs),
(611,296,o),
(606,305,qs),
(600,313,o),
(471,516,o),
(347,711,o),
(344,713,qs),
(329,720,o),
(318,709,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 8 values pushed */
0 0 0 118 30 1 6 23 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uni29EB;
unicode = 10731;
},
{
glyphname = uni2A5E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(55,783,o),
(71,773,q),
(539,773,l),
(555,783,o),
(555,795,qs),
(554,806,o),
(540,813,q),
(70,813,l),
(56,806,o),
(55,795,qs)
);
},
{
closed = 1;
nodes = (
(55,589,o),
(71,579,q),
(539,579,l),
(555,589,o),
(555,601,qs),
(554,612,o),
(540,619,q),
(70,619,l),
(56,612,o),
(55,601,qs)
);
},
{
closed = 1;
nodes = (
(83,-97,o),
(90,-90,qs),
(91,-89,o),
(111,-47,qs),
(187,113,o),
(305,358,q),
(342,282,o),
(453,49,o),
(519,-89,o),
(520,-90,qs),
(527,-97,o),
(536,-97,qs),
(542,-97,o),
(555,-88,o),
(555,-81,qs),
(555,-71,o),
(327,404,o),
(325,410,qs),
(320,420,o),
(314,422,q),
(310,425,o),
(300,425,o),
(296,422,q),
(290,420,o),
(285,410,qs),
(283,404,o),
(55,-71,o),
(55,-81,qs),
(55,-88,o),
(68,-97,o),
(74,-97,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
9 4 2 1 0 19 14 2 3 2 44 35 2 5 4 3 76 0 4 3 5 3 4 5 128 6 1 5 5 132 0 0 0 1 2 0 1 103 0 2 3 3 2 87 0 2 2 3 95 0 3 2 3 79 26 40 27 20 20 20 17 7 6 29 
CALL[ ]	/* CallFunction */";
};
width = 611;
}
);
note = uni2A5E;
unicode = 10846;
},
{
glyphname = uni2A7D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,632,o),
(104,369,o),
(96,365,qs),
(84,359,o),
(83,348,qs),
(83,336,o),
(90,331,qs),
(92,329,o),
(382,192,qs),
(670,56,l),
(676,56,ls),
(694,58,o),
(694,76,qs),
(694,81,o),
(691,87,q),
(687,92,o),
(399,228,qs),
(263,293,o),
(151,346,q),
(315,424,o),
(604,561,o),
(686,600,o),
(687,601,qs),
(694,607,o),
(694,623,o),
(683,636,o),
(674,636,qs),
(671,636,o),
(665,634,qs)
);
},
{
closed = 1;
nodes = (
(83,142,o),
(90,137,qs),
(92,135,o),
(382,-2,qs),
(670,-138,l),
(676,-138,ls),
(694,-136,o),
(694,-118,qs),
(694,-114,o),
(692,-109,o),
(691,-106,o),
(685,-102,o),
(683,-101,o),
(678,-98,qs),
(673,-96,o),
(398,35,o),
(110,171,o),
(104,172,q),
(85,172,o),
(83,154,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
23 9 2 1 0 1 76 48 1 1 73 0 0 1 0 133 0 1 1 118 30 29 32 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A7D;
unicode = 10877;
},
{
glyphname = uni2A7E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,608,o),
(90,601,q),
(626,346,l),
(378,228,ls),
(90,92,o),
(86,87,q),
(83,81,o),
(83,76,qs),
(83,58,o),
(101,56,qs),
(107,56,l),
(395,192,ls),
(685,329,o),
(687,331,qs),
(694,336,o),
(694,356,o),
(687,361,qs),
(686,362,o),
(400,499,o),
(107,636,o),
(99,636,qs),
(92,636,o),
(83,623,o),
(83,617,qs)
);
},
{
closed = 1;
nodes = (
(661,168,o),
(100,-98,o),
(96,-100,qs),
(83,-106,o),
(83,-118,qs),
(83,-136,o),
(101,-138,qs),
(107,-138,l),
(395,-2,ls),
(685,135,o),
(687,137,qs),
(694,142,o),
(694,154,q),
(690,172,o),
(674,172,qs),
(671,172,o),
(665,170,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 27 values pushed */
23 20 2 1 0 1 76 27 15 2 1 73 0 0 1 0 133 0 1 1 118 26 24 33 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A7E;
unicode = 10878;
},
{
glyphname = uni2A85;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(659,758,o),
(97,520,o),
(94,519,qs),
(83,514,o),
(83,501,qs),
(83,493,o),
(90,487,qs),
(91,486,o),
(378,364,o),
(670,242,o),
(676,242,qs),
(693,243,o),
(693,261,qs),
(693,274,o),
(682,280,qs),
(677,282,o),
(157,501,o),
(156,502,q),
(684,724,o),
(687,727,q),
(700,736,o),
(692,751,qs),
(683,766,o),
(667,761,qs)
);
},
{
closed = 1;
nodes = (
(693,90,o),
(684,74,qs),
(668,41,o),
(596,0,o),
(554,0,qs),
(502,0,o),
(443,36,qs),
(318,113,o),
(316,114,qs),
(265,138,o),
(223,138,qs),
(153,138,o),
(55,46,o),
(55,-23,qs),
(55,-36,o),
(57,-44,q),
(65,-63,o),
(76,-53,qs),
(82,-46,o),
(83,-27,qs),
(87,22,o),
(171,82,o),
(275,82,o),
(335,46,q),
(401,0,o),
(462,-32,qs),
(513,-56,o),
(557,-56,qs),
(627,-56,o),
(722,37,o),
(722,108,qs),
(722,138,o),
(694,138,o),
(694,109,qs)
);
},
{
closed = 1;
nodes = (
(693,-144,o),
(684,-160,qs),
(668,-193,o),
(596,-234,o),
(554,-234,qs),
(502,-234,o),
(443,-198,qs),
(318,-121,o),
(316,-120,qs),
(265,-96,o),
(223,-96,qs),
(153,-96,o),
(55,-188,o),
(55,-257,qs),
(55,-270,o),
(57,-278,q),
(65,-297,o),
(76,-287,qs),
(82,-280,o),
(83,-261,qs),
(87,-212,o),
(171,-152,o),
(275,-152,o),
(335,-188,q),
(401,-234,o),
(462,-266,qs),
(513,-290,o),
(557,-290,qs),
(627,-290,o),
(722,-197,o),
(722,-126,qs),
(722,-96,o),
(694,-96,o),
(694,-125,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
37 1 2 5 71 1 7 10 2 76 5 1 0 74 0 0 1 0 133 4 1 1 0 3 5 1 3 105 0 5 0 2 6 5 2 105 9 1 6 0 8 10 6 8 105 0 10 7 7 10 89 0 10 10 7 97 0 7 10 7 81 87 85 81 79 20 35 21 36 42 20 35 28 27 11 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A85;
unicode = 10885;
},
{
glyphname = uni2A86;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,723,o),
(621,502,q),
(131,292,o),
(95,280,q),
(84,274,o),
(84,261,qs),
(84,243,o),
(101,242,qs),
(106,242,o),
(399,364,o),
(686,486,o),
(687,487,qs),
(694,492,o),
(694,512,o),
(687,517,qs),
(684,520,o),
(114,759,o),
(104,762,q),
(83,762,o),
(83,743,qs),
(83,734,o),
(90,727,qs)
);
},
{
closed = 1;
nodes = (
(693,90,o),
(684,74,qs),
(668,41,o),
(596,0,o),
(554,0,qs),
(502,0,o),
(443,36,qs),
(318,113,o),
(316,114,qs),
(265,138,o),
(223,138,qs),
(153,138,o),
(55,46,o),
(55,-23,qs),
(55,-36,o),
(57,-44,q),
(65,-63,o),
(76,-53,qs),
(82,-46,o),
(83,-27,qs),
(87,22,o),
(171,82,o),
(275,82,o),
(335,46,q),
(401,0,o),
(462,-32,qs),
(513,-56,o),
(557,-56,qs),
(627,-56,o),
(722,37,o),
(722,108,qs),
(722,138,o),
(694,138,o),
(694,109,qs)
);
},
{
closed = 1;
nodes = (
(693,-144,o),
(684,-160,qs),
(668,-193,o),
(596,-234,o),
(554,-234,qs),
(502,-234,o),
(443,-198,qs),
(318,-121,o),
(316,-120,qs),
(265,-96,o),
(223,-96,qs),
(153,-96,o),
(55,-188,o),
(55,-257,qs),
(55,-270,o),
(57,-278,q),
(65,-297,o),
(76,-287,qs),
(82,-280,o),
(83,-261,qs),
(87,-212,o),
(171,-152,o),
(275,-152,o),
(335,-188,q),
(401,-234,o),
(462,-266,qs),
(513,-290,o),
(557,-290,qs),
(627,-290,o),
(722,-197,o),
(722,-126,qs),
(722,-96,o),
(694,-96,o),
(694,-125,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 84 values pushed */
19 1 1 0 35 1 3 6 69 1 8 11 3 76 0 0 1 0 133 0 1 2 1 133 5 1 2 0 4 6 2 4 105 0 6 0 3 7 6 3 105 10 1 7 0 9 11 7 9 105 0 11 8 8 11 89 0 11 11 8 97 0 8 11 8 81 85 83 79 77 67 66 35 21 36 42 20 35 24 41 18 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A86;
unicode = 10886;
},
{
glyphname = uni2A87;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,632,o),
(104,369,o),
(96,365,qs),
(84,359,o),
(83,348,qs),
(83,336,o),
(90,331,qs),
(92,329,o),
(382,192,qs),
(670,56,l),
(676,56,ls),
(694,58,o),
(694,76,qs),
(694,81,o),
(691,87,q),
(687,92,o),
(399,228,qs),
(263,293,o),
(151,346,q),
(315,424,o),
(604,561,o),
(686,600,o),
(687,601,qs),
(694,607,o),
(694,623,o),
(683,636,o),
(674,636,qs),
(671,636,o),
(665,634,qs)
);
},
{
closed = 1;
nodes = (
(84,-131,o),
(98,-138,q),
(340,-138,l),
(308,-171,ls),
(303,-176,o),
(292,-187,o),
(284,-195,o),
(278,-202,o),
(276,-204,qs),
(274,-206,ls),
(272,-209,o),
(272,-215,qs),
(272,-223,o),
(284,-235,o),
(292,-235,qs),
(294,-235,o),
(300,-233,q),
(306,-229,o),
(351,-184,qs),
(398,-138,l),
(679,-138,l),
(694,-130,o),
(694,-118,qs),
(694,-105,o),
(678,-98,q),
(438,-98,l),
(470,-65,ls),
(503,-33,o),
(504,-27,q),
(505,-25,o),
(505,-21,qs),
(505,-13,o),
(494,-1,o),
(486,-1,qs),
(484,-1,o),
(478,-3,qs),
(474,-4,o),
(427,-51,qs),
(381,-98,l),
(99,-98,l),
(84,-107,o),
(84,-118,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 11 values pushed */
23 9 2 2 0 1 76 55 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 0 2 1 1 2 112 3 1 1 4 4 1 87 3 1 1 1 4 96 5 1 4 1 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 1 2 133 3 1 1 4 4 1 87 3 1 1 1 4 96 5 1 4 1 4 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
68 67 50 49 45 44 37 35 31 30 32 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A87;
unicode = 10887;
},
{
glyphname = uni2A88;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,608,o),
(90,601,q),
(626,346,l),
(378,228,ls),
(90,92,o),
(86,87,q),
(83,81,o),
(83,76,qs),
(83,58,o),
(101,56,qs),
(107,56,l),
(395,192,ls),
(685,329,o),
(687,331,qs),
(694,336,o),
(694,356,o),
(687,361,qs),
(686,362,o),
(400,499,o),
(107,636,o),
(99,636,qs),
(92,636,o),
(83,623,o),
(83,617,qs)
);
},
{
closed = 1;
nodes = (
(84,-131,o),
(98,-138,q),
(340,-138,l),
(308,-171,ls),
(303,-176,o),
(292,-187,o),
(284,-195,o),
(278,-202,o),
(276,-204,qs),
(274,-206,ls),
(272,-209,o),
(272,-215,qs),
(272,-223,o),
(284,-235,o),
(292,-235,qs),
(294,-235,o),
(300,-233,q),
(306,-229,o),
(351,-184,qs),
(398,-138,l),
(679,-138,l),
(694,-130,o),
(694,-118,qs),
(694,-105,o),
(678,-98,q),
(438,-98,l),
(470,-65,ls),
(503,-33,o),
(504,-27,q),
(505,-25,o),
(505,-21,qs),
(505,-13,o),
(494,-1,o),
(486,-1,qs),
(484,-1,o),
(478,-3,qs),
(474,-4,o),
(427,-51,qs),
(381,-98,l),
(99,-98,l),
(84,-107,o),
(84,-118,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 12 values pushed */
23 20 15 3 2 0 1 76 50 1 4 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
0 0 2 0 133 0 2 1 1 2 112 3 1 1 4 4 1 87 3 1 1 1 4 96 5 1 4 1 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 29 values pushed */
0 0 2 0 133 0 2 1 2 133 3 1 1 4 4 1 87 3 1 1 1 4 96 5 1 4 1 4 80 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 14 values pushed */
63 62 45 44 40 39 32 30 26 25 33 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A88;
unicode = 10888;
},
{
glyphname = uni2A89;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(659,758,o),
(97,520,o),
(94,519,qs),
(83,514,o),
(83,501,qs),
(83,493,o),
(90,487,qs),
(91,486,o),
(378,364,o),
(670,242,o),
(676,242,qs),
(693,243,o),
(693,261,qs),
(693,274,o),
(682,280,qs),
(677,282,o),
(157,501,o),
(156,502,q),
(684,724,o),
(687,727,q),
(700,736,o),
(692,751,qs),
(683,766,o),
(667,761,qs)
);
},
{
closed = 1;
nodes = (
(693,-144,o),
(684,-160,qs),
(668,-193,o),
(596,-234,o),
(554,-234,qs),
(502,-234,o),
(438,-195,qs),
(377,-158,o),
(377,-155,q),
(379,-149,o),
(434,-18,q),
(446,-24,ls),
(502,-56,o),
(556,-56,qs),
(627,-56,o),
(722,37,o),
(722,108,qs),
(722,138,o),
(694,138,o),
(694,109,qs),
(693,90,o),
(684,74,qs),
(668,41,o),
(596,0,o),
(512,0,o),
(467,23,qs),
(457,28,o),
(454,30,o),
(455,31,q),
(455,32,o),
(528,205,o),
(528,214,qs),
(528,222,o),
(516,231,o),
(510,231,qs),
(500,231,o),
(492,223,qs),
(490,221,o),
(455,135,o),
(438,92,qs),
(420,50,l),
(419,50,o),
(392,68,qs),
(306,125,o),
(258,134,qs),
(242,138,o),
(222,138,qs),
(154,138,o),
(55,46,o),
(55,-23,qs),
(55,-36,o),
(57,-44,q),
(65,-63,o),
(76,-53,qs),
(82,-46,o),
(83,-27,qs),
(87,22,o),
(171,82,o),
(275,82,o),
(339,43,qs),
(400,6,o),
(400,3,q),
(398,-3,o),
(343,-134,q),
(331,-128,ls),
(293,-106,o),
(252,-98,qs),
(236,-96,o),
(221,-96,qs),
(151,-96,o),
(55,-188,o),
(55,-257,qs),
(55,-270,o),
(57,-278,q),
(65,-297,o),
(76,-287,qs),
(82,-280,o),
(83,-261,qs),
(87,-212,o),
(171,-152,o),
(223,-152,qs),
(265,-152,o),
(310,-175,qs),
(320,-180,o),
(323,-182,o),
(322,-183,q),
(322,-184,o),
(249,-357,o),
(249,-366,qs),
(249,-374,o),
(262,-383,o),
(269,-383,qs),
(280,-383,o),
(286,-373,q),
(287,-370,o),
(357,-204,o),
(358,-202,q),
(385,-220,ls),
(471,-277,o),
(519,-286,qs),
(535,-290,o),
(555,-290,qs),
(624,-290,o),
(722,-197,o),
(722,-126,qs),
(722,-96,o),
(694,-96,o),
(694,-125,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 100 values pushed */
120 75 2 11 9 67 1 4 1 34 1 12 4 53 1 2 12 4 76 5 1 0 74 0 0 8 0 133 0 8 7 8 133 0 3 2 3 134 10 1 7 0 6 9 7 6 105 0 9 0 11 1 9 11 105 5 1 1 0 4 12 1 4 105 0 12 2 2 12 89 0 12 12 2 97 0 2 12 2 81 127 125 118 116 113 112 107 106 26 42 25 42 42 24 35 28 27 13 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A89;
unicode = 10889;
},
{
glyphname = uni2A8A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,723,o),
(621,502,q),
(131,292,o),
(95,280,q),
(84,274,o),
(84,261,qs),
(84,243,o),
(101,242,qs),
(106,242,o),
(399,364,o),
(686,486,o),
(687,487,qs),
(694,492,o),
(694,512,o),
(687,517,qs),
(684,520,o),
(114,759,o),
(104,762,q),
(83,762,o),
(83,743,qs),
(83,734,o),
(90,727,qs)
);
},
{
closed = 1;
nodes = (
(693,-144,o),
(684,-160,qs),
(668,-193,o),
(596,-234,o),
(554,-234,qs),
(502,-234,o),
(438,-195,qs),
(377,-158,o),
(377,-155,q),
(379,-149,o),
(434,-18,q),
(446,-24,ls),
(502,-56,o),
(556,-56,qs),
(627,-56,o),
(722,37,o),
(722,108,qs),
(722,138,o),
(694,138,o),
(694,109,qs),
(693,90,o),
(684,74,qs),
(668,41,o),
(596,0,o),
(512,0,o),
(467,23,qs),
(457,28,o),
(454,30,o),
(455,31,q),
(455,32,o),
(528,205,o),
(528,214,qs),
(528,222,o),
(516,231,o),
(510,231,qs),
(500,231,o),
(492,223,qs),
(490,221,o),
(455,135,o),
(438,92,qs),
(420,50,l),
(419,50,o),
(392,68,qs),
(306,125,o),
(258,134,qs),
(242,138,o),
(222,138,qs),
(154,138,o),
(55,46,o),
(55,-23,qs),
(55,-36,o),
(57,-44,q),
(65,-63,o),
(76,-53,qs),
(82,-46,o),
(83,-27,qs),
(87,22,o),
(171,82,o),
(275,82,o),
(339,43,qs),
(400,6,o),
(400,3,q),
(398,-3,o),
(343,-134,q),
(331,-128,ls),
(293,-106,o),
(252,-98,qs),
(236,-96,o),
(221,-96,qs),
(151,-96,o),
(55,-188,o),
(55,-257,qs),
(55,-270,o),
(57,-278,q),
(65,-297,o),
(76,-287,qs),
(82,-280,o),
(83,-261,qs),
(87,-212,o),
(171,-152,o),
(223,-152,qs),
(265,-152,o),
(310,-175,qs),
(320,-180,o),
(323,-182,o),
(322,-183,q),
(322,-184,o),
(249,-357,o),
(249,-366,qs),
(249,-374,o),
(262,-383,o),
(269,-383,qs),
(280,-383,o),
(286,-373,q),
(287,-370,o),
(357,-204,o),
(358,-202,q),
(385,-220,ls),
(471,-277,o),
(519,-286,qs),
(535,-290,o),
(555,-290,qs),
(624,-290,o),
(722,-197,o),
(722,-126,qs),
(722,-96,o),
(694,-96,o),
(694,-125,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 107 values pushed */
19 1 1 0 118 73 2 12 10 65 1 5 2 32 1 13 5 51 1 3 13 5 76 0 0 1 0 133 0 1 9 1 133 0 9 8 9 133 0 4 3 4 134 11 1 8 0 7 10 8 7 105 0 10 0 12 2 10 12 105 6 1 2 0 5 13 2 5 105 0 13 3 3 13 89 0 13 13 3 97 0 3 13 3 81 125 123 116 114 111 110 105 104 94 93 42 25 42 42 24 35 24 41 18 14 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A8A;
unicode = 10890;
},
{
glyphname = uni2A8B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(668,1003,o),
(98,791,o),
(91,788,qs),
(83,783,o),
(83,772,qs),
(83,760,o),
(93,755,qs),
(98,753,o),
(669,542,o),
(673,541,q),
(682,541,o),
(694,553,o),
(694,561,qs),
(694,571,o),
(685,577,q),
(683,579,o),
(432,672,o),
(169,769,o),
(162,772,q),
(683,966,l),
(694,972,o),
(694,983,qs),
(694,990,o),
(683,1003,o),
(674,1003,qs)
);
},
{
closed = 1;
nodes = (
(694,354,o),
(694,380,o),
(679,387,q),
(98,387,l),
(84,380,o),
(84,354,o),
(98,347,q),
(679,347,l)
);
},
{
closed = 1;
nodes = (
(694,160,o),
(694,186,o),
(679,193,q),
(98,193,l),
(84,186,o),
(84,160,o),
(98,153,q),
(679,153,l)
);
},
{
closed = 1;
nodes = (
(83,-31,o),
(92,-37,q),
(94,-39,o),
(345,-132,o),
(608,-229,o),
(615,-232,q),
(94,-426,ls),
(83,-431,o),
(83,-443,qs),
(83,-461,o),
(101,-463,qs),
(109,-463,o),
(684,-250,o),
(687,-247,qs),
(694,-241,o),
(694,-232,qs),
(694,-219,o),
(684,-215,qs),
(678,-212,o),
(107,-2,o),
(104,-1,q),
(95,-1,o),
(83,-13,o),
(83,-21,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 82 values pushed */
11 5 2 0 1 1 76 64 58 2 6 73 7 1 1 0 1 133 0 0 2 0 133 0 6 5 6 134 0 2 8 1 3 4 2 3 103 0 4 5 5 4 87 0 4 4 5 95 9 1 5 4 5 79 33 33 25 25 0 0 43 42 33 40 33 40 37 36 25 32 25 32 29 28 0 24 0 23 29 10 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A8B;
unicode = 10891;
},
{
glyphname = uni2A8C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,971,o),
(94,966,q),
(96,964,o),
(615,772,q),
(94,579,o),
(92,577,q),
(83,571,o),
(83,561,qs),
(83,553,o),
(95,541,o),
(104,541,q),
(108,542,o),
(678,752,o),
(684,755,qs),
(694,759,o),
(694,772,qs),
(694,781,o),
(687,787,qs),
(684,790,o),
(109,1002,o),
(104,1003,q),
(95,1003,o),
(83,991,o),
(83,983,qs)
);
},
{
closed = 1;
nodes = (
(84,352,o),
(100,347,q),
(390,347,l),
(680,348,l),
(694,356,o),
(694,367,qs),
(694,380,o),
(679,387,q),
(98,387,l),
(84,380,o),
(84,367,qs)
);
},
{
closed = 1;
nodes = (
(84,160,o),
(98,153,q),
(679,153,l),
(694,160,o),
(694,173,qs),
(694,177,o),
(691,184,o),
(688,187,o),
(681,192,o),
(680,193,q),
(100,193,l),
(84,188,o),
(84,173,qs)
);
},
{
closed = 1;
nodes = (
(654,-7,o),
(368,-113,o),
(94,-215,o),
(93,-215,q),
(83,-220,o),
(83,-232,qs),
(83,-242,o),
(90,-247,qs),
(93,-250,o),
(668,-463,o),
(676,-463,qs),
(694,-461,o),
(694,-443,qs),
(694,-431,o),
(683,-426,q),
(681,-424,o),
(162,-232,q),
(683,-39,o),
(685,-37,q),
(694,-31,o),
(694,-21,qs),
(694,-13,o),
(683,-1,o),
(675,-1,qs),
(670,-1,o),
(668,-2,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 64 values pushed */
23 19 2 1 0 1 76 56 1 5 73 0 0 1 0 133 6 1 5 4 5 134 0 1 0 2 3 1 2 103 0 3 4 4 3 87 0 3 3 4 95 0 4 3 4 79 50 48 48 73 50 73 45 44 37 36 32 30 26 25 17 7 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A8C;
unicode = 10892;
},
{
glyphname = uni2A95;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(663,633,o),
(102,367,o),
(96,365,q),
(84,358,o),
(83,347,qs),
(82,339,o),
(93,327,o),
(101,326,qs),
(107,326,l),
(395,462,ls),
(685,599,o),
(687,601,qs),
(694,607,o),
(694,614,qs),
(694,622,o),
(682,636,o),
(674,636,qs),
(671,636,o),
(665,634,qs)
);
},
{
closed = 1;
nodes = (
(660,438,o),
(104,175,o),
(96,171,qs),
(84,165,o),
(83,154,qs),
(83,142,o),
(90,137,qs),
(92,135,o),
(382,-2,qs),
(670,-138,l),
(676,-138,ls),
(694,-136,o),
(694,-118,qs),
(694,-113,o),
(691,-107,q),
(687,-102,o),
(399,34,qs),
(263,99,o),
(151,152,q),
(315,230,o),
(604,367,o),
(686,406,o),
(687,407,qs),
(694,412,o),
(694,424,q),
(690,442,o),
(674,442,qs),
(671,442,o),
(665,440,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 21 values pushed */
42 28 22 3 1 73 0 0 1 0 133 0 1 1 118 21 19 32 2 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A95;
unicode = 10901;
},
{
glyphname = uni2A96;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,608,o),
(90,601,qs),
(92,599,o),
(382,462,qs),
(670,326,l),
(676,326,ls),
(694,328,o),
(694,346,qs),
(694,354,o),
(687,361,qs),
(686,362,o),
(400,499,o),
(107,636,o),
(99,636,qs),
(92,636,o),
(83,623,o),
(83,617,qs)
);
},
{
closed = 1;
nodes = (
(83,412,o),
(90,407,q),
(626,152,l),
(549,115,o),
(416,52,o),
(321,7,o),
(241,-31,o),
(190,-55,o),
(149,-74,o),
(127,-85,o),
(111,-92,o),
(103,-96,o),
(97,-99,o),
(93,-101,qs),
(83,-106,o),
(83,-118,qs),
(83,-136,o),
(101,-138,qs),
(107,-138,l),
(395,-2,ls),
(685,135,o),
(687,137,qs),
(692,141,o),
(695,157,o),
(691,163,qs),
(688,167,o),
(678,172,qs),
(673,174,o),
(398,305,o),
(110,441,o),
(104,442,q),
(85,442,o),
(83,424,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 25 values pushed */
16 1 1 0 1 76 49 46 2 1 73 0 0 1 0 133 0 1 1 118 30 33 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2A96;
unicode = 10902;
},
{
glyphname = uni2AB5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(655,745,o),
(653,726,qs),
(644,663,o),
(604,615,qs),
(506,503,o),
(224,487,qs),
(164,483,o),
(119,483,qs),
(99,483,o),
(94,481,q),
(84,475,o),
(84,463,qs),
(84,452,o),
(94,445,qs),
(98,443,o),
(118,443,qs),
(164,443,o),
(224,439,qs),
(506,423,o),
(604,311,qs),
(644,263,o),
(653,200,qs),
(656,173,o),
(673,173,qs),
(681,173,o),
(694,183,o),
(694,191,qs),
(694,212,o),
(681,253,qs),
(639,382,o),
(465,439,qs),
(426,452,o),
(387,460,qs),
(379,461,o),
(372,463,q),
(484,486,o),
(548,522,qs),
(650,577,o),
(681,673,qs),
(694,714,o),
(694,735,qs),
(694,742,o),
(681,753,o),
(674,753,qs),
(670,753,o),
(665,750,qs)
);
},
{
closed = 1;
nodes = (
(83,-161,o),
(96,-174,q),
(172,-175,l),
(249,-175,l),
(215,-210,l),
(180,-249,l),
(178,-255,o),
(178,-257,qs),
(178,-265,o),
(190,-277,o),
(198,-277,qs),
(203,-277,o),
(209,-274,q),
(259,-224,l),
(305,-175,l),
(679,-175,l),
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(680,-135,q),
(511,-135,l),
(343,-134,l),
(490,19,l),
(679,19,l),
(694,26,o),
(694,39,qs),
(694,43,o),
(691,50,o),
(688,53,o),
(681,58,o),
(680,59,q),
(604,59,l),
(528,60,l),
(562,94,l),
(597,133,l),
(599,139,o),
(599,141,qs),
(599,149,o),
(586,161,o),
(578,161,qs),
(574,161,l),
(568,158,ls),
(566,157,o),
(519,108,qs),
(473,59,l),
(99,59,l),
(83,49,o),
(83,29,o),
(96,20,q),
(265,19,l),
(434,19,l),
(410,-7,o),
(313,-110,o),
(288,-135,q),
(99,-135,l),
(83,-144,o),
(83,-155,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
10 1 1 2 18 1 0 1 2 76 1 1 2 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 57 values pushed */
0 0 1 6 1 0 6 128 0 6 5 5 6 112 0 11 10 10 11 113 0 2 0 1 0 2 1 103 7 1 5 8 1 4 3 5 4 104 9 1 3 10 10 3 87 9 1 3 3 10 95 12 1 10 3 10 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 0 1 6 1 0 6 128 0 6 5 1 6 5 126 0 11 10 11 134 0 2 0 1 0 2 1 103 7 1 5 8 1 4 3 5 4 104 9 1 3 10 10 3 87 9 1 3 3 10 95 12 1 10 3 10 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
100 98 92 90 87 86 82 80 79 78 71 69 63 61 57 56 53 51 48 47 40 37 30 26 22 20 13 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AB5;
unicode = 10933;
},
{
glyphname = uni2AB6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(597,483,o),
(553,487,qs),
(271,503,o),
(173,615,qs),
(133,663,o),
(124,726,qs),
(121,753,o),
(102,753,qs),
(95,753,o),
(83,742,o),
(83,735,qs),
(83,714,o),
(96,673,qs),
(138,544,o),
(312,487,qs),
(351,474,o),
(390,466,qs),
(398,465,o),
(405,463,q),
(108,408,o),
(84,202,qs),
(84,200,o),
(83,196,o),
(83,195,qs),
(83,173,o),
(103,173,qs),
(121,173,o),
(124,200,qs),
(133,263,o),
(173,311,qs),
(271,423,o),
(553,439,qs),
(613,443,o),
(659,443,qs),
(679,443,o),
(683,445,qs),
(694,452,o),
(694,463,qs),
(694,475,o),
(681,482,o),
(664,483,qs)
);
},
{
closed = 1;
nodes = (
(83,-161,o),
(96,-174,q),
(172,-175,l),
(249,-175,l),
(215,-210,l),
(180,-249,l),
(178,-255,o),
(178,-257,qs),
(178,-265,o),
(190,-277,o),
(198,-277,qs),
(203,-277,o),
(209,-274,q),
(259,-224,l),
(305,-175,l),
(679,-175,l),
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(680,-135,q),
(511,-135,l),
(343,-134,l),
(490,19,l),
(679,19,l),
(694,26,o),
(694,39,qs),
(694,43,o),
(691,50,o),
(688,53,o),
(681,58,o),
(680,59,q),
(604,59,l),
(528,60,l),
(562,94,l),
(597,133,l),
(599,139,o),
(599,141,qs),
(599,149,o),
(586,161,o),
(578,161,qs),
(574,161,l),
(568,158,ls),
(566,157,o),
(519,108,qs),
(473,59,l),
(99,59,l),
(83,49,o),
(83,29,o),
(96,20,q),
(265,19,l),
(434,19,l),
(410,-7,o),
(313,-110,o),
(288,-135,q),
(99,-135,l),
(83,-144,o),
(83,-155,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
29 1 3 2 21 1 0 4 16 1 1 0 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 2 3 2 133 0 3 4 4 3 112 0 1 0 8 0 1 8 128 0 8 7 7 8 112 0 13 12 12 13 113 15 1 4 0 0 1 4 0 104 9 1 7 10 1 6 5 7 6 104 11 1 5 12 12 5 87 11 1 5 5 12 95 14 1 12 5 12 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 2 3 2 133 0 3 4 4 3 112 0 1 0 8 0 1 8 128 0 8 7 0 8 7 126 0 13 12 13 134 15 1 4 0 0 1 4 0 104 9 1 7 10 1 6 5 7 6 104 11 1 5 12 12 5 87 11 1 5 5 12 95 14 1 12 5 12 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 35 values pushed */
0 0 95 93 87 85 82 81 77 75 74 73 66 64 58 56 52 51 48 46 43 42 0 40 0 39 38 37 33 31 36 54 16 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AB6;
unicode = 10934;
},
{
glyphname = uni2AB7;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(656,755,o),
(653,736,qs),
(642,670,o),
(599,626,qs),
(518,547,o),
(306,529,qs),
(239,523,o),
(153,522,qs),
(99,522,o),
(94,519,q),
(84,515,o),
(84,502,qs),
(84,491,o),
(94,484,qs),
(98,482,o),
(152,482,qs),
(239,481,o),
(306,475,qs),
(518,457,o),
(599,378,qs),
(642,334,o),
(653,268,qs),
(658,242,o),
(673,242,qs),
(681,242,o),
(694,252,o),
(694,260,qs),
(694,277,o),
(682,317,qs),
(648,421,o),
(523,471,qs),
(470,493,o),
(420,501,q),
(415,501,o),
(415,503,o),
(420,503,q),
(422,504,o),
(442,508,o),
(463,513,o),
(469,515,qs),
(640,561,o),
(682,687,qs),
(694,727,o),
(694,744,qs),
(694,751,o),
(681,762,o),
(674,762,qs),
(670,762,o),
(665,759,qs)
);
},
{
closed = 1;
nodes = (
(688,55,o),
(642,26,qs),
(603,1,o),
(553,1,qs),
(534,1,o),
(528,2,qs),
(487,10,o),
(443,36,qs),
(318,113,o),
(316,114,qs),
(266,138,o),
(223,138,qs),
(219,138,o),
(207,137,o),
(205,137,qs),
(188,137,o),
(168,129,q),
(125,116,o),
(68,52,o),
(59,8,qs),
(55,-14,o),
(55,-26,qs),
(55,-56,o),
(69,-56,qs),
(81,-56,o),
(83,-27,qs),
(86,25,o),
(135,56,qs),
(174,81,o),
(224,81,qs),
(243,81,o),
(250,80,qs),
(290,72,o),
(335,46,q),
(349,36,o),
(384,15,qs),
(454,-31,o),
(485,-42,qs),
(522,-56,o),
(555,-56,qs),
(619,-56,o),
(706,18,o),
(718,74,qs),
(722,90,o),
(722,106,qs),
(722,138,o),
(694,138,o),
(694,109,q)
);
},
{
closed = 1;
nodes = (
(688,-179,o),
(642,-208,qs),
(603,-233,o),
(553,-233,qs),
(534,-233,o),
(528,-232,qs),
(487,-224,o),
(443,-198,qs),
(318,-121,o),
(316,-120,qs),
(266,-96,o),
(223,-96,qs),
(219,-96,o),
(207,-97,o),
(205,-97,qs),
(188,-97,o),
(168,-105,q),
(125,-118,o),
(68,-182,o),
(59,-226,qs),
(55,-248,o),
(55,-260,qs),
(55,-290,o),
(69,-290,qs),
(81,-290,o),
(83,-261,qs),
(86,-209,o),
(135,-178,qs),
(174,-153,o),
(224,-153,qs),
(243,-153,o),
(250,-154,qs),
(290,-162,o),
(335,-188,q),
(349,-198,o),
(384,-219,qs),
(454,-265,o),
(485,-276,qs),
(522,-290,o),
(555,-290,qs),
(619,-290,o),
(706,-216,o),
(718,-160,qs),
(722,-144,o),
(722,-128,qs),
(722,-96,o),
(694,-96,o),
(694,-125,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 117 values pushed */
21 1 0 1 96 1 5 3 144 1 12 10 3 76 1 1 2 74 0 0 1 3 1 0 3 128 0 2 0 1 0 2 1 105 8 7 2 3 0 5 9 3 5 105 0 9 6 1 4 10 9 4 105 15 14 2 10 0 12 16 10 12 105 0 16 11 11 16 89 0 16 16 11 97 13 1 11 16 11 81 141 138 133 131 129 128 121 119 115 112 105 103 98 97 93 90 85 83 81 80 73 71 67 64 57 55 50 49 41 38 33 31 25 23 17 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AB7;
unicode = 10935;
},
{
glyphname = uni2AB8;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,242,o),
(124,268,qs),
(135,334,o),
(178,378,qs),
(259,457,o),
(472,475,qs),
(538,481,o),
(625,482,qs),
(679,482,o),
(683,484,qs),
(694,491,o),
(694,513,o),
(684,519,qs),
(678,522,o),
(629,522,qs),
(464,524,o),
(236,569,o),
(178,626,qs),
(135,670,o),
(124,736,qs),
(121,762,o),
(102,762,qs),
(95,762,o),
(83,751,o),
(83,744,qs),
(83,727,o),
(95,687,qs),
(130,582,o),
(254,533,qs),
(307,511,o),
(357,503,q),
(362,503,o),
(362,501,o),
(357,501,qs),
(355,501,o),
(334,496,o),
(315,491,o),
(309,489,qs),
(137,443,o),
(95,317,qs),
(83,277,o),
(83,260,qs),
(83,253,o),
(96,242,o),
(104,242,qs)
);
},
{
closed = 1;
nodes = (
(688,55,o),
(642,26,qs),
(603,1,o),
(553,1,qs),
(534,1,o),
(528,2,qs),
(487,10,o),
(443,36,qs),
(318,113,o),
(316,114,qs),
(266,138,o),
(223,138,qs),
(219,138,o),
(207,137,o),
(205,137,qs),
(188,137,o),
(168,129,q),
(125,116,o),
(68,52,o),
(59,8,qs),
(55,-14,o),
(55,-26,qs),
(55,-56,o),
(69,-56,qs),
(81,-56,o),
(83,-27,qs),
(86,25,o),
(135,56,qs),
(174,81,o),
(224,81,qs),
(243,81,o),
(250,80,qs),
(290,72,o),
(335,46,q),
(349,36,o),
(384,15,qs),
(454,-31,o),
(485,-42,qs),
(522,-56,o),
(555,-56,qs),
(619,-56,o),
(706,18,o),
(718,74,qs),
(722,90,o),
(722,106,qs),
(722,138,o),
(694,138,o),
(694,109,q)
);
},
{
closed = 1;
nodes = (
(688,-179,o),
(642,-208,qs),
(603,-233,o),
(553,-233,qs),
(534,-233,o),
(528,-232,qs),
(487,-224,o),
(443,-198,qs),
(318,-121,o),
(316,-120,qs),
(266,-96,o),
(223,-96,qs),
(219,-96,o),
(207,-97,o),
(205,-97,qs),
(188,-97,o),
(168,-105,q),
(125,-118,o),
(68,-182,o),
(59,-226,qs),
(55,-248,o),
(55,-260,qs),
(55,-290,o),
(69,-290,qs),
(81,-290,o),
(83,-261,qs),
(86,-209,o),
(135,-178,qs),
(174,-153,o),
(224,-153,qs),
(243,-153,o),
(250,-154,qs),
(290,-162,o),
(335,-188,q),
(349,-198,o),
(384,-219,qs),
(454,-265,o),
(485,-276,qs),
(522,-290,o),
(555,-290,qs),
(619,-290,o),
(706,-216,o),
(718,-160,qs),
(722,-144,o),
(722,-128,qs),
(722,-96,o),
(694,-96,o),
(694,-125,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 120 values pushed */
19 1 1 0 92 1 6 4 140 1 13 11 3 76 0 0 1 0 133 0 3 2 4 2 3 4 128 0 1 0 2 3 1 2 105 9 8 2 4 0 6 10 4 6 105 0 10 7 1 5 11 10 5 105 16 15 2 11 0 13 17 11 13 105 0 17 12 12 17 89 0 17 17 12 97 14 1 12 17 12 81 137 134 129 127 125 124 117 115 111 108 101 99 94 93 89 86 81 79 77 76 69 67 63 60 53 51 46 45 44 43 37 34 30 28 23 21 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AB8;
unicode = 10936;
},
{
glyphname = uni2AB9;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(656,755,o),
(653,736,qs),
(642,670,o),
(599,626,qs),
(518,547,o),
(306,529,qs),
(239,523,o),
(153,522,qs),
(99,522,o),
(94,519,q),
(84,515,o),
(84,502,qs),
(84,491,o),
(94,484,qs),
(98,482,o),
(152,482,qs),
(239,481,o),
(306,475,qs),
(518,457,o),
(599,378,qs),
(642,334,o),
(653,268,qs),
(658,242,o),
(673,242,qs),
(681,242,o),
(694,252,o),
(694,260,qs),
(694,277,o),
(682,317,qs),
(648,421,o),
(523,471,qs),
(470,493,o),
(420,501,q),
(415,501,o),
(415,503,o),
(420,503,q),
(422,504,o),
(442,508,o),
(463,513,o),
(469,515,qs),
(640,561,o),
(682,687,qs),
(694,727,o),
(694,744,qs),
(694,751,o),
(681,762,o),
(674,762,qs),
(670,762,o),
(665,759,qs)
);
},
{
closed = 1;
nodes = (
(688,-179,o),
(642,-208,qs),
(603,-233,o),
(553,-233,qs),
(534,-233,o),
(528,-232,qs),
(476,-221,o),
(400,-171,qs),
(372,-153,l),
(400,-97,ls),
(416,-66,o),
(434,-30,qs),
(439,-20,l),
(497,-55,o),
(556,-55,qs),
(577,-55,o),
(587,-53,qs),
(639,-42,o),
(708,25,o),
(718,74,qs),
(722,90,o),
(722,106,qs),
(722,138,o),
(694,138,o),
(694,109,q),
(688,55,o),
(642,26,qs),
(603,1,o),
(553,1,qs),
(517,1,o),
(472,20,qs),
(462,25,l),
(506,113,o),
(528,156,q),
(528,162,ls),
(526,181,o),
(509,181,qs),
(505,181,o),
(503,180,qs),
(496,178,o),
(489,166,o),
(475,138,qs),
(455,100,o),
(442,74,qs),
(427,45,l),
(396,66,ls),
(313,119,o),
(274,130,qs),
(247,138,o),
(223,138,qs),
(159,138,o),
(71,64,o),
(59,8,qs),
(55,-14,o),
(55,-26,qs),
(55,-56,o),
(69,-56,qs),
(81,-56,o),
(83,-27,qs),
(86,25,o),
(135,56,qs),
(174,81,o),
(224,81,qs),
(243,81,o),
(250,80,qs),
(301,69,o),
(377,19,qs),
(405,1,l),
(400,-9,ls),
(382,-45,o),
(366,-76,qs),
(338,-132,l),
(282,-97,o),
(222,-97,qs),
(200,-97,o),
(190,-99,qs),
(130,-111,o),
(55,-196,o),
(55,-260,qs),
(55,-290,o),
(69,-290,qs),
(81,-290,o),
(83,-261,qs),
(86,-209,o),
(135,-178,qs),
(174,-153,o),
(224,-153,qs),
(258,-153,o),
(305,-172,qs),
(315,-177,l),
(282,-242,ls),
(249,-308,o),
(249,-313,qs),
(249,-322,o),
(261,-332,o),
(277,-332,o),
(282,-327,qs),
(288,-321,o),
(349,-197,q),
(351,-197,o),
(381,-218,qs),
(463,-271,o),
(503,-282,qs),
(530,-290,o),
(554,-290,qs),
(618,-290,o),
(706,-216,o),
(718,-160,qs),
(722,-144,o),
(722,-128,qs),
(722,-96,o),
(694,-96,o),
(694,-125,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 153 values pushed */
21 1 0 1 136 1 9 11 129 116 2 13 9 148 1 10 13 161 89 2 6 3 71 1 16 6 68 1 5 4 7 76 93 1 13 152 1 6 2 75 1 1 2 74 0 0 1 12 1 0 12 128 0 12 11 1 12 11 126 0 5 4 5 134 0 2 0 1 0 2 1 105 14 1 11 0 9 13 11 9 105 0 13 15 1 10 3 13 10 106 8 1 3 0 6 16 3 6 105 0 16 4 4 16 89 0 16 16 4 97 7 1 4 16 4 81 158 155 147 145 138 137 133 131 125 122 112 110 105 103 99 96 88 86 81 79 75 73 66 65 57 55 50 49 41 38 33 31 25 23 17 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AB9;
unicode = 10937;
},
{
glyphname = uni2ABA;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(120,242,o),
(124,268,qs),
(135,334,o),
(178,378,qs),
(259,457,o),
(472,475,qs),
(538,481,o),
(625,482,qs),
(679,482,o),
(683,484,qs),
(694,491,o),
(694,513,o),
(684,519,qs),
(678,522,o),
(629,522,qs),
(464,524,o),
(236,569,o),
(178,626,qs),
(135,670,o),
(124,736,qs),
(121,762,o),
(102,762,qs),
(95,762,o),
(83,751,o),
(83,744,qs),
(83,727,o),
(95,687,qs),
(130,582,o),
(254,533,qs),
(307,511,o),
(357,503,q),
(362,503,o),
(362,501,o),
(357,501,qs),
(355,501,o),
(334,496,o),
(315,491,o),
(309,489,qs),
(137,443,o),
(95,317,qs),
(83,277,o),
(83,260,qs),
(83,253,o),
(96,242,o),
(104,242,qs)
);
},
{
closed = 1;
nodes = (
(688,-179,o),
(642,-208,qs),
(603,-233,o),
(553,-233,qs),
(534,-233,o),
(528,-232,qs),
(476,-221,o),
(400,-171,qs),
(372,-153,l),
(400,-97,ls),
(416,-66,o),
(434,-30,qs),
(439,-20,l),
(497,-55,o),
(556,-55,qs),
(577,-55,o),
(587,-53,qs),
(639,-42,o),
(708,25,o),
(718,74,qs),
(722,90,o),
(722,106,qs),
(722,138,o),
(694,138,o),
(694,109,q),
(688,55,o),
(642,26,qs),
(603,1,o),
(553,1,qs),
(517,1,o),
(472,20,qs),
(462,25,l),
(506,113,o),
(528,156,q),
(528,162,ls),
(526,181,o),
(509,181,qs),
(505,181,o),
(503,180,qs),
(496,178,o),
(489,166,o),
(475,138,qs),
(455,100,o),
(442,74,qs),
(427,45,l),
(396,66,ls),
(313,119,o),
(274,130,qs),
(247,138,o),
(223,138,qs),
(159,138,o),
(71,64,o),
(59,8,qs),
(55,-14,o),
(55,-26,qs),
(55,-56,o),
(69,-56,qs),
(81,-56,o),
(83,-27,qs),
(86,25,o),
(135,56,qs),
(174,81,o),
(224,81,qs),
(243,81,o),
(250,80,qs),
(301,69,o),
(377,19,qs),
(405,1,l),
(400,-9,ls),
(382,-45,o),
(366,-76,qs),
(338,-132,l),
(282,-97,o),
(222,-97,qs),
(200,-97,o),
(190,-99,qs),
(130,-111,o),
(55,-196,o),
(55,-260,qs),
(55,-290,o),
(69,-290,qs),
(81,-290,o),
(83,-261,qs),
(86,-209,o),
(135,-178,qs),
(174,-153,o),
(224,-153,qs),
(258,-153,o),
(305,-172,qs),
(315,-177,l),
(282,-242,ls),
(249,-308,o),
(249,-313,qs),
(249,-322,o),
(261,-332,o),
(277,-332,o),
(282,-327,qs),
(288,-321,o),
(349,-197,q),
(351,-197,o),
(381,-218,qs),
(463,-271,o),
(503,-282,qs),
(530,-290,o),
(554,-290,qs),
(618,-290,o),
(706,-216,o),
(718,-160,qs),
(722,-144,o),
(722,-128,qs),
(722,-96,o),
(694,-96,o),
(694,-125,q)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 156 values pushed */
19 1 1 0 132 1 10 12 125 112 2 14 10 144 1 11 14 157 85 2 7 4 67 1 17 7 64 1 6 5 7 76 89 1 14 148 1 7 2 75 0 0 1 0 133 0 3 2 13 2 3 13 128 0 13 12 2 13 12 126 0 6 5 6 134 0 1 0 2 3 1 2 105 15 1 12 0 10 14 12 10 105 0 14 16 1 11 4 14 11 106 9 1 4 0 7 17 4 7 105 0 17 5 5 17 89 0 17 17 5 97 8 1 5 17 5 81 154 151 143 141 134 133 129 127 121 118 108 106 101 99 95 92 84 82 77 75 71 69 62 61 53 51 46 45 44 43 37 34 30 28 23 21 18 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2ABA;
unicode = 10938;
},
{
glyphname = uni2AC5;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,428,o),
(89,405,qs),
(108,312,o),
(261,184,o),
(362,174,qs),
(369,173,o),
(526,173,qs),
(679,173,l),
(694,180,o),
(694,193,qs),
(694,204,o),
(681,213,q),
(522,213,ls),
(384,214,o),
(348,215,o),
(328,220,qs),
(299,226,o),
(266,241,qs),
(211,269,o),
(135,366,o),
(125,429,qs),
(124,437,o),
(124,463,qs),
(124,490,o),
(125,498,qs),
(138,578,o),
(248,687,o),
(329,707,qs),
(336,708,o),
(337,709,q),
(354,712,o),
(522,713,qs),
(681,714,l),
(694,723,o),
(694,733,qs),
(694,746,o),
(679,753,q),
(524,753,ls),
(500,753,o),
(450,753,o),
(411,752,o),
(380,752,o),
(361,752,o),
(360,752,qs),
(245,740,o),
(84,582,o),
(84,463,qs)
);
},
{
closed = 1;
nodes = (
(694,-14,o),
(694,12,o),
(679,19,q),
(98,19,l),
(84,12,o),
(84,-14,o),
(98,-21,q),
(679,-21,l)
);
},
{
closed = 1;
nodes = (
(694,-208,o),
(694,-182,o),
(679,-175,q),
(98,-175,l),
(84,-182,o),
(84,-208,o),
(98,-215,q),
(679,-215,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 67 values pushed */
0 0 0 1 2 0 1 103 0 2 0 3 4 2 3 103 0 4 8 1 5 6 4 5 103 0 6 7 7 6 87 0 6 6 7 95 9 1 7 6 7 79 55 55 47 47 55 62 55 62 59 58 47 54 47 54 51 50 40 38 34 31 36 114 10 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AC5;
unicode = 10949;
},
{
glyphname = uni2AC6;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,723,o),
(96,714,q),
(255,713,ls),
(393,712,o),
(429,711,o),
(449,706,qs),
(477,700,o),
(512,685,q),
(567,657,o),
(642,560,o),
(652,498,qs),
(654,482,o),
(654,463,qs),
(654,445,o),
(652,429,qs),
(642,367,o),
(567,269,o),
(512,241,qs),
(480,227,o),
(448,219,qs),
(441,218,o),
(440,217,q),
(423,214,o),
(255,213,qs),
(96,213,l),
(83,204,o),
(83,193,qs),
(83,180,o),
(98,173,q),
(251,173,ls),
(407,173,o),
(415,174,qs),
(515,182,o),
(669,312,o),
(688,405,qs),
(693,428,o),
(693,498,o),
(688,522,qs),
(669,615,o),
(516,742,o),
(415,752,qs),
(408,753,o),
(251,753,qs),
(98,753,l),
(83,746,o),
(83,733,qs)
);
},
{
closed = 1;
nodes = (
(694,-14,o),
(694,12,o),
(679,19,q),
(98,19,l),
(84,12,o),
(84,-14,o),
(98,-21,q),
(679,-21,l)
);
},
{
closed = 1;
nodes = (
(694,-208,o),
(694,-182,o),
(679,-175,q),
(98,-175,l),
(84,-182,o),
(84,-208,o),
(98,-215,q),
(679,-215,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 66 values pushed */
0 0 0 3 2 0 3 103 0 2 0 1 4 2 1 103 0 4 8 1 5 6 4 5 103 0 6 7 7 6 87 0 6 6 7 95 9 1 7 6 7 79 54 54 46 46 54 61 54 61 58 57 46 53 46 53 50 49 43 40 36 43 33 10 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2AC6;
unicode = 10950;
},
{
glyphname = uni2ACB;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,460,o),
(89,437,qs),
(108,344,o),
(261,216,o),
(362,206,qs),
(369,205,o),
(526,205,qs),
(679,205,l),
(694,212,o),
(694,225,qs),
(694,236,o),
(681,245,q),
(522,245,ls),
(384,246,o),
(348,247,o),
(328,252,qs),
(299,258,o),
(266,273,qs),
(211,301,o),
(135,398,o),
(125,461,qs),
(124,469,o),
(124,495,qs),
(124,522,o),
(125,530,qs),
(138,610,o),
(248,719,o),
(329,739,qs),
(336,740,o),
(337,741,q),
(354,744,o),
(522,745,qs),
(681,746,l),
(694,755,o),
(694,765,qs),
(694,778,o),
(679,785,q),
(524,785,ls),
(500,785,o),
(450,785,o),
(411,784,o),
(380,784,o),
(361,784,o),
(360,784,qs),
(245,772,o),
(84,614,o),
(84,495,qs)
);
},
{
closed = 1;
nodes = (
(83,-43,o),
(96,-52,q),
(262,-53,l),
(428,-53,l),
(406,-79,o),
(318,-182,o),
(296,-207,q),
(98,-207,l),
(83,-214,o),
(83,-227,qs),
(83,-237,o),
(96,-246,q),
(179,-247,l),
(261,-247,l),
(219,-296,ls),
(178,-344,o),
(176,-348,qs),
(175,-350,o),
(175,-357,qs),
(175,-365,o),
(186,-376,o),
(194,-376,qs),
(197,-376,o),
(203,-374,q),
(206,-372,o),
(268,-301,qs),
(315,-247,l),
(679,-247,l),
(694,-240,o),
(694,-227,qs),
(694,-216,o),
(681,-207,q),
(515,-207,l),
(349,-206,l),
(481,-53,l),
(679,-53,l),
(694,-46,o),
(694,-33,qs),
(694,-22,o),
(681,-13,q),
(598,-13,l),
(516,-12,l),
(558,36,ls),
(599,84,o),
(601,88,qs),
(602,90,o),
(602,97,qs),
(602,105,o),
(591,116,o),
(583,116,qs),
(580,116,o),
(574,114,qs),
(570,112,o),
(516,49,qs),
(463,-13,l),
(98,-13,l),
(83,-20,o),
(83,-33,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 4 4 5 114 0 10 9 9 10 113 0 0 0 1 2 0 1 103 0 2 0 3 5 2 3 103 6 1 4 13 1 7 8 4 7 104 12 1 8 9 9 8 87 12 1 8 8 9 95 11 1 9 8 9 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 5 3 4 3 5 4 128 0 10 9 10 134 0 0 0 1 2 0 1 103 0 2 0 3 5 2 3 103 6 1 4 13 1 7 8 4 7 104 12 1 8 9 9 8 87 12 1 8 8 9 95 11 1 9 8 9 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 29 values pushed */
102 100 97 96 92 90 83 81 77 76 72 70 69 68 64 62 55 53 49 48 40 38 34 31 36 114 14 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2ACB;
unicode = 10955;
},
{
glyphname = uni2ACC;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,755,o),
(96,746,q),
(255,745,ls),
(393,744,o),
(429,743,o),
(449,738,qs),
(477,732,o),
(512,717,q),
(567,689,o),
(642,592,o),
(652,530,qs),
(654,514,o),
(654,495,qs),
(654,477,o),
(652,461,qs),
(642,399,o),
(567,301,o),
(512,273,qs),
(480,259,o),
(448,251,qs),
(441,250,o),
(440,249,q),
(423,246,o),
(255,245,qs),
(96,245,l),
(83,236,o),
(83,225,qs),
(83,212,o),
(98,205,q),
(251,205,ls),
(407,205,o),
(415,206,qs),
(515,214,o),
(669,344,o),
(688,437,qs),
(693,460,o),
(693,530,o),
(688,554,qs),
(669,647,o),
(516,774,o),
(415,784,qs),
(408,785,o),
(251,785,qs),
(98,785,l),
(83,778,o),
(83,765,qs)
);
},
{
closed = 1;
nodes = (
(83,-43,o),
(96,-52,q),
(262,-53,l),
(428,-53,l),
(406,-79,o),
(318,-182,o),
(296,-207,q),
(98,-207,l),
(83,-214,o),
(83,-227,qs),
(83,-237,o),
(96,-246,q),
(179,-247,l),
(261,-247,l),
(219,-296,ls),
(178,-344,o),
(176,-348,qs),
(175,-350,o),
(175,-357,qs),
(175,-365,o),
(186,-376,o),
(194,-376,qs),
(197,-376,o),
(203,-374,q),
(206,-372,o),
(268,-301,qs),
(315,-247,l),
(679,-247,l),
(694,-240,o),
(694,-227,qs),
(694,-216,o),
(681,-207,q),
(515,-207,l),
(349,-206,l),
(481,-53,l),
(679,-53,l),
(694,-46,o),
(694,-33,qs),
(694,-22,o),
(681,-13,q),
(598,-13,l),
(516,-12,l),
(558,36,ls),
(599,84,o),
(601,88,qs),
(602,90,o),
(602,97,qs),
(602,105,o),
(591,116,o),
(583,116,qs),
(580,116,o),
(574,114,qs),
(570,112,o),
(516,49,qs),
(463,-13,l),
(98,-13,l),
(83,-20,o),
(83,-33,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 1 4 4 5 114 0 10 9 9 10 113 0 0 0 3 2 0 3 103 0 2 0 1 5 2 1 103 6 1 4 13 1 7 8 4 7 104 12 1 8 9 9 8 87 12 1 8 8 9 95 11 1 9 8 9 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 5 1 4 1 5 4 128 0 10 9 10 134 0 0 0 3 2 0 3 103 0 2 0 1 5 2 1 103 6 1 4 13 1 7 8 4 7 104 12 1 8 9 9 8 87 12 1 8 8 9 95 11 1 9 8 9 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
101 99 96 95 91 89 82 80 76 75 71 69 68 67 63 61 54 52 48 47 43 40 36 43 33 14 6 25 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uni2ACC;
unicode = 10956;
},
{
glyphname = uniE006;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(38,204,ls),
(-4,160,o),
(-20,142,o),
(-20,136,qs),
(-20,127,o),
(-8,116,o),
(0,116,qs),
(6,116,o),
(9,118,qs),
(14,121,o),
(52,160,qs),
(91,200,l),
(91,96,l),
(92,-9,l),
(101,-22,o),
(111,-22,qs),
(124,-22,o),
(131,-7,q),
(131,243,l),
(184,297,ls),
(225,340,o),
(241,358,o),
(241,364,qs),
(241,373,o),
(229,384,o),
(221,384,qs),
(215,384,o),
(212,382,qs),
(206,379,o),
(170,340,qs),
(132,301,l),
(131,359,l),
(131,418,l),
(122,431,o),
(112,431,qs),
(99,431,o),
(91,415,q),
(91,259,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 41 values pushed */
37 33 25 18 14 11 6 4 0 9 2 0 23 19 2 1 2 2 76 0 0 2 0 133 0 2 1 2 133 0 1 1 118 31 29 22 20 33 3 6 23 
CALL[ ]	/* CallFunction */";
};
width = 222;
}
);
note = uniE006;
unicode = 57350;
},
{
glyphname = uniE007;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(56,420,o),
(55,391,o),
(55,301,qs),
(55,191,l),
(22,172,ls),
(-11,153,o),
(-14,150,qs),
(-20,144,o),
(-20,135,qs),
(-20,116,o),
(0,116,qs),
(6,116,o),
(34,132,qs),
(55,145,l),
(55,71,ls),
(55,11,o),
(57,-12,o),
(61,-16,qs),
(67,-22,o),
(75,-22,qs),
(87,-22,o),
(93,-11,qs),
(95,-7,o),
(95,81,qs),
(95,169,l),
(128,188,o),
(260,265,o),
(293,285,q),
(293,138,ls),
(293,-7,o),
(295,-11,qs),
(301,-22,o),
(313,-22,qs),
(321,-22,o),
(327,-16,qs),
(332,-11,o),
(333,28,o),
(333,153,qs),
(333,309,l),
(366,328,ls),
(399,347,o),
(402,350,qs),
(408,356,o),
(408,365,qs),
(408,384,o),
(388,384,qs),
(382,384,o),
(354,368,qs),
(333,355,l),
(333,383,ls),
(333,418,o),
(327,425,qs),
(321,431,o),
(313,431,qs),
(301,431,o),
(295,420,qs),
(293,416,o),
(293,374,qs),
(293,332,l),
(260,312,o),
(129,235,o),
(96,215,q),
(95,316,ls),
(95,415,o),
(93,421,q),
(87,431,o),
(76,431,qs),
(67,431,o),
(61,425,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 51 values pushed */
3 1 2 0 64 54 43 40 29 19 9 6 8 5 2 37 1 3 5 3 76 1 1 0 2 0 133 0 2 5 2 133 0 5 3 5 133 4 1 3 3 118 40 27 43 39 27 32 6 6 28 
CALL[ ]	/* CallFunction */";
};
width = 389;
}
);
note = uniE007;
unicode = 57351;
},
{
glyphname = uniE008;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(154,-82,o),
(156,-72,qs),
(156,-71,o),
(166,-31,o),
(188,56,o),
(197,91,qs),
(236,251,l),
(345,251,ls),
(454,252,o),
(463,254,qs),
(478,257,o),
(478,265,o),
(463,268,qs),
(454,270,o),
(348,271,qs),
(242,271,o),
(242,273,o),
(280,423,o),
(319,579,o),
(320,585,q),
(508,585,ls),
(697,586,o),
(706,588,qs),
(722,591,o),
(722,595,qs),
(722,598,o),
(702,603,qs),
(694,605,o),
(421,605,qs),
(396,605,o),
(343,605,o),
(303,604,o),
(270,604,o),
(250,604,o),
(249,604,qs),
(226,601,o),
(223,596,qs),
(222,595,o),
(140,266,o),
(57,-69,o),
(57,-74,qs),
(57,-82,o),
(107,-82,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 43 values pushed */
5 1 4 3 4 134 0 0 0 1 2 0 1 103 0 2 3 3 2 89 0 2 2 3 95 0 3 2 3 79 0 0 0 42 0 41 37 51 38 119 6 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE008;
unicode = 57352;
},
{
glyphname = uniE009;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(229,429,o),
(133,372,o),
(121,329,qs),
(116,312,o),
(138,312,qs),
(156,312,o),
(159,320,q),
(167,335,o),
(240,348,o),
(273,348,q),
(278,347,o),
(278,335,qs),
(278,307,o),
(248,233,qs),
(227,183,o),
(196,134,q),
(129,90,ls),
(64,48,o),
(58,42,qs),
(49,33,o),
(49,22,qs),
(49,-4,o),
(87,-4,qs),
(110,-4,o),
(135,9,q),
(228,70,ls),
(322,130,o),
(506,250,o),
(507,251,q),
(517,257,l),
(515,252,l),
(487,203,o),
(467,147,qs),
(450,94,o),
(450,61,qs),
(450,1,o),
(488,1,qs),
(543,1,o),
(634,56,o),
(650,94,q),
(654,108,o),
(654,109,qs),
(654,119,o),
(634,119,qs),
(618,119,o),
(615,112,qs),
(613,105,o),
(602,100,qs),
(571,87,o),
(521,84,qs),
(501,83,l),
(495,88,o),
(495,94,qs),
(495,103,o),
(499,115,qs),
(529,231,o),
(580,298,q),
(644,340,ls),
(711,384,o),
(714,387,qs),
(724,396,o),
(724,408,qs),
(724,434,o),
(688,434,qs),
(666,434,o),
(641,423,qs),
(627,417,o),
(444,296,qs),
(421,281,o),
(351,235,o),
(314,212,o),
(274,185,o),
(266,180,qs),
(257,175,l),
(263,186,ls),
(308,263,o),
(321,339,qs),
(323,349,o),
(323,368,qs),
(323,429,o),
(285,429,qs),
(282,429,ls)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 85 values pushed */
50 7 2 3 7 39 28 2 2 3 2 76 0 1 0 1 133 0 7 6 3 6 7 3 128 0 3 2 6 3 2 126 0 5 4 5 134 8 1 0 0 6 7 0 6 105 0 2 4 4 2 89 0 2 2 4 97 0 4 2 4 81 1 0 77 75 72 70 59 57 45 43 38 36 32 30 18 16 0 81 1 80 9 6 22 
CALL[ ]	/* CallFunction */";
};
width = 667;
}
);
note = uniE009;
unicode = 57353;
},
{
glyphname = uniE00C;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(660,749,o),
(104,486,o),
(96,482,qs),
(84,476,o),
(83,465,qs),
(83,453,o),
(90,448,qs),
(92,446,o),
(382,309,qs),
(670,173,l),
(676,173,ls),
(694,175,o),
(694,193,qs),
(694,198,o),
(691,204,q),
(687,209,o),
(399,345,qs),
(263,410,o),
(151,463,q),
(315,541,o),
(604,678,o),
(686,717,o),
(687,718,qs),
(694,724,o),
(694,740,o),
(683,753,o),
(674,753,qs),
(671,753,o),
(665,751,qs)
);
},
{
closed = 1;
nodes = (
(84,26,o),
(98,19,q),
(369,19,l),
(369,-135,l),
(99,-135,l),
(83,-145,o),
(83,-157,qs),
(84,-168,o),
(98,-175,q),
(369,-175,l),
(369,-219,ls),
(369,-264,o),
(371,-267,qs),
(377,-277,o),
(388,-277,qs),
(400,-277,o),
(406,-266,qs),
(409,-262,o),
(409,-219,qs),
(409,-175,l),
(679,-175,l),
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(678,-135,q),
(409,-135,l),
(409,19,l),
(679,19,l),
(694,26,o),
(694,52,o),
(678,59,q),
(409,59,l),
(409,103,ls),
(409,145,o),
(406,151,qs),
(403,156,o),
(397,159,q),
(383,169,o),
(371,151,qs),
(369,148,o),
(369,103,qs),
(369,59,l),
(99,59,l),
(84,50,o),
(84,39,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 76 values pushed */
23 9 2 1 0 66 1 5 4 60 1 6 5 3 76 0 0 1 0 133 0 6 5 6 134 2 1 1 9 1 3 4 1 3 103 8 1 4 5 5 4 87 8 1 4 4 5 95 7 1 5 4 5 79 71 70 69 68 64 63 59 57 53 52 48 47 46 45 42 41 31 30 32 10 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE00C;
unicode = 57356;
},
{
glyphname = uniE00D;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,725,o),
(90,718,q),
(626,463,l),
(378,345,ls),
(90,209,o),
(86,204,q),
(83,198,o),
(83,193,qs),
(83,175,o),
(101,173,qs),
(107,173,l),
(395,309,ls),
(685,446,o),
(687,448,qs),
(694,453,o),
(694,473,o),
(687,478,qs),
(686,479,o),
(400,616,o),
(107,753,o),
(99,753,qs),
(92,753,o),
(83,740,o),
(83,734,qs)
);
},
{
closed = 1;
nodes = (
(84,26,o),
(98,19,q),
(369,19,l),
(369,-135,l),
(99,-135,l),
(83,-145,o),
(83,-157,qs),
(84,-168,o),
(98,-175,q),
(369,-175,l),
(369,-219,ls),
(369,-264,o),
(371,-267,qs),
(377,-277,o),
(388,-277,qs),
(400,-277,o),
(406,-266,qs),
(409,-262,o),
(409,-219,qs),
(409,-175,l),
(679,-175,l),
(694,-168,o),
(694,-155,qs),
(694,-145,o),
(678,-135,q),
(409,-135,l),
(409,19,l),
(679,19,l),
(694,26,o),
(694,52,o),
(678,59,q),
(409,59,l),
(409,103,ls),
(409,145,o),
(406,151,qs),
(403,156,o),
(397,159,q),
(383,169,o),
(371,151,qs),
(369,148,o),
(369,103,qs),
(369,59,l),
(99,59,l),
(84,50,o),
(84,39,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 77 values pushed */
23 20 15 3 1 0 61 1 5 4 55 1 6 5 3 76 0 0 1 0 133 0 6 5 6 134 2 1 1 9 1 3 4 1 3 103 8 1 4 5 5 4 87 8 1 4 4 5 95 7 1 5 4 5 79 66 65 64 63 59 58 54 52 48 47 43 42 41 40 37 36 26 25 33 10 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE00D;
unicode = 57357;
},
{
glyphname = uniE00E;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,748,o),
(83,733,qs),
(83,725,o),
(88,720,qs),
(92,716,o),
(278,628,qs),
(465,540,l),
(466,539,o),
(406,360,o),
(404,358,q),
(90,208,l),
(83,202,o),
(83,186,o),
(94,174,o),
(103,174,qs),
(107,174,o),
(190,212,o),
(339,284,o),
(386,305,q),
(386,304,o),
(344,182,qs),
(303,60,l),
(202,60,ls),
(120,60,o),
(94,59,o),
(89,54,qs),
(83,48,o),
(83,40,qs),
(83,28,o),
(94,22,qs),
(98,20,o),
(193,20,qs),
(289,20,l),
(268,-43,o),
(236,-133,q),
(167,-134,ls),
(107,-135,o),
(94,-136,o),
(90,-140,qs),
(83,-146,o),
(83,-154,qs),
(83,-167,o),
(94,-172,qs),
(98,-174,o),
(222,-174,o),
(222,-175,q),
(221,-177,o),
(147,-397,q),
(145,-406,o),
(159,-420,o),
(167,-420,qs),
(180,-420,o),
(185,-406,qs),
(191,-390,ls),
(197,-373,o),
(217,-315,o),
(226,-288,qs),
(265,-174,l),
(473,-174,ls),
(678,-174,o),
(684,-172,q),
(694,-165,o),
(694,-154,qs),
(694,-146,o),
(688,-140,qs),
(683,-135,o),
(637,-134,o),
(477,-134,qs),
(279,-134,o),
(279,-133,q),
(305,-56,l),
(331,20,l),
(506,20,ls),
(678,20,o),
(684,22,q),
(694,29,o),
(694,40,qs),
(694,48,o),
(688,54,qs),
(683,59,o),
(644,60,o),
(510,60,qs),
(345,60,o),
(345,61,q),
(391,195,l),
(437,329,l),
(558,386,ls),
(685,446,o),
(689,450,qs),
(702,465,o),
(687,478,q),
(686,480,o),
(656,494,o),
(566,536,o),
(516,561,q),
(532,609,o),
(593,787,o),
(612,842,qs),
(630,897,ls),
(631,900,o),
(631,901,qs),
(631,908,o),
(617,920,o),
(609,920,qs),
(598,920,o),
(591,905,q),
(479,578,l),
(107,753,o),
(106,753,qs),
(98,753,l)
);
},
{
closed = 1;
nodes = (
(626,463,o),
(455,382,q),
(455,384,o),
(504,522,q),
(627,463,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 15 values pushed */
14 2 2 11 0 81 1 3 2 68 1 5 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 133 12 1 0 11 0 133 0 11 2 11 133 0 6 5 6 134 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 89 8 1 4 4 5 97 7 1 5 4 5 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 1 0 1 133 12 1 0 11 0 133 0 11 2 11 133 0 6 7 6 134 10 1 2 9 1 3 4 2 3 103 8 1 4 0 5 7 4 5 103 8 1 4 4 7 97 0 7 4 7 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 1 0 1 133 12 1 0 11 0 133 0 11 2 11 133 0 6 5 6 134 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 89 8 1 4 4 5 97 7 1 5 4 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
1 0 95 93 87 84 78 76 74 72 65 62 58 57 51 48 43 39 37 34 29 25 5 4 0 109 1 109 13 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE00E;
unicode = 57358;
},
{
glyphname = uniE00F;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(94,637,o),
(83,624,o),
(83,617,qs),
(83,604,o),
(97,598,q),
(106,592,o),
(443,434,q),
(443,433,o),
(354,219,o),
(353,217,q),
(352,217,o),
(91,93,o),
(90,91,q),
(83,85,o),
(83,69,o),
(94,57,o),
(103,57,qs),
(108,57,o),
(330,162,q),
(330,158,o),
(291,68,qs),
(253,-25,l),
(173,-63,ls),
(91,-100,o),
(90,-103,q),
(83,-109,o),
(83,-125,o),
(94,-137,o),
(103,-137,qs),
(110,-137,o),
(229,-80,q),
(229,-81,o),
(189,-177,qs),
(146,-279,o),
(146,-282,qs),
(146,-290,o),
(159,-303,o),
(175,-303,o),
(181,-297,qs),
(183,-295,o),
(239,-161,qs),
(283,-54,l),
(465,32,ls),
(685,136,o),
(688,138,q),
(694,144,o),
(694,151,qs),
(694,159,o),
(682,172,o),
(674,172,qs),
(670,172,l),
(579,129,ls),
(488,86,o),
(307,1,o),
(307,2,q),
(345,95,l),
(384,188,l),
(515,249,ls),
(681,328,o),
(688,332,q),
(694,338,o),
(694,356,o),
(687,361,q),
(687,362,o),
(648,381,o),
(592,408,o),
(536,434,o),
(516,444,qs),
(496,453,l),
(495,453,o),
(534,548,o),
(593,690,o),
(621,757,o),
(630,778,qs),
(631,780,o),
(631,783,qs),
(631,792,o),
(618,803,o),
(611,803,qs),
(602,803,o),
(596,797,qs),
(593,794,o),
(520,619,qs),
(459,470,l),
(448,478,o),
(109,637,o),
(102,637,qs)
);
},
{
closed = 1;
nodes = (
(626,345,o),
(408,243,q),
(407,244,o),
(479,416,o),
(480,416,q),
(627,346,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
10 1 5 0 83 2 2 1 5 31 1 3 4 3 76 0 0 5 0 133 6 1 5 1 5 133 0 1 4 1 133 0 4 3 4 133 0 3 2 3 133 0 2 2 118 0 0 0 86 0 85 70 68 58 56 49 48 37 35 22 7 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE00F;
unicode = 57359;
},
{
glyphname = uniE010;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,168,o),
(83,152,qs),
(83,144,o),
(88,139,qs),
(91,136,o),
(188,91,o),
(281,47,o),
(281,43,o),
(147,-278,o),
(147,-280,q),
(145,-288,o),
(159,-302,o),
(167,-302,qs),
(180,-302,o),
(184,-292,q),
(185,-291,o),
(252,-131,o),
(318,28,o),
(319,28,q),
(665,-137,o),
(683,-137,o),
(694,-125,o),
(694,-109,o),
(687,-103,q),
(686,-101,o),
(510,-17,o),
(422,24,qs),
(334,66,l),
(334,67,o),
(384,188,q),
(386,191,l),
(527,124,ls),
(669,57,o),
(674,57,qs),
(683,57,o),
(694,69,o),
(694,85,o),
(687,91,q),
(686,93,o),
(543,161,o),
(401,227,o),
(401,228,q),
(462,376,l),
(524,524,l),
(585,552,ls),
(684,599,o),
(688,602,qs),
(694,608,o),
(694,616,qs),
(694,631,o),
(679,636,q),
(671,636,ls),
(670,636,o),
(552,581,o),
(548,579,q),
(560,608,ls),
(571,637,o),
(607,723,o),
(624,764,o),
(629,777,qs),
(630,779,o),
(630,784,qs),
(630,792,o),
(618,802,o),
(610,802,qs),
(597,802,o),
(593,792,qs),
(592,790,o),
(493,554,o),
(493,553,q),
(492,553,o),
(91,362,o),
(90,361,qs),
(75,348,o),
(88,333,qs),
(92,329,o),
(222,268,o),
(348,209,o),
(348,208,q),
(349,207,o),
(299,86,o),
(297,83,q),
(292,86,o),
(107,172,o),
(106,172,qs),
(98,172,l)
);
},
{
closed = 1;
nodes = (
(151,347,o),
(310,422,qs),
(470,498,l),
(418,372,ls),
(365,247,o),
(365,245,q),
(150,347,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 63 values pushed */
89 54 43 36 30 5 0 2 66 1 4 3 2 76 0 1 2 1 133 0 2 0 2 133 6 1 0 3 0 133 0 3 4 3 133 0 4 5 4 133 0 5 5 118 1 0 72 71 65 64 51 50 34 32 20 19 0 85 1 85 7 6 22 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE010;
unicode = 57360;
},
{
glyphname = uniE011;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(145,-406,o),
(159,-420,o),
(167,-420,qs),
(180,-420,o),
(185,-406,qs),
(191,-390,ls),
(197,-373,o),
(217,-315,o),
(226,-288,qs),
(265,-174,l),
(473,-174,ls),
(678,-174,o),
(684,-172,q),
(694,-165,o),
(694,-154,qs),
(694,-146,o),
(688,-140,qs),
(683,-135,o),
(637,-134,o),
(477,-134,qs),
(279,-134,o),
(279,-133,q),
(305,-56,l),
(331,20,l),
(506,20,ls),
(678,20,o),
(684,22,q),
(694,29,o),
(694,40,qs),
(694,48,o),
(688,54,qs),
(683,59,o),
(644,60,o),
(510,60,qs),
(345,60,l),
(347,63,o),
(423,289,o),
(423,290,q),
(667,174,o),
(674,174,qs),
(683,174,o),
(694,186,o),
(694,202,o),
(687,208,qs),
(684,211,o),
(559,270,o),
(437,328,o),
(437,330,o),
(492,491,qs),
(547,651,l),
(613,682,ls),
(677,714,o),
(683,716,q),
(694,722,o),
(694,733,qs),
(694,741,o),
(683,754,o),
(675,754,qs),
(672,754,o),
(670,753,q),
(669,753,o),
(566,705,o),
(565,704,q),
(565,706,o),
(630,894,o),
(630,897,q),
(631,900,o),
(631,901,qs),
(631,908,o),
(617,920,o),
(609,920,qs),
(598,920,o),
(591,905,qs),
(586,891,o),
(545,771,o),
(514,681,o),
(514,680,q),
(90,478,l),
(83,471,o),
(83,463,qs),
(83,456,o),
(90,449,qs),
(93,446,o),
(242,375,o),
(386,307,o),
(386,306,qs),
(386,304,o),
(344,182,qs),
(303,60,l),
(202,60,ls),
(120,60,o),
(94,59,o),
(89,54,qs),
(83,48,o),
(83,40,qs),
(83,28,o),
(94,22,qs),
(98,20,o),
(193,20,qs),
(289,20,l),
(268,-43,o),
(236,-133,q),
(167,-134,ls),
(107,-135,o),
(94,-136,o),
(90,-140,qs),
(83,-146,o),
(83,-154,qs),
(83,-167,o),
(94,-172,qs),
(98,-174,o),
(222,-174,o),
(222,-175,q),
(221,-177,o),
(147,-397,q)
);
},
{
closed = 1;
nodes = (
(150,463,l),
(439,599,o),
(495,627,q),
(496,627,o),
(496,626,qs),
(496,624,o),
(400,348,o),
(400,346,q),
(275,404,l)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
122 76 2 5 4 19 1 2 3 6 1 0 1 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 15 values pushed */
122 76 2 5 4 19 1 2 3 6 1 9 1 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 15 values pushed */
122 76 2 5 4 19 1 2 3 6 1 0 1 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 4 5 4 133 0 5 3 5 133 0 10 0 10 134 6 1 3 7 1 2 1 3 2 103 8 1 1 0 0 1 89 8 1 1 1 0 97 9 1 0 1 0 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
0 4 5 4 133 0 5 3 5 133 0 10 0 10 134 6 1 3 7 1 2 1 3 2 103 8 1 1 0 9 0 1 9 103 8 1 1 1 0 97 0 0 1 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 44 values pushed */
0 4 5 4 133 0 5 3 5 133 0 10 0 10 134 6 1 3 7 1 2 1 3 2 103 8 1 1 0 0 1 89 8 1 1 1 0 97 9 1 0 1 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
111 110 104 101 96 92 90 87 82 78 74 73 43 42 54 34 39 48 11 6 26 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE011;
unicode = 57361;
},
{
glyphname = uniE016;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(245,-21,o),
(245,-23,q),
(210,-100,l),
(177,-175,l),
(137,-175,ls),
(98,-175,o),
(94,-177,qs),
(84,-184,o),
(84,-206,o),
(94,-213,qs),
(98,-215,o),
(158,-215,o),
(158,-217,q),
(156,-223,ls),
(153,-229,o),
(143,-251,o),
(138,-261,qs),
(119,-303,o),
(119,-310,qs),
(119,-318,o),
(132,-328,o),
(139,-328,qs),
(148,-328,o),
(153,-322,qs),
(155,-320,o),
(186,-252,qs),
(202,-215,l),
(679,-215,l),
(694,-208,o),
(694,-182,o),
(679,-175,q),
(450,-175,ls),
(221,-175,o),
(221,-174,q),
(255,-97,l),
(289,-21,l),
(485,-21,l),
(681,-20,l),
(694,-11,o),
(694,-1,qs),
(694,10,o),
(681,19,q),
(494,19,l),
(307,20,l),
(376,173,l),
(528,173,l),
(681,174,l),
(694,183,o),
(694,193,qs),
(694,206,o),
(679,213,q),
(536,213,ls),
(394,213,o),
(394,214,q),
(506,464,l),
(617,713,l),
(648,713,ls),
(679,713,o),
(683,715,qs),
(694,722,o),
(694,733,qs),
(694,738,o),
(691,744,q),
(690,745,o),
(688,747,qs),
(683,753,o),
(669,753,qs),
(657,753,ls),
(636,753,o),
(636,754,q),
(647,779,ls),
(658,804,o),
(658,810,qs),
(658,826,o),
(639,828,qs),
(632,828,o),
(630,826,q),
(625,824,o),
(617,810,o),
(601,775,qs),
(592,753,l),
(483,753,ls),
(370,753,o),
(362,752,qs),
(262,744,o),
(108,614,o),
(89,522,qs),
(84,498,o),
(84,463,qs),
(84,417,o),
(95,383,qs),
(115,315,o),
(216,214,o),
(286,190,qs),
(301,185,o),
(329,178,q),
(332,178,o),
(333,176,q),
(328,166,ls),
(324,156,o),
(305,114,o),
(298,97,qs),
(264,19,l),
(98,19,l),
(84,12,o),
(84,-14,o),
(98,-21,q),
(172,-21,ls)
);
},
{
closed = 1;
nodes = (
(352,216,l),
(346,216,l),
(266,228,o),
(149,332,o),
(131,403,qs),
(124,429,o),
(124,497,o),
(131,523,qs),
(150,601,o),
(278,704,o),
(369,712,q),
(386,712,ls),
(402,712,o),
(452,713,o),
(474,713,qs),
(524,713,o),
(573,712,q),
(462,464,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
123 1 4 3 9 1 5 4 2 76 34 1 1 74 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 10 9 9 10 113 2 1 1 14 1 3 4 1 3 103 0 4 0 5 0 4 5 103 6 1 0 15 13 2 7 8 0 7 103 12 1 8 9 9 8 87 12 1 8 8 9 97 11 1 9 8 9 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 10 9 10 134 2 1 1 14 1 3 4 1 3 103 0 4 0 5 0 4 5 103 6 1 0 15 13 2 7 8 0 7 103 12 1 8 9 9 8 87 12 1 8 8 9 97 11 1 9 8 9 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
0 0 114 108 0 107 0 105 103 100 96 95 85 84 80 79 76 73 71 69 65 63 62 60 56 53 51 48 41 37 26 24 19 16 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE016;
unicode = 57366;
},
{
glyphname = uniE017;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,428,o),
(89,405,qs),
(106,320,o),
(241,194,o),
(329,179,qs),
(355,174,o),
(445,173,qs),
(530,173,l),
(482,95,o),
(431,20,q),
(264,19,l),
(96,19,l),
(83,10,o),
(83,-1,qs),
(83,-11,o),
(96,-20,q),
(251,-21,l),
(405,-21,l),
(389,-46,o),
(324,-150,o),
(307,-175,q),
(98,-175,l),
(84,-182,o),
(84,-208,o),
(98,-215,q),
(280,-215,l),
(227,-299,ls),
(226,-301,o),
(226,-305,qs),
(226,-313,o),
(238,-326,o),
(245,-326,qs),
(250,-326,o),
(255,-323,qs),
(260,-321,o),
(294,-268,qs),
(328,-215,l),
(504,-215,l),
(681,-214,l),
(694,-205,o),
(694,-195,qs),
(694,-184,o),
(681,-175,q),
(517,-175,l),
(354,-174,l),
(453,-21,l),
(567,-21,l),
(681,-20,l),
(694,-11,o),
(694,-1,qs),
(694,10,o),
(681,19,q),
(580,19,l),
(479,20,l),
(578,173,l),
(679,173,l),
(694,180,o),
(694,193,qs),
(694,204,o),
(683,211,qs),
(679,213,o),
(641,213,qs),
(604,213,l),
(657,297,ls),
(658,299,o),
(658,304,qs),
(658,322,o),
(640,324,qs),
(634,324,o),
(629,321,qs),
(625,319,o),
(590,266,qs),
(556,214,l),
(460,214,ls),
(355,214,o),
(328,220,qs),
(299,226,o),
(266,241,qs),
(211,269,o),
(135,366,o),
(125,429,qs),
(124,437,o),
(124,463,qs),
(124,490,o),
(125,498,qs),
(138,578,o),
(248,687,o),
(329,707,qs),
(336,708,o),
(337,709,q),
(354,712,o),
(522,713,qs),
(681,714,l),
(694,723,o),
(694,733,qs),
(694,746,o),
(679,753,q),
(524,753,ls),
(500,753,o),
(450,753,o),
(411,752,o),
(380,752,o),
(361,752,o),
(360,752,qs),
(245,740,o),
(84,582,o),
(84,463,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
40 1 2 1 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 9 8 8 9 113 0 0 0 1 2 0 1 103 3 1 2 14 1 4 5 2 4 103 13 1 5 12 1 6 7 5 6 103 11 1 7 8 8 7 87 11 1 7 7 8 95 10 1 8 7 8 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 52 values pushed */
0 9 8 9 134 0 0 0 1 2 0 1 103 3 1 2 14 1 4 5 2 4 103 13 1 5 12 1 6 7 5 6 103 11 1 7 8 8 7 87 11 1 7 7 8 95 10 1 8 7 8 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
100 98 96 94 90 88 85 84 81 80 75 73 69 67 63 61 60 58 54 52 51 50 45 43 33 31 36 114 15 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE017;
unicode = 57367;
},
{
glyphname = uniE018;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,723,o),
(96,714,q),
(255,713,ls),
(393,712,o),
(429,711,o),
(449,706,qs),
(480,700,o),
(513,684,qs),
(550,667,o),
(550,661,qs),
(550,659,o),
(450,437,qs),
(350,214,l),
(223,213,l),
(96,213,l),
(83,204,o),
(83,193,qs),
(83,180,o),
(98,173,q),
(215,173,ls),
(332,173,o),
(332,172,q),
(298,95,l),
(264,19,l),
(98,19,l),
(84,12,o),
(84,-14,o),
(98,-21,q),
(172,-21,ls),
(245,-21,o),
(245,-23,q),
(210,-100,l),
(177,-175,l),
(137,-175,ls),
(98,-175,o),
(94,-177,qs),
(84,-184,o),
(84,-206,o),
(94,-213,qs),
(98,-215,o),
(158,-215,o),
(158,-217,q),
(156,-223,ls),
(153,-229,o),
(143,-251,o),
(138,-261,qs),
(119,-303,o),
(119,-310,qs),
(119,-318,o),
(132,-328,o),
(139,-328,qs),
(148,-328,o),
(153,-322,qs),
(155,-320,o),
(186,-252,qs),
(202,-215,l),
(679,-215,l),
(694,-208,o),
(694,-182,o),
(679,-175,q),
(450,-175,ls),
(221,-175,o),
(221,-174,q),
(255,-97,l),
(289,-21,l),
(485,-21,l),
(681,-20,l),
(694,-11,o),
(694,-1,qs),
(694,10,o),
(681,19,q),
(494,19,l),
(307,20,l),
(376,173,l),
(396,173,ls),
(421,174,o),
(445,178,qs),
(534,193,o),
(670,319,o),
(688,405,qs),
(693,428,o),
(693,498,o),
(688,522,qs),
(670,607,o),
(607,667,q),
(600,672,o),
(600,674,q),
(658,801,o),
(658,811,qs),
(658,826,o),
(639,828,qs),
(632,828,o),
(630,826,q),
(624,823,o),
(617,810,o),
(592,755,qs),
(569,699,o),
(567,699,q),
(557,705,ls),
(495,744,o),
(415,752,qs),
(408,753,o),
(251,753,qs),
(98,753,l),
(83,746,o),
(83,733,qs)
);
},
{
closed = 1;
nodes = (
(581,633,o),
(582,634,q),
(584,634,o),
(591,624,q),
(640,571,o),
(652,498,qs),
(654,482,o),
(654,463,qs),
(654,445,o),
(652,429,qs),
(640,356,o),
(592,302,qs),
(518,221,o),
(404,213,qs),
(394,213,o),
(394,214,q),
(395,215,o),
(482,411,o),
(575,619,o),
(581,631,q)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
18 7 2 14 13 1 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
PUSHB[ ]	/* 7 values pushed */
18 7 2 12 13 1 76 
ELSE[ ]	/* Else */
PUSHB[ ]	/* 7 values pushed */
18 7 2 14 13 1 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 6 5 5 6 113 0 0 0 13 14 0 13 103 0 14 12 1 14 89 0 12 11 1 1 2 12 1 105 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 87 8 1 4 4 5 97 7 1 5 4 5 81 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 6 5 5 6 113 0 0 0 13 12 0 13 103 14 1 12 11 1 1 2 12 1 105 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 87 8 1 4 4 5 97 7 1 5 4 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 57 values pushed */
0 6 5 6 134 0 0 0 13 14 0 13 103 0 14 12 1 14 89 0 12 11 1 1 2 12 1 105 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 87 8 1 4 4 5 97 7 1 5 4 5 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
112 111 103 100 92 90 86 83 81 80 77 74 72 69 65 64 54 53 49 48 45 42 40 38 34 32 31 29 33 15 6 23 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE018;
unicode = 57368;
},
{
glyphname = uniE019;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,723,o),
(96,714,q),
(255,713,ls),
(393,712,o),
(429,711,o),
(449,706,qs),
(477,700,o),
(512,685,q),
(567,657,o),
(642,560,o),
(652,498,qs),
(654,482,o),
(654,463,qs),
(654,445,o),
(652,429,qs),
(642,367,o),
(567,269,o),
(512,241,qs),
(457,216,o),
(394,213,qs),
(373,213,o),
(373,214,q),
(375,216,o),
(391,258,qs),
(408,299,o),
(408,306,qs),
(408,314,o),
(395,324,o),
(388,324,qs),
(380,324,o),
(375,319,qs),
(370,313,o),
(349,260,qs),
(330,213,l),
(98,213,l),
(84,206,o),
(84,180,o),
(98,173,q),
(206,173,ls),
(313,173,o),
(313,172,q),
(282,96,l),
(250,20,l),
(173,19,l),
(96,19,l),
(83,10,o),
(83,-1,qs),
(83,-11,o),
(96,-20,q),
(165,-21,l),
(234,-21,l),
(207,-87,ls),
(201,-101,o),
(185,-140,o),
(176,-161,o),
(175,-164,qs),
(171,-175,l),
(135,-175,ls),
(98,-175,o),
(94,-177,qs),
(84,-184,o),
(84,-206,o),
(94,-213,qs),
(98,-215,o),
(154,-215,o),
(154,-216,q),
(137,-258,ls),
(119,-301,o),
(119,-306,qs),
(119,-314,o),
(131,-326,o),
(139,-326,qs),
(151,-326,o),
(155,-317,q),
(159,-312,o),
(178,-264,qs),
(198,-215,l),
(679,-215,l),
(694,-208,o),
(694,-195,qs),
(694,-184,o),
(681,-175,q),
(447,-175,l),
(214,-174,l),
(277,-21,l),
(479,-21,l),
(681,-20,l),
(694,-11,o),
(694,-1,qs),
(694,12,o),
(679,19,q),
(486,19,ls),
(294,19,o),
(294,20,q),
(325,97,l),
(356,173,l),
(380,173,ls),
(416,173,o),
(442,178,qs),
(533,193,o),
(670,318,o),
(688,405,qs),
(693,428,o),
(693,498,o),
(688,522,qs),
(669,615,o),
(516,742,o),
(415,752,qs),
(408,753,o),
(251,753,qs),
(98,753,l),
(83,746,o),
(83,733,qs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 13 15 12 12 13 114 0 6 5 5 6 113 0 0 0 15 13 0 15 103 14 1 12 11 1 1 2 12 1 106 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 87 8 1 4 4 5 97 7 1 5 4 5 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 60 values pushed */
0 13 15 12 15 13 12 128 0 6 5 6 134 0 0 0 15 13 0 15 103 14 1 12 11 1 1 2 12 1 106 10 1 2 9 1 3 4 2 3 103 8 1 4 5 5 4 87 8 1 4 4 5 97 7 1 5 4 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
110 107 93 92 84 82 78 77 74 71 69 67 63 61 52 38 20 20 33 36 50 43 33 16 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE019;
unicode = 57369;
},
{
glyphname = uniE01A;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(84,311,o),
(89,288,qs),
(107,201,o),
(246,75,o),
(338,60,qs),
(365,56,o),
(400,56,qs),
(426,56,o),
(426,55,q),
(362,-22,l),
(298,-98,l),
(118,-98,l),
(103,-105,o),
(103,-118,qs),
(103,-128,o),
(116,-137,q),
(190,-138,l),
(264,-138,l),
(231,-177,ls),
(197,-219,o),
(196,-221,qs),
(194,-227,o),
(194,-229,qs),
(194,-246,o),
(212,-249,q),
(218,-249,o),
(222,-247,qs),
(228,-243,o),
(272,-191,qs),
(317,-138,l),
(679,-138,l),
(694,-130,o),
(694,-106,o),
(679,-98,q),
(515,-98,ls),
(351,-98,o),
(351,-97,q),
(415,-20,l),
(479,56,l),
(679,56,l),
(694,63,o),
(694,76,qs),
(694,87,o),
(681,96,q),
(597,96,l),
(513,97,l),
(546,136,ls),
(580,175,o),
(581,179,qs),
(583,183,o),
(583,187,qs),
(583,195,o),
(572,207,o),
(564,207,qs),
(561,207,o),
(555,205,qs),
(550,203,o),
(505,149,qs),
(461,96,l),
(412,96,ls),
(351,97,o),
(328,103,qs),
(299,109,o),
(266,124,qs),
(211,152,o),
(135,249,o),
(125,312,qs),
(124,320,o),
(124,346,qs),
(124,373,o),
(125,381,qs),
(138,461,o),
(248,570,o),
(329,590,qs),
(336,591,o),
(337,592,q),
(354,595,o),
(522,596,qs),
(681,597,l),
(694,606,o),
(694,616,qs),
(694,629,o),
(679,636,q),
(524,636,ls),
(500,636,o),
(450,636,o),
(411,636,o),
(380,635,o),
(361,635,o),
(360,635,qs),
(245,623,o),
(84,465,o),
(84,346,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 4 values pushed */
69 1 7 73 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 3 1 2 2 3 114 0 0 0 1 3 0 1 103 4 1 2 10 1 5 6 2 5 106 9 1 6 7 7 6 87 9 1 6 6 7 95 8 1 7 6 7 79 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 3 1 2 1 3 2 128 0 0 0 1 3 0 1 103 4 1 2 10 1 5 6 2 5 106 9 1 6 7 7 6 87 9 1 6 6 7 95 8 1 7 6 7 79 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 23 values pushed */
86 83 81 80 76 74 62 61 58 55 53 52 48 46 39 37 33 31 36 114 11 6 24 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE01A;
unicode = 57370;
},
{
glyphname = uniE01B;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(83,606,o),
(96,597,q),
(255,596,ls),
(393,595,o),
(429,594,o),
(449,589,qs),
(477,583,o),
(512,568,q),
(567,540,o),
(642,443,o),
(652,381,qs),
(654,365,o),
(654,346,qs),
(654,328,o),
(652,312,qs),
(640,239,o),
(592,185,qs),
(550,140,o),
(445,96,o),
(366,96,qs),
(360,96,o),
(354,96,o),
(347,96,o),
(346,96,q),
(345,97,l),
(345,98,o),
(398,178,o),
(398,179,q),
(400,181,o),
(400,187,qs),
(400,196,o),
(389,207,o),
(381,207,qs),
(379,207,o),
(373,205,qs),
(370,204,o),
(364,198,o),
(356,187,o),
(349,176,o),
(336,156,o),
(330,148,qs),
(296,96,l),
(98,96,l),
(84,89,o),
(84,63,o),
(98,56,q),
(269,56,l),
(252,30,o),
(184,-72,o),
(167,-98,q),
(132,-98,ls),
(98,-98,o),
(94,-100,qs),
(84,-107,o),
(84,-129,o),
(94,-136,qs),
(98,-138,o),
(119,-138,qs),
(139,-138,o),
(139,-139,q),
(111,-181,l),
(84,-222,l),
(84,-229,ls),
(84,-249,o),
(102,-249,qs),
(106,-249,o),
(112,-247,q),
(117,-244,o),
(152,-191,qs),
(188,-138,l),
(659,-138,l),
(674,-130,o),
(674,-106,o),
(659,-98,q),
(437,-98,ls),
(215,-98,o),
(215,-97,q),
(266,-20,l),
(317,56,l),
(360,56,ls),
(413,56,o),
(442,61,qs),
(533,76,o),
(670,201,o),
(688,288,qs),
(693,311,o),
(693,381,o),
(688,405,qs),
(669,498,o),
(516,625,o),
(415,635,qs),
(408,636,o),
(251,636,qs),
(98,636,l),
(83,629,o),
(83,616,qs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
65 1 8 9 32 1 4 3 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
12 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 9 11 8 8 9 114 0 4 3 3 4 113 0 0 0 11 9 0 11 103 10 1 8 7 1 1 2 8 1 106 6 1 2 3 3 2 87 6 1 2 2 3 97 5 1 3 2 3 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 50 values pushed */
0 9 11 8 11 9 8 128 0 4 3 4 134 0 0 0 11 9 0 11 103 10 1 8 7 1 1 2 8 1 106 6 1 2 3 3 2 87 6 1 2 2 3 97 5 1 3 2 3 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
93 90 76 73 63 61 19 19 52 52 36 19 50 43 33 12 6 31 
CALL[ ]	/* CallFunction */";
};
width = 778;
}
);
note = uniE01B;
unicode = 57371;
},
{
glyphname = uni21AF;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(263,700,o),
(237,700,o),
(230,680,q),
(230,-179,l),
(237,-193,o),
(263,-193,o),
(270,-179,q),
(270,680,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 23 values pushed */
7 4 3 0 4 0 1 1 76 0 1 0 1 133 0 0 0 118 19 17 2 6 24 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = uni21AF;
unicode = 8623;
},
{
glyphname = colon;
lastChange = "2023-02-21 16:32:26 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(175,274,o),
(184,276,qs),
(212,285,o),
(245,330,o),
(245,358,qs),
(245,383,o),
(232,403,qs),
(208,444,o),
(158,444,qs),
(123,444,o),
(74,393,o),
(74,325,o),
(120,274,o),
(160,274,qs)
);
},
{
closed = 1;
nodes = (
(175,1,o),
(184,3,qs),
(212,12,o),
(245,57,o),
(245,85,qs),
(245,110,o),
(232,130,qs),
(208,171,o),
(156,171,qs),
(147,171,o),
(143,170,qs),
(113,162,o),
(74,116,o),
(74,85,qs),
(74,44,o),
(105,20,qs),
(128,1,o),
(160,1,qs)
);
},
{
closed = 1;
nodes = (
(141,36,o),
(128,47,qs),
(110,61,o),
(110,85,qs),
(110,103,o),
(133,131,o),
(150,135,qs),
(152,136,o),
(158,136,qs),
(188,136,o),
(202,112,qs),
(210,100,o),
(210,85,qs),
(210,69,o),
(190,42,o),
(174,38,qs),
(169,36,o),
(160,36,qs)
);
},
{
closed = 1;
nodes = (
(141,309,o),
(128,320,qs),
(110,334,o),
(110,358,qs),
(110,376,o),
(133,404,o),
(150,408,qs),
(152,409,o),
(158,409,qs),
(188,409,o),
(202,385,qs),
(210,373,o),
(210,358,qs),
(210,342,o),
(190,315,o),
(174,311,qs),
(169,309,o),
(160,309,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
27 18 11 2 2 50 
CALL[ ]	/* CallFunction */";
};
width = 239;
}
);
note = colon;
unicode = 65109;
},
{
glyphname = semicolon;
lastChange = "2023-02-21 16:31:09 +0000";
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(130,-194,o),
(140,-194,o),
(153,-183,qs),
(197,-141,o),
(248,-25,o),
(248,38,qs),
(248,89,o),
(212,158,o),
(181,168,qs),
(172,171,o),
(158,171,qs),
(121,171,o),
(74,122,o),
(74,50,o),
(122,0,o),
(158,0,qs),
(170,0,o),
(193,6,q),
(195,6,o),
(194,3,q),
(189,-32,o),
(177,-58,qs),
(160,-103,o),
(122,-141,qs),
(119,-144,o),
(112,-152,o),
(107,-157,o),
(107,-158,q),
(106,-160,l),
(106,-163,o),
(106,-164,qs),
(106,-171,o),
(120,-185,qs)
);
},
{
closed = 1;
nodes = (
(138,36,o),
(125,47,qs),
(108,61,o),
(108,85,qs),
(108,103,o),
(130,131,o),
(146,135,qs),
(148,136,o),
(154,136,qs),
(182,136,o),
(196,112,qs),
(203,100,o),
(203,85,q),
(203,69,o),
(184,42,o),
(169,38,qs),
(164,36,o),
(156,36,qs)
);
},
{
closed = 1;
nodes = (
(175,274,o),
(184,276,qs),
(212,285,o),
(245,330,o),
(245,358,qs),
(245,383,o),
(232,403,qs),
(208,444,o),
(158,444,qs),
(123,444,o),
(74,393,o),
(74,325,o),
(120,274,o),
(160,274,qs)
);
},
{
closed = 1;
nodes = (
(141,309,o),
(128,320,qs),
(110,334,o),
(110,358,qs),
(110,376,o),
(133,404,o),
(150,408,qs),
(152,409,o),
(158,409,qs),
(188,409,o),
(202,385,qs),
(210,373,o),
(210,358,qs),
(210,342,o),
(190,315,o),
(174,311,qs),
(169,309,o),
(160,309,qs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
26 16 11 2 2 50 
CALL[ ]	/* CallFunction */";
};
width = 319;
}
);
note = semicolon;
unicode = 65108;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = postscriptFullName;
value = "KaTeX_AMS-Regular";
},
{
key = postscriptFontName;
value = "KaTeX_AMS-Regular";
}
);
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "Copyright (c) 2009-2010 Design Science, Inc.
Copyright (c) 2014-2018 Khan Academy";
}
);
},
{
key = licenseURL;
value = "http://scripts.sil.org/OFL";
},
{
key = licenses;
values = (
{
language = ENG;
value = "Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)
Copyright (c) 2014-2018 Khan Academy (<www.khanacademy.org>),
with Reserved Font Name KaTeX_AMS.

This Font Software is licensed under the SIL Open Font License, Version 1.1.
This license available with a FAQ at:
http://scripts.sil.org/OFL";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
